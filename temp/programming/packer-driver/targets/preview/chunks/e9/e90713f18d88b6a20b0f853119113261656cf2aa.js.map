{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/starlight/viewModel/FooterViewModel.ts"],"names":["sys","ViewModel","StoreInject","getStore","AutoLauncherViewModel","starlight_Audio","sourceManageSeletor","PrefabPathDefine","EffectType","BaseViewModel","SKT_MAG_TYPE","sktInstance","beginRollAction","setSmallBox","dataTransfer","DataKeyType","AutoLauncherType","GameType","changeAutoLauncherType","changeIsHasten","changeProfit","changebetAmount","setAutoLaunchedTimes","setShowAuthLaunch","setWaiting","SoundPathDefine","global","lang","addToastAction","FooterViewModel","constructor","autoLauncherPanel","helpPanelPanel","positionId","betAmount","ante","begin","mountView","getFile","AUTO_LAUNCHER","source","appendTo","viewNode","parent","connect","setEvent","openAutoLauncher","dispatch","closeAutoLauncher","isClear","NONE","openHelpPanel","playOneShot","BUTTONCLICK","INTRODUCE","effectType","EFFECT1","isModal","setProps","closeHandler","unMount","changeBetAmount","value","bet","manualBetHandler","isHasten","bl","comp","props","balance","hallDispatch","content","write","k","palyingModule","RechangeGlod","placeStr","openShop","GAME_TYPE","MAIN","sendSktMessage","LAUNCHER_BET","tableId","JSON","parse","localStorage","getItem","buy","getState","game","gameMode","ROLLER_BEGIN","inject","autoLauncherType","state","isRollEnd","roller","roundAllEnd","profit","subGameTimes","remainSubGameTimes","currGameType","viewGameType","isShowAutoLaunch","autoLaunchedTimes","apostille"],"mappings":"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","sourcesContent":["import { Node, Animation, sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { Starlight_Footer, IProps, IEvent } from \"../components/Starlight_Footer\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from \"../store\"\r\nimport AutoLauncherViewModel from \"./AutoLauncherViewModel\"\r\nimport { starlight_Audio, sourceManageSeletor } from \"../index\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\"\r\nimport { Starlight_HelpPanel, IProps as FIProps, IState as FIState, IEvent as FIEvent } from \"../components/Starlight_HelpPanel\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { beginRollAction, setRollSpeed, setSmallBox } from \"../store/actions/roller\"\r\nimport dataTransfer, { DataKeyType } from \"../dataTransfer\"\r\nimport { AutoLauncherType, GameType } from \"../type\"\r\nimport { changeAutoLauncherType, changeGame, changeIsHasten, changeProfit, changebetAmount, setAutoLaunchedTimes, setShowAuthLaunch, setWaiting } from \"../store/actions/game\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\nimport RollerPanelViewModel from \"./RollerPanelViewModel\"\r\nimport { log } from \"../../../common/fish/CalculteRule\"\r\n\r\n@StoreInject(getStore())\r\nclass FooterViewModel extends ViewModel<Starlight_Footer, IProps, IEvent> {\r\n  constructor() {\r\n    super('Starlight_Footer')\r\n  }\r\n  public autoLauncherPanel: AutoLauncherViewModel\r\n  public helpPanelPanel: BaseViewModel<Starlight_HelpPanel, FIState, FIProps, FIEvent>\r\n  private positionId: number = 0\r\n  private betAmount: number = 0\r\n  private ante: number = 0\r\n\r\n  protected begin() {\r\n\r\n    this.autoLauncherPanel = new AutoLauncherViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.AUTO_LAUNCHER).source).appendTo(this.viewNode.parent).connect()\r\n    //  this.autoLauncherPanel.viewNode.getComponent(UIOpacity).opacity = 0\r\n    this.setEvent({\r\n      openAutoLauncher: () => {\r\n        this.dispatch(setShowAuthLaunch(true));\r\n        // (this.comp.getPropertyNode().props_down_chooseBg as Node).getComponent(Animation).play('animation_autoLauncher_up')\r\n      },\r\n      closeAutoLauncher: (isClear) => {\r\n        this.dispatch(setShowAuthLaunch(false));\r\n        isClear && this.dispatch(changeAutoLauncherType(AutoLauncherType.NONE))\r\n        isClear && this.dispatch(setAutoLaunchedTimes(0));\r\n        // isClear && this.dispatch(setRollSpeed(1));\r\n        // isClear && (this.comp.getPropertyNode().props_down_chooseBg as Node).getComponent(Animation).play('animation_autoLauncher_down')\r\n      },\r\n      openHelpPanel: () => {\r\n        starlight_Audio.playOneShot(SoundPathDefine.BUTTONCLICK)\r\n        this.helpPanelPanel = new BaseViewModel<Starlight_HelpPanel, FIState, FIProps, FIEvent>(\"Starlight_HelpPanel\").mountView(sourceManageSeletor().getFile(PrefabPathDefine.INTRODUCE).source)\r\n          .appendTo(this.viewNode.parent, { effectType: EffectType.EFFECT1, isModal: true }).setProps({ ante: this.ante }).setEvent({\r\n            closeHandler: () => {\r\n              this.helpPanelPanel.unMount(EffectType.EFFECT1)\r\n            }\r\n          })\r\n      },\r\n      changeBetAmount: (betAmount: number, positionId?: number, value?: number) => {\r\n        this.betAmount = betAmount\r\n        if (positionId && value) {\r\n          this.positionId = positionId\r\n          this.ante = value\r\n          this.dispatch(changebetAmount({ betAmount: this.betAmount, bet: value }))\r\n        }\r\n      },\r\n      manualBetHandler: () => {\r\n        this.manualBetHandler()\r\n      },\r\n      isHasten: (bl: boolean) => {\r\n        starlight_Audio.playOneShot(SoundPathDefine.BUTTONCLICK)\r\n        this.dispatch(changeIsHasten(bl))\r\n      }\r\n    })\r\n\r\n  }\r\n  public manualBetHandler() {\r\n    if (this.comp.props && this.comp.props.balance < this.betAmount) {\r\n      global.hallDispatch(addToastAction({ content: lang.write(k => k.palyingModule.RechangeGlod, {}, { placeStr: \"对不起，您的金币不足，请充值!\" }) }))\r\n      global.openShop()\r\n      this.dispatch(changeAutoLauncherType(AutoLauncherType.NONE))\r\n      this.dispatch(setAutoLaunchedTimes(0))\r\n      return\r\n    }\r\n    //先转起来\r\n    this.dispatch(beginRollAction(-1))\r\n    //如果主游戏，清理奖池\r\n    dataTransfer(DataKeyType.GAME_TYPE) === GameType.MAIN && this.dispatch(changeProfit(0))\r\n    //发送下注\r\n    sktInstance.sendSktMessage(SKT_MAG_TYPE.LAUNCHER_BET, {\r\n      positionId: this.positionId,\r\n      tableId: JSON.parse(sys.localStorage.getItem('starlight')).tableId,\r\n      buy: getStore().getState().game.gameMode\r\n    })\r\n    this.dispatch(setWaiting(false))\r\n    this.dispatch(setSmallBox({}))\r\n    starlight_Audio.playOneShot(SoundPathDefine.ROLLER_BEGIN)\r\n  }\r\n  public connect() {\r\n    this.inject({\r\n      autoLauncherType: getStore().getState().game.autoLauncherType\r\n    }, (state: StateType) => {\r\n      return {\r\n        isRollEnd: state.roller.roundAllEnd,\r\n        profit: state.game.profit,\r\n        subGameTimes: state.game.subGameTimes,\r\n        remainSubGameTimes: state.game.remainSubGameTimes,\r\n        currGameType: state.game.currGameType,\r\n        viewGameType: state.game.viewGameType,\r\n        isShowAutoLaunch: state.game.isShowAutoLaunch,\r\n        autoLauncherType: state.game.autoLauncherType,\r\n        autoLaunchedTimes: state.game.autoLaunchedTimes,\r\n        balance: state.game.balance,\r\n        apostille: state.game.apostille\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default FooterViewModel\r\n"]}