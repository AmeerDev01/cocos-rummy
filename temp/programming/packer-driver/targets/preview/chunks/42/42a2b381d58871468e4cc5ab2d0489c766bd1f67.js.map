{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragon/Slot/Mediator/RollerMediator.ts"],"names":["RollerMediator","find","Prefab","CommandDefine","PrefabDefine","BaseMediator","BgMediatorConst","BgCommandConst","getBgProxy","getSocketProxy","dragon_SlotPanel","goldState","ApplicationGlobal","TaskScheduler","Task","ROLL_TIME","RollerMediatorConst","constructor","mediatorName","viewComponent","taskScheduler","sourceMap","key","path","SLOT_PANEL","sourceType","source","isFlickerDone","stopRollHandle","stopTimeId","bettingGears","listNotificationConst","name","INIT_ROLLER_PANEL","handler","notification","init","setDisable","window","setTimeout","sendNotification","BG","AUTO_LAUNCH","REMOVE_THECHEST_LAYER","iconStay","getBody","rollerComp","wrapView","getChildByName","getComponent","togglesALLLayer","UPDATETHEBACKGROUND","bgController","getTransferGameInfo","gameType","INIT_JACKPOT","baseBetAmount","lineCount","console","log","components","setGod_MAJOR","UPDATE_JACKPOT_TOTAL","total","slotPanel","set_jack_total","RINGOFFIREPANELSTATUS","gears","RingOfFirePanl","UPDATE_JACKPOT","jackPotData","initJACKPOT","BEGIN_ROLL","stopIndex","targetList","dockIocn","startAllRoll","isSpeed","stopQueue","i","flickerFn","forEach","item","iconFlicker","length","clearStatus","done","flashLine","res","index","task","joinqQueue","DRAGONBALLLENGTH","num","getDackiconLenth","order","SHOW_DIALOG_WIN","NUMBEROFDISPLAYS","amount","getRemainTimes","keepTime","type","getIsChangeGameRunning","GAME_TYPE_CHANGE","TOGGLETHESTARTBUTTON","state","CHANGE_BG","iconDock","getIconStay","isManualStop","undefined","stopAllRoll","UPDATE_USER_GOLD","OLD_GOLD","UPDATE_BTN_LABEL","frequency","getNumberOfRounds","UPDATE_CURRENT_SCORE","INITDOCKIOCN","CHANGEPANELS","Change","spitfire","setdragonBallLightsUp","END_ROLL","clearTimeout","THERINGOFFIREROLLS","controlTheHeightOfTheRingOfFire","UNINSTALL_ROLLER_PANEL","uninstall","mainPrefabSource","getSource","mainPanel","destroyAllChildren","addChild","listenerEvent"],"mappings":"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","sourcesContent":["import {find, Prefab} from \"cc\";\r\nimport {INotification} from \"../../Framework/interfaces/INotification\";\r\nimport {CommandDefine} from \"../Const/CommandDefine\";\r\nimport {PrefabDefine} from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\";\r\nimport {IlistTypeHander} from \"../types/IlistTypeHander\";\r\nimport {ISourceFile} from \"../types/ISourceFile\";\r\nimport {dragon_RollerPanel} from \"../Component/dragon_RollerPanel\";\r\nimport {BgMediatorConst} from \"./BgMediator\";\r\nimport {BgCommandConst} from \"../Command/BgCommand\";\r\nimport {getBgProxy, getSlotProxy, getSocketProxy} from \"../utils\";\r\nimport {dragon_SlotPanel} from \"../Component/dragon_SlotPanel\";\r\nimport config from \"../config\";\r\nimport { goldState } from \"../Proxy/SocketProxy\";\r\nimport { ApplicationGlobal } from \"../Const/ApplicationGlobal\";\r\nimport { AudioManager,SoundList } from \"../Managr/AudioManager\";\r\nimport TaskScheduler, {Task} from \"../../../../utils/TaskScheduler\";\r\nimport { AutoLaunchType } from \"../Repositories/BgRepository\";\r\nimport { ROLL_TIME } from \"../../../../utils/SlotSpeedConfig\";\r\nexport enum RollerMediatorConst {\r\n    /**初始化滑槽面板 */\r\n    INIT_ROLLER_PANEL = \"initdragon_RollerPanel\",\r\n    /**卸载滑槽游戏面板 */\r\n    UNINSTALL_ROLLER_PANEL = \"uninstalldragon_RollerPanel\",\r\n    /**开始滑动 */\r\n    BEGIN_ROLL = \"beginRoll\",\r\n    /**结束滑动 */\r\n    END_ROLL = \"endRoll\",\r\n   /* 闪动停止*/\r\n    FORCE_STOP = 'forceStop',\r\n    /*更新状态游戏*/\r\n    REMOVE_THECHEST_LAYER = 'removeThechestLayer',\r\n    CHANGEPANELS='CHANGEPANELS',\r\n    THERINGOFFIREROLLS='THERINGOFFIREROLLS',\r\n    UPDATE_JACKPOT=\"UPDATE_JACKPOT\",\r\n    INIT_JACKPOT=\"INIT_JACKPOT\",\r\n    UPDATE_JACKPOT_TOTAL=\"UPDATE_JACKPOT_TOTAL\",\r\n    /*更新背景*/\r\n    UPDATETHEBACKGROUND=\"updateTheBackground\",\r\n    /*初始化宝盆*/\r\n    INITDOCKIOCN = \"initdockiocn\",\r\n    /*龙珠数量*/\r\n    DRAGONBALLLENGTH = \"DRAGONBALLLENGTH\",\r\n\r\n    /* 火圈状态 */\r\n    RINGOFFIREPANELSTATUS = \"RINGOFFIREPANELSTATUS\"\r\n}\r\n\r\nexport default class RollerMediator extends BaseMediator {\r\n    public taskScheduler: TaskScheduler = new TaskScheduler()\r\n    public sourceMap: Array<ISourceFile> = [\r\n        {\r\n            key: 'dragon_SlotPanel',\r\n            path: PrefabDefine.SLOT_PANEL,\r\n            sourceType: Prefab,\r\n            source: null\r\n        }\r\n    ]\r\n    private isFlickerDone:boolean=true\r\n    private stopRollHandle;\r\n    private stopTimeId;\r\n\tprivate bettingGears\r\n    protected listNotificationConst: Array<IlistTypeHander<RollerMediator>> = [\r\n        {\r\n            name: RollerMediatorConst.INIT_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                this.init();\r\n\r\n                getBgProxy().setDisable(false)\r\n                window.setTimeout(() => {\r\n                    // 可能有动画\r\n                    this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                    \r\n                }, 2500)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.REMOVE_THECHEST_LAYER,\r\n            handler(notification: INotification) {\r\n                let {iconStay}=notification.getBody()\r\n                const rollerComp = (<dragon_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"dragon_RollerPanel\"));\r\n                rollerComp.togglesALLLayer(iconStay===1)\r\n                //const dragon_SlotPanel = (<dragon_SlotPanel>this.wrapView.getComponent(\"dragon_SlotPanel\"))\r\n            }\r\n        }, {\r\n            name: RollerMediatorConst.UPDATETHEBACKGROUND,\r\n            handler(notification: INotification) {\r\n                const dragon_SlotPanel = (<dragon_SlotPanel>this.wrapView.getComponent(\"dragon_SlotPanel\"))\r\n                dragon_SlotPanel.bgController(getSocketProxy().getTransferGameInfo().gameType())\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.INIT_JACKPOT,\r\n            handler(notification: INotification) {\r\n                    const { baseBetAmount, lineCount } = notification.getBody();\r\n                    console.log(baseBetAmount);\r\n                    if(this.wrapView&&this.wrapView.components){\r\n                        const dragon_SlotPanel = (<dragon_SlotPanel>this.wrapView.getComponent(\"dragon_SlotPanel\"))\r\n                        dragon_SlotPanel&&dragon_SlotPanel.setGod_MAJOR(500 * baseBetAmount,1250 * baseBetAmount)\r\n                    }\r\n                   \r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UPDATE_JACKPOT_TOTAL,\r\n            handler(notification: INotification) {\r\n                const {total} = notification.getBody();\r\n                if(this.wrapView&&this.wrapView.components){\r\n                    const slotPanel = (<dragon_SlotPanel>this.wrapView?.getComponent(\"dragon_SlotPanel\"))\r\n                    slotPanel&& slotPanel.set_jack_total(total)\r\n                }\r\n               \r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.RINGOFFIREPANELSTATUS,\r\n            handler(notification: INotification) {\r\n                const {gears} = notification.getBody();\r\n                if(this.wrapView&&this.wrapView.components){\r\n                    const rollerComp = (<dragon_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"dragon_RollerPanel\"));\r\n                    this.bettingGears&&rollerComp.RingOfFirePanl(this.bettingGears===gears)\r\n                    this.bettingGears=gears\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UPDATE_JACKPOT,\r\n            handler(notification: INotification) {\r\n                let {jackPotData}=notification.getBody();\r\n                setTimeout(()=>{\r\n                    const rollerComp = (<dragon_SlotPanel>this.wrapView.getComponent(dragon_SlotPanel));\r\n                    if(rollerComp){\r\n                        rollerComp.initJACKPOT(jackPotData)\r\n                    }\r\n                },100)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.BEGIN_ROLL,\r\n            handler(notification: INotification) {\r\n                const {stopIndex, targetList, dockIocn} = notification.getBody();\r\n                const rollerComp = (<dragon_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"dragon_RollerPanel\"));\r\n                rollerComp.startAllRoll(stopIndex, getBgProxy().isSpeed());\r\n                getBgProxy().setDisable(true)\r\n                this.taskScheduler.stopQueue(false)\r\n                //闪动图标\r\n                let i = 0\r\n                const flickerFn = () => {\r\n                    targetList.forEach(item => {\r\n                        rollerComp.iconFlicker('coord', item, true, () => {\r\n                            i++\r\n                            if (i === targetList.length) { //全部闪动完成\r\n                                rollerComp.clearStatus()\r\n                                setTimeout(() => {\r\n                                    done()\r\n                                    flashLine()\r\n                                }, 500)\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n                // let timer: number | undefined;\r\n                const flashLine = () => {\r\n                    targetList.forEach((res,index)=>{\r\n                        const task = new Task((done) => {\r\n                            rollerComp.iconFlicker('coord', targetList[index], false)\r\n                            //闪烁2秒钟就结束\r\n                            window.setTimeout(() => done(), 1000)\r\n                        })\r\n                        this.taskScheduler.joinqQueue(task, false)\r\n                    })\r\n                }\r\n                const done = () => {\r\n                    this.taskScheduler.joinqQueue(new Task((done)=>{\r\n                        this.sendNotification(RollerMediatorConst.DRAGONBALLLENGTH,{num:getSocketProxy().getTransferGameInfo().getDackiconLenth()}) // 判断\r\n                        this.sendNotification(CommandDefine.BG, {order: \"curr\",done}, BgMediatorConst.SHOW_DIALOG_WIN)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        //dialogType, amount, keepTime, done\r\n                        this.sendNotification(BgMediatorConst.NUMBEROFDISPLAYS,{amount: getSocketProxy().getTransferGameInfo().getRemainTimes(),keepTime:2000,done,type:2},)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        //dialogType, amount, keepTime, done\r\n                        this.sendNotification(BgMediatorConst.NUMBEROFDISPLAYS,{amount: getSocketProxy().getTransferGameInfo().getRemainTimes(),keepTime:2000,done,type:1},)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        if(getBgProxy().getIsChangeGameRunning()!==-1){\r\n                            this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                        }else {\r\n                            this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON,{state:true})\r\n                        }\r\n                        getBgProxy().setDisable(false)\r\n                        this.sendNotification(BgMediatorConst.CHANGE_BG)\r\n                        setTimeout(()=>{\r\n                            this.sendNotification(RollerMediatorConst.UPDATETHEBACKGROUND);\r\n                        },300)\r\n                        rollerComp.iconDock('coord', dockIocn)\r\n                        this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON,{state:true})\r\n                        this.sendNotification(RollerMediatorConst.REMOVE_THECHEST_LAYER,{iconStay:getSocketProxy().getTransferGameInfo().getIconStay()})\r\n                        done()\r\n                    }))\r\n                }\r\n                this.stopRollHandle = (isManualStop:boolean=false) => {\r\n                    this.stopTimeId = undefined;\r\n                    this.stopRollHandle = undefined;\r\n                    rollerComp && rollerComp.stopAllRoll(isManualStop, () => {\r\n                        this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD,{state:goldState.OLD_GOLD})\r\n                        this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL,{frequency:getSocketProxy().getTransferGameInfo().getNumberOfRounds()})\r\n                        //更新游戏奖励\r\n                        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n                        rollerComp.clearStatus()\r\n                        // 开始轮流闪动图标\r\n                        if (!targetList.length) {\r\n                            done()\r\n                            getBgProxy().setDisable(false)\r\n                        } else {\r\n                            flickerFn()\r\n                        }\r\n                    })\r\n                }\r\n                // 多少秒钟后开始停止转动\r\n                this.stopTimeId = window.setTimeout(this.stopRollHandle, ROLL_TIME)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.INITDOCKIOCN,\r\n            handler(notification: INotification) {\r\n                const {dockIocn} = notification.getBody();\r\n                const rollerComp = (<dragon_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"dragon_RollerPanel\"));\r\n                rollerComp.iconDock('coord', dockIocn)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.CHANGEPANELS,\r\n            handler(notification: INotification) {\r\n                let {Change} = notification.getBody()\r\n                const rollerComp = (<dragon_SlotPanel>this.wrapView.getComponent(dragon_SlotPanel));\r\n                rollerComp.spitfire(Change)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.DRAGONBALLLENGTH,\r\n            handler(notification: INotification) {\r\n                if(getSocketProxy().getTransferGameInfo().gameType()===2){\r\n                let {num} = notification.getBody()\r\n                    const rollerComp = (<dragon_SlotPanel>this.wrapView.getComponent(dragon_SlotPanel));\r\n                    rollerComp.setdragonBallLightsUp(num)\r\n                }\r\n               \r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.END_ROLL,\r\n            handler(notification: INotification) {\r\n                this.stopTimeId && window.clearTimeout(this.stopTimeId)\r\n                this.stopRollHandle && this.stopRollHandle(true);\r\n            }\r\n        },{\r\n            name: RollerMediatorConst.THERINGOFFIREROLLS,\r\n            handler(notification: INotification) {\r\n                const rollerComp = (<dragon_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"dragon_RollerPanel\"));\r\n                rollerComp.controlTheHeightOfTheRingOfFire()\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UNINSTALL_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n               // console.log(\"卸载滑槽游戏\")\r\n                const rollerComp = (<dragon_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"dragon_RollerPanel\"));\r\n                rollerComp.uninstall()\r\n            }\r\n        },\r\n    ]\r\n    protected mainPrefabSource = {\r\n        key: 'dragon_SlotPanel',\r\n        path: PrefabDefine.SLOT_PANEL,\r\n        sourceType: Prefab,\r\n        source: null\r\n    }\r\n\r\n    public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n        super(mediatorName, viewComponent)\r\n    }\r\n\r\n    protected init(): void {\r\n        //this.viewComponent.addChild(this.getSource(PrefabDefine.SLOT_PANEL))\r\n        this.wrapView = this.getSource(this.sourceMap[0].path)\r\n        // this.viewComponent.getChildByName(\"gameArea\").addChild(this.wrapView);\r\n        find(\"slotBg/gameArea\",ApplicationGlobal.mainPanel).destroyAllChildren()\r\n        find(\"slotBg/gameArea\",ApplicationGlobal.mainPanel).addChild(this.wrapView)\r\n        const dragon_SlotPanel = (<dragon_SlotPanel>this.wrapView.getComponent(\"dragon_SlotPanel\"))\r\n        dragon_SlotPanel.bgController(getSocketProxy().getTransferGameInfo().gameType())\r\n        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n        this.listenerEvent()\r\n    }\r\n\r\n    protected listenerEvent() {\r\n\r\n    }\r\n}\r\n"]}