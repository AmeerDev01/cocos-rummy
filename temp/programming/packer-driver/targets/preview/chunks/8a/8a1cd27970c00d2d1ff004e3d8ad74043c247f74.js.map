{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/thor/components/Thor_AuthLauncher.ts"],"names":["_decorator","Button","Node","Toggle","BaseComponent","EffectType","getEffectByType","changeAutoLauncherType","setShowAuthLaunch","AutoLauncherType","setRollSpeed","ccclass","property","Thor_AuthLauncher","propertyNode","props_btn_auto","props_btn_confirm","props_btn_off","selectedNode","props","isShowAutoLaunch","isWaiting","autoLauncherType","NONE","events","start","initState","bindEvent","children","forEach","toggle","getComponent","node","on","EventType","TOUCH_END","onToggleClick","currentSelection","name","CLICK","dispatch","useProps","key","value","show","hide","console","log","cur","setType","TIME_10","TIME_20","TIME_50","TIME_100","TIME_500","LIMIT","event","clickedToggle","target","isChecked","LAMIT_FAST","active","EFFECT1","enter","then","out","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, Node, Toggle } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { EffectType, getEffectByType } from '../../../utils/NodeIOEffect';\r\nimport { changeAutoLauncherType, setShowAuthLaunch } from '../store/actions/game';\r\nimport { AutoLauncherType } from '../type';\r\nimport { setRollSpeed } from '../store/actions/roller';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\tisShowAutoLaunch: boolean\r\n\tisWaiting: boolean\r\n\tautoLauncherType: AutoLauncherType\r\n}\r\nexport interface IEvent {\r\n\r\n}\r\n\r\n@ccclass('Thor_AuthLauncher')\r\nexport class Thor_AuthLauncher extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\tprotected propertyNode = {\r\n\t\t// props_btn_down10: new Node(),\r\n\t\t// props_btn_down20: new Node(),\r\n\t\t// props_btn_down50: new Node(),\r\n\t\t// props_btn_down100: new Node(),\r\n\t\t// props_btn_down500: new Node(),\r\n\t\t// props_btn_downFast: new Node(),\r\n\t\t// props_btn_downMax: new Node(),\r\n\t\tprops_btn_auto: new Node(),\r\n\t\tprops_btn_confirm: new Node(),\r\n\t\tprops_btn_off: new Node(),\r\n\t}\r\n\tprivate selectedNode: Node\r\n\tpublic props: IProps = {\r\n\t\tisShowAutoLaunch: false,\r\n\t\tisWaiting: true,\r\n\t\tautoLauncherType: AutoLauncherType.NONE\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_auto.children.forEach((toggle) => {\r\n\t\t\ttoggle.getComponent(Toggle).node.on(Node.EventType.TOUCH_END, this.onToggleClick, this);\r\n\t\t});\r\n\t\tthis.propertyNode.props_btn_confirm.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.currentSelection(this.selectedNode && this.selectedNode.name)\r\n\t\t})\r\n\t\tthis.propertyNode.props_btn_off.getComponent(Button).node.on(Button.EventType.CLICK, () => {\r\n\t\t\tthis.dispatch(setShowAuthLaunch(false))\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === \"isWaiting\") {\r\n\t\t\t//console.log(\"isWaiting\", this.props.isWaiting)\r\n\t\t}\r\n\t\tif (key === \"isShowAutoLaunch\") {\r\n\t\t\tif (this.props.isShowAutoLaunch) {\r\n\t\t\t\tthis.show()\r\n\t\t\t} else {\r\n\t\t\t\tthis.hide()\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (key === \"autoLauncherType\") {\r\n\t\t\tconsole.log(value.cur)\r\n\t\t}\r\n\t}\r\n\tprivate currentSelection(name) {\r\n\t\tswitch (name) {\r\n\t\t\tcase 'props_btn_down10':\r\n\t\t\t\tthis.setType(AutoLauncherType.TIME_10)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'props_btn_down20':\r\n\t\t\t\tthis.setType(AutoLauncherType.TIME_20)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'props_btn_down50':\r\n\t\t\t\tthis.setType(AutoLauncherType.TIME_50)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'props_btn_down100':\r\n\t\t\t\tthis.setType(AutoLauncherType.TIME_100)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'props_btn_down500':\r\n\t\t\t\tthis.setType(AutoLauncherType.TIME_500)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'props_btn_downMax':\r\n\t\t\t\tthis.setType(AutoLauncherType.LIMIT)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.setType(AutoLauncherType.TIME_10)\r\n\t\t}\r\n\t}\r\n\tprivate onToggleClick(event) {\r\n\t\t// 获取点击的 Toggle 按钮\r\n\t\tconst clickedToggle = event.target.getComponent(Toggle);\r\n\t\tif (!clickedToggle.isChecked) {\r\n\t\t\tclickedToggle.isChecked = true;\r\n\t\t\tthis.selectedNode = event.target\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 取消其他 Toggle 按钮的选中状态\r\n\t\tthis.propertyNode.props_btn_auto.children.forEach((toggle) => {\r\n\t\t\tif (toggle !== clickedToggle) {\r\n\t\t\t\ttoggle.getComponent(Toggle).isChecked = false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tprivate setType(autoLauncherType: AutoLauncherType) {\r\n\t\tthis.dispatch(changeAutoLauncherType(autoLauncherType))\r\n\t\tthis.dispatch(setShowAuthLaunch(false))\r\n\t\tif (autoLauncherType === AutoLauncherType.LAMIT_FAST) {\r\n\t\t\tthis.dispatch(setRollSpeed(1.5))\r\n\t\t} else {\r\n\t\t\tthis.dispatch(setRollSpeed(1))\r\n\t\t}\r\n\t}\r\n\tprivate show() {\r\n\t\tthis.node.active = true\r\n\t\tgetEffectByType(EffectType.EFFECT1)(this.node).enter().then(() => { })\r\n\t}\r\n\tprivate hide() {\r\n\t\tgetEffectByType(EffectType.EFFECT1)(this.node).out(false).then(() => {\r\n\t\t\tthis.node.active = false\r\n\t\t})\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.node.active = false\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\t}\r\n}\r\n\r\n"]}