{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/store/actions/gameFlow.ts"],"names":["reduxAct","default","initState","gameStatus","countdown","results","newResult","animationStatus","tipType","ActionTypes","createAction","YXX_COUNTDOWN","changeGameStatus","YXX_CHANGE_GAME_STATUS","second","result","initResult","YXX_INIT_RESULT","changeAnimationStatus","YXX_CHNAGE_ANIMATION_STATUS","setTipType","YXX_TIP_TYPE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;;;;;;;;2BAmBIC,S,GAA2B;AACtCC,QAAAA,UAAU,EAAE,IAD0B;AAEtCC,QAAAA,SAAS,EAAE,CAF2B;AAGtCC,QAAAA,OAAO,EAAE,EAH6B;AAItCC,QAAAA,SAAS,EAAE,IAJ2B;AAKtCC,QAAAA,eAAe,EAAE,IALqB;AAMtCC,QAAAA,OAAO,EAAE;AAN6B,O;AAQxC;;;6BACYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAYZ;;;2BASaL,S,GAAY;AAAA;AAAA,gCAASM,YAAT,CAAsBD,WAAW,CAACE,aAAlC,EACtBP,SAAD,IAAiE;AAC/D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHsB,C;;kCAKZQ,gB,GAAmB;AAAA;AAAA,gCAASF,YAAT,CAAsBD,WAAW,CAACI,sBAAlC,EAC9B,CAACV,UAAD,EAAyBW,MAAzB,EAAyCC,MAAzC,KAA+G;AAC7G,eAAO;AAAEZ,UAAAA,UAAF;AAAcW,UAAAA,MAAd;AAAsBC,UAAAA;AAAtB,SAAP;AACD,OAH6B,C;;4BAKnBC,U,GAAa;AAAA;AAAA,gCAASN,YAAT,CAAsBD,WAAW,CAACQ,eAAlC,EACvBZ,OAAD,IAAmE;AACjE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHuB,C;;uCAKba,qB,GAAwB;AAAA;AAAA,gCAASR,YAAT,CAAsBD,WAAW,CAACU,2BAAlC,EAClCZ,eAAD,IAA8F;AAC5F,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHkC,C;;4BAIxBa,U,GAAa;AAAA;AAAA,gCAASV,YAAT,CAAsBD,WAAW,CAACY,YAAlC,EACvBb,OAAD,IAA+D;AAC7D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHuB,C","sourcesContent":["import { default as reduxAct } from 'redux-act'\r\nimport { AnimationStatus, BetData, BetType, GameStatus, HeadType, Result, TipType } from '../../type';\r\nimport { Game } from 'cc';\r\n\r\n\r\nexport type InitStateType = {\r\n  /**游戏状态 */\r\n  gameStatus: GameStatus,\r\n  /**倒计时 */\r\n  countdown: number,\r\n  /**结果 */\r\n  results: Result[],\r\n  /**最新结果 */\r\n  newResult: Result,\r\n  /**动画状态 */\r\n  animationStatus: AnimationStatus,\r\n  /**提示类型 */\r\n  tipType: TipType,\r\n}\r\nexport const initState: InitStateType = {\r\n  gameStatus: null,\r\n  countdown: 0,\r\n  results: [],\r\n  newResult: null,\r\n  animationStatus: null,\r\n  tipType: null,\r\n}\r\n/**必须大写，不然redux-act这货要自动加序列号 */\r\nexport enum ActionTypes {\r\n  /**倒计时 */\r\n  YXX_COUNTDOWN = 'YXX_COUNTDOWN',\r\n  /**改变游戏状态 */\r\n  YXX_CHANGE_GAME_STATUS = 'YXX_CHANGE_GAME_STATUS',\r\n  /**初始化结果 */\r\n  YXX_INIT_RESULT = 'YXX_INIT_RESULT',\r\n  /**改变动画状态 */\r\n  YXX_CHNAGE_ANIMATION_STATUS = 'YXX_CHNAGE_ANIMATION_STATUS',\r\n  YXX_TIP_TYPE = 'YXX_TIP_TYPE',\r\n}\r\n\r\n/**定义action的payLoad类型 */\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.YXX_COUNTDOWN ? { countdown: number } :\r\n  A extends ActionTypes.YXX_CHANGE_GAME_STATUS ? { gameStatus: GameStatus, second: number, result: Result } :\r\n  A extends ActionTypes.YXX_INIT_RESULT ? { results: Result[] } :\r\n  A extends ActionTypes.YXX_CHNAGE_ANIMATION_STATUS ? { animationStatus: AnimationStatus } :\r\n  A extends ActionTypes.YXX_TIP_TYPE ? { tipType: TipType } :\r\n  never;\r\n\r\nexport const countdown = reduxAct.createAction(ActionTypes.YXX_COUNTDOWN,\r\n  (countdown: number): ActionPayLoad<ActionTypes.YXX_COUNTDOWN> => {\r\n    return { countdown }\r\n  })\r\n\r\nexport const changeGameStatus = reduxAct.createAction(ActionTypes.YXX_CHANGE_GAME_STATUS,\r\n  (gameStatus: GameStatus, second: number, result: Result): ActionPayLoad<ActionTypes.YXX_CHANGE_GAME_STATUS> => {\r\n    return { gameStatus, second, result }\r\n  })\r\n\r\nexport const initResult = reduxAct.createAction(ActionTypes.YXX_INIT_RESULT,\r\n  (results: Result[]): ActionPayLoad<ActionTypes.YXX_INIT_RESULT> => {\r\n    return { results }\r\n  })\r\n\r\nexport const changeAnimationStatus = reduxAct.createAction(ActionTypes.YXX_CHNAGE_ANIMATION_STATUS,\r\n  (animationStatus: AnimationStatus): ActionPayLoad<ActionTypes.YXX_CHNAGE_ANIMATION_STATUS> => {\r\n    return { animationStatus }\r\n  })\r\nexport const setTipType = reduxAct.createAction(ActionTypes.YXX_TIP_TYPE,\r\n  (tipType: TipType): ActionPayLoad<ActionTypes.YXX_TIP_TYPE> => {\r\n    return { tipType }\r\n  })"]}