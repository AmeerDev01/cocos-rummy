{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/egypt/Slot/Command/RollerCommand.ts"],"names":["RollerCommand","RollerMediatorConst","RollerType","BaseCommand","SubGameType","SKT_MAG_TYPE","sktMsgListener","BgMediatorConst","getSlotProxy","getSocketProxy","RollerCommandConst","listExecute","type","INIT_ROLLER_PANEL","handler","notification","gameType","getBody","_gameRunner","getTransferGameInfo","initRoller","sendNotification","CHANGE_BG","add","LAUNCH","data","rollerType","MAIN","NORMAL","LARGE","stopIndexArr","dockIocn","getDockIcon","BEGIN_ROLL","stopIndex","targetList","map","item","coord","item2","END_ROLL","UNINSTALL_ROLLER_PANEL","remove","execute"],"mappings":"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","sourcesContent":["import Facade from \"../../Framework/care/Facade\"\r\nimport { INotification } from \"../../Framework/interfaces/INotification\"\r\nimport { ProxyDefine } from \"../Const/ProxyDefine\";\r\nimport { RollerMediatorConst } from \"../Mediator/RollerMediator\";\r\nimport { SlotProxy, RollerType } from \"../Proxy/SlotProxy\";\r\nimport { BaseCommand, IListExecute } from './BaseCommand'\r\nimport { SubGameType, SKT_MAG_TYPE, SocketProxy, sktMsgListener } from \"../Proxy/SocketProxy\";\r\nimport { BgMediatorConst } from \"../Mediator/BgMediator\";\r\nimport { getSlotProxy, getSocketProxy } from \"../utils\";\r\n\r\nexport enum RollerCommandConst {\r\n    BEGIN_ROLL = \"beginRoll\",\r\n    END_ROLL = \"endRoll\"\r\n}\r\n\r\nexport class RollerCommand extends BaseCommand {\r\n    protected listExecute: Array<IListExecute<RollerCommand>> = [\r\n        {\r\n            type: RollerMediatorConst.INIT_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                const { gameType } = notification.getBody() || {}\r\n                //在初始化界面之前要初始化数据 'iconRollerQueue' | 'largeIconRollerQueue'\r\n                const _gameRunner: SubGameType = gameType || getSocketProxy().getTransferGameInfo().gameType()\r\n                // const rollerType = _gameRunner === SubGameType.MAIN ? RollerType.NORMAL : RollerType.LARGE;\r\n                getSlotProxy().initRoller()\r\n                this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType: _gameRunner })\r\n                // 接收下注的结果\r\n                sktMsgListener.add(SKT_MAG_TYPE.LAUNCH, 'roller', (data) => {\r\n                    // const gt = (this.facade.retrieveProxy(ProxyDefine.WEBSOCKET) as SocketProxy).getTransferGameInfo().gameType();\r\n                    // if (gt === SubGameType.SUB_GAME1) return\r\n                    const rollerType = _gameRunner === SubGameType.MAIN ? RollerType.NORMAL : RollerType.LARGE;\r\n                    const stopIndexArr = getSocketProxy().getTransferGameInfo().stopIndexArr()\r\n                    const dockIocn = getSocketProxy().getTransferGameInfo().getDockIcon()\r\n                    this.sendNotification(RollerMediatorConst.BEGIN_ROLL, {\r\n                        stopIndex: stopIndexArr,\r\n                        targetList: getSocketProxy().getTransferGameInfo().targetList().map(item => item.coord.map(item2 => item2[1])),\r\n                        dockIocn\r\n                    })\r\n                }, 2)\r\n                return true\r\n            }\r\n        },\r\n        {\r\n            type: RollerMediatorConst.BEGIN_ROLL,\r\n            handler(notification: INotification) {\r\n                return notification.getBody()\r\n            }\r\n        },\r\n        {\r\n            type: RollerMediatorConst.END_ROLL,\r\n            handler(notification: INotification) {\r\n                return notification.getBody()\r\n            }\r\n        },\r\n        {\r\n            type: RollerMediatorConst.UNINSTALL_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                sktMsgListener.remove(SKT_MAG_TYPE.LAUNCH, 'roller')\r\n                return true\r\n            }\r\n        }\r\n    ]\r\n    public execute(notification: INotification): void {\r\n        super.execute(notification)\r\n    }\r\n}\r\n"]}