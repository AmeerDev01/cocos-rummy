{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/components/login_v2/Hall_ProhibitPanel.ts"],"names":["_decorator","Button","Node","BaseComponent","ccclass","property","Hall_ProhibitPanel","propertyNode","props_btn_off","props","events","onCloseHandle","start","initState","bindEvent","node","on","EventType","TOUCH_END","useProps","key","value","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,I,OAAAA,I;;AAC/BC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;oCAcjBM,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb;AAAA;AAAA,0CAC8E;AAAA;AAAA;AAAA,eAKnEC,YALmE,GAKpD;AACxBC,YAAAA,aAAa,EAAE,IAAIP,MAAJ;AADS,WALoD;AAAA,eAStEQ,KATsE,GAStD,EATsD;AAAA,eAatEC,MAbsE,GAarD;AACvBC,YAAAA,aAAa,EAAE,MAAM,CAAG;AADD,WAbqD;AAAA;;AAC7EC,QAAAA,KAAK,GAAG,CAEP;;AAcSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKP,YAAL,CAAkBC,aAAlB,CAAgCO,IAAhC,CAAqCC,EAArC,CAAwCd,IAAI,CAACe,SAAL,CAAeC,SAAvD,EAAkE,MAAM;AACvE,iBAAKR,MAAL,CAAYC,aAAZ;AACA,WAFD;AAGA;;AAESQ,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CAEpE;;AAESC,QAAAA,MAAM,GAAS,CAExB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAvC4E,O","sourcesContent":["import { _decorator, Button, Component, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\r\n}\r\nexport interface IEvent {\r\n\tonCloseHandle: () => void\r\n}\r\n\r\n@ccclass('Hall_ProhibitPanel')\r\nexport class Hall_ProhibitPanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_off: new Button()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tonCloseHandle: () => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_off.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.events.onCloseHandle()\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}