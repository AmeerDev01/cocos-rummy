{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/qiuqiu/viewModel/RoomChooseViewModel.ts"],"names":["sys","ViewModel","StoreInject","global","lang","config","sourceManageSeletor","SKT_MAG_TYPE","sktInstance","sktMsgListener","PrefabPathDefine","getStore","changeDeskStatus","changeOperationPlayer","clearRoomData","reconnectGameData","reconnectRecoverBet","updateGold","DeskStatus","convertCardValue","convertOpType","genPlayer","MainBoardViewModel","ModalBox","getRoomUpper","EffectType","GameRuleViewModel","RoomChooseViewModel","constructor","mainBoardViewModel","memberId","roomInfo","begin","add","AUTH","data","dispatch","gold","setProps","roomMap","dominoRoomInfoVos","JOIN_ROOM","enterGame","testConfig","wsUrl","token","localStorage","getItem","sendSktMessage","gameId","RECONNECT","reconnectHandle","GOLD_CHANGE","setEvent","beginHandler","fastEnterGame","clickRoomHandler","clickEnterGame","openGameRule","mountView","getFile","prefabs_quiqui_modal","source","appendTo","viewNode","effectType","EFFECT1","isModal","comp","props","lower","joinGame","getCanEnterRoom","content","write","k","palyingModule","RechangeGlod","placeStr","Instance","show","type","openShop","ExceedUpper1","format","roomName","find","v","maxRoomInfo","length","upper","afee","roomId","myMemberId","selfPlayer","list","item","tableId","onComplate","forEach","isSelf","player","isValid","cacheChairId","MAIN_BOARD","connect","convertDeskStatus","state","COUNTDOWNING","PLAYING","isReconnect","qiuqiuMemBerInfoVo","deskStatus","gameStage","dealCount","gameData","opType","memberStatus","newBet","cards","pokers","map","smallNum","bigNum","callAmount","currentPlayerAction","completion","dealCardCount","isReady","isGame","uid","betAmount","pokerNum","beginGameCountdownHandle","seconds","startCountdown","leftTime","window","setTimeout","unMountCallBack","undefined","inject","deskData"],"mappings":"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","sourcesContent":["import { sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\nimport { IEvent, IProps, Qiuqiu_RoomChoose } from \"../components/Qiuqiu_RoomChoose\"\r\nimport config from \"../config\"\r\nimport { sourceManageSeletor } from \"../index\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { getStore } from \"../store\"\r\nimport { changeDeskStatus, changeOperationPlayer, clearRoomData, playerBet, reconnectGameData, reconnectRecoverBet, updateGold } from \"../store/action/game\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { DeskStatus, EnterGameVo, MemberInfoVo, OperationType, ReconnectVo, RoomInfo, convertCardValue, convertOpType, genPlayer } from \"../type\"\r\nimport MainBoardViewModel from \"./MainBoardViewModel\"\r\nimport ModalBox from \"../../../common/ModalBox\"\r\nimport { getRoomUpper } from \"../qiuqiu_tool\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport GameRuleViewModel from \"./GameRuleViewModel\"\r\n\r\n@StoreInject(getStore())\r\nclass RoomChooseViewModel extends ViewModel<Qiuqiu_RoomChoose, IProps, IEvent> {\r\n  constructor() {\r\n    super('Qiuqiu_RoomChoose')\r\n  }\r\n  public mainBoardViewModel: MainBoardViewModel\r\n  public memberId: string\r\n  public roomInfo: RoomInfo\r\n\r\n  protected begin() {\r\n    sktMsgListener.add(SKT_MAG_TYPE.AUTH, \"room\", (data) => {\r\n      this.dispatch(clearRoomData(0));\r\n      this.memberId = data.memberId\r\n      const gold = data ? data.gold : 0;\r\n      this.setProps({ roomMap: data.dominoRoomInfoVos })\r\n      this.dispatch(updateGold(gold));\r\n    })\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.JOIN_ROOM, \"room\", (data: EnterGameVo) => {\r\n      this.enterGame(data)\r\n    })\r\n\r\n    if (config.testConfig.wsUrl) {\r\n      const token = sys.localStorage.getItem(\"tokentest\");\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token\r\n      })\r\n    } else {\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token: sys.localStorage.getItem(\"token\"),\r\n        gameId: config.gameId\r\n      })\r\n    }\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.RECONNECT, \"room\", (data: ReconnectVo) => {\r\n      this.reconnectHandle(data);\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.GOLD_CHANGE, \"room\", (data: number) => {\r\n      this.dispatch(updateGold(data));\r\n    })\r\n\r\n    this.setEvent({\r\n      beginHandler: () => {\r\n        //快速加入\r\n        this.fastEnterGame();\r\n      },\r\n      clickRoomHandler: (roomInfo: RoomInfo) => {\r\n        this.clickEnterGame(roomInfo);\r\n      },\r\n      openGameRule: () => {\r\n        new GameRuleViewModel().mountView(sourceManageSeletor()\r\n          .getFile(PrefabPathDefine.prefabs_quiqui_modal).source).appendTo(this.viewNode, { effectType: EffectType.EFFECT1, isModal: true });\r\n      }\r\n    })\r\n  }\r\n\r\n  private clickEnterGame(roomInfo: RoomInfo) {\r\n    const gold = this.comp.props.gold;\r\n    if (roomInfo.lower <= gold && gold <= getRoomUpper(roomInfo)) {\r\n      this.joinGame(roomInfo);\r\n    } else {\r\n      roomInfo = this.getCanEnterRoom();\r\n\r\n      if (!roomInfo) {\r\n        let content = lang.write(k => k.palyingModule.RechangeGlod, {},\r\n          { placeStr: \"对不起，您的金币不足，请充值!\" });\r\n        ModalBox.Instance().show({\r\n          content: content, type: 'Prompt'\r\n        }, () => {\r\n          global.openShop();\r\n          return true\r\n        })\r\n      } else {\r\n        let content = lang.write(k => k.palyingModule.ExceedUpper1, {},\r\n          { placeStr: \"对不起，您不符合进入条件，是否进入系统匹配房间!\" });\r\n        content = content.format(roomInfo.roomName);\r\n\r\n        ModalBox.Instance().show({\r\n          content: content, type: 'Confirm'\r\n        }, () => {\r\n          this.joinGame(roomInfo);\r\n          return true\r\n        }, () => {\r\n          return true\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  private getCanEnterRoom() {\r\n    const gold = this.comp.props.gold;\r\n    return this.comp.props.roomMap.find(v => v.lower <= gold && gold <= getRoomUpper(v));\r\n  }\r\n\r\n  private fastEnterGame() {\r\n    const gold = this.comp.props.gold;\r\n    const maxRoomInfo = this.comp.props.roomMap[this.comp.props.roomMap.length - 1];\r\n    let roomInfo = this.getCanEnterRoom();\r\n    if (!roomInfo) {\r\n      // 如果余额超过了最大金额房间，直接进入到最后一个房间\r\n      if (gold > maxRoomInfo.upper || maxRoomInfo.upper === -1) {\r\n        roomInfo = maxRoomInfo;\r\n      }\r\n    }\r\n    this.joinGame(roomInfo);\r\n  }\r\n\r\n  private joinGame(roomInfo: RoomInfo) {\r\n    if (!roomInfo) {\r\n      global.openShop();\r\n      return;\r\n    }\r\n\r\n    config.afee = roomInfo.afee;\r\n    this.roomInfo = roomInfo;\r\n    sktInstance.sendSktMessage(SKT_MAG_TYPE.JOIN_ROOM, {\r\n      memberId: this.memberId,\r\n      gameId: config.gameId,\r\n      roomId: this.roomInfo.roomId\r\n    })\r\n  }\r\n\r\n  public enterGame(data: EnterGameVo) {\r\n\r\n    // const myMemberId = config.isTest ? JSON.parse(localStorage.getItem(\"domino\")).memberId : this.memberId;\r\n    const myMemberId = this.memberId;\r\n    const selfPlayer = data.list.find(item => item.memberId === myMemberId);\r\n    selfPlayer.tableId = data.tableId;\r\n\r\n    const onComplate = () => {\r\n      data.list.forEach(item => {\r\n        // const isSelf = item.memberId === JSON.parse(localStorage.getItem(\"domino\")).memberId\r\n        const isSelf = item.memberId === myMemberId\r\n        const player = genPlayer(item);\r\n        player.isSelf = isSelf;\r\n        player.tableId = data.tableId;\r\n        this.mainBoardViewModel.enterGame(player);\r\n      })\r\n    }\r\n    if (!this.mainBoardViewModel || !this.mainBoardViewModel.comp || !this.mainBoardViewModel.comp.isValid) {\r\n      this.mainBoardViewModel = new MainBoardViewModel(this.roomInfo, selfPlayer.tableId, onComplate, selfPlayer.cacheChairId, selfPlayer.memberId);\r\n      this.mainBoardViewModel.mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_BOARD).source).appendTo(this.viewNode).connect();\r\n    } else {\r\n      onComplate();\r\n    }\r\n  }\r\n\r\n  private convertDeskStatus(state: number) {\r\n    if (state === 1) {\r\n      return DeskStatus.COUNTDOWNING;\r\n    } else if (state === 2) {\r\n      return DeskStatus.PLAYING;\r\n    }\r\n  }\r\n\r\n  private reconnectHandle(data: ReconnectVo) {\r\n    config.isReconnect = true;\r\n    this.roomInfo = this.comp.props.roomMap.find(v => v.roomId === data.roomId);\r\n    config.afee = this.roomInfo.afee;\r\n    const selfPlayer = data.qiuqiuMemBerInfoVo.find(item => item.memberId === this.memberId);\r\n    selfPlayer.tableId = data.tableId;\r\n\r\n    let deskStatus = this.convertDeskStatus(data.gameStage);\r\n    // 发牌数量\r\n    let dealCount = 0;\r\n    if (data.gameStage === 3) {\r\n      dealCount = 3;\r\n      deskStatus = DeskStatus.PLAYING;\r\n    } else if (data.gameStage === 4) {\r\n      dealCount = 4;\r\n      deskStatus = DeskStatus.PLAYING;\r\n    }\r\n    const onComplate = () => {\r\n      data.qiuqiuMemBerInfoVo.forEach(v => {\r\n        const isSelf = v.memberId === this.memberId;\r\n        const player = genPlayer(v);\r\n        player.tableId = data.tableId;\r\n        player.isSelf = isSelf;\r\n        player.gameData.opType = convertOpType(v.memberStatus, data.newBet)\r\n        if (isSelf) {\r\n          player.gameData.cards = v.pokers.map(v => convertCardValue(v.smallNum, v.bigNum))\r\n          player.gameData.callAmount = data.currentPlayerAction.completion;\r\n        } else {\r\n          player.gameData.dealCardCount = dealCount;\r\n        }\r\n        player.gameData.isReady && (player.gameData.isGame = true)\r\n        this.mainBoardViewModel.enterGame(player);\r\n\r\n        this.dispatch(reconnectRecoverBet(player.uid, player.gameData.betAmount))\r\n      })\r\n\r\n      this.dispatch(reconnectGameData(data.newBet, data.pokerNum));\r\n      // 这里设置开始游戏倒计时需要在切换状态之前\r\n      if (deskStatus === DeskStatus.COUNTDOWNING) {\r\n        this.mainBoardViewModel.beginGameCountdownHandle(data.seconds);\r\n      }\r\n\r\n      // 1.切换游戏状态\r\n      this.dispatch(changeDeskStatus(deskStatus));\r\n\r\n      if (deskStatus === DeskStatus.PLAYING) {\r\n        this.dispatch(changeOperationPlayer(data.currentPlayerAction.memberId));\r\n        // 这里设置出牌倒计时需要在切换状态之后\r\n        this.mainBoardViewModel.startCountdown(data.currentPlayerAction.leftTime);\r\n      }\r\n      window.setTimeout(() => config.isReconnect = false, 200)\r\n    }\r\n\r\n    if (!this.mainBoardViewModel || !this.mainBoardViewModel.comp || !this.mainBoardViewModel.comp.isValid) {\r\n      this.mainBoardViewModel = new MainBoardViewModel(this.roomInfo, selfPlayer.tableId, onComplate, selfPlayer.cacheChairId, selfPlayer.memberId);\r\n      this.mainBoardViewModel.mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_BOARD).source).appendTo(this.viewNode).connect();\r\n    } else {\r\n      onComplate();\r\n    }\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.mainBoardViewModel = undefined;\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        gold: state.deskData.gold\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RoomChooseViewModel"]}