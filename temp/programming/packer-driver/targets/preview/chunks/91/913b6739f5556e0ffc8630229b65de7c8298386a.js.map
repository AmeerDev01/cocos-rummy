{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonV2/components/DragonV2topValue.ts"],"names":["_decorator","Label","sp","BaseComponent","StepNumber","GameType","config","SkeletonAnimationPlayer","ccclass","property","DragonV2topValue","mini_numer","major_numer","jackpot_number","mini_numerSpecial","major_numerSpecial","jackpot_numberSpecial","theNumberOfDragonBalls","propertyNode","props","miniVal","majorVal","grandVal","amountInfo","gameTypeInfo","lastGameType","NONE","currGameType","viewGameType","leftCount","events","onWindowCloseHandler","dialogType","start","initState","bindEvent","node","getChildByName","isDisplaysAFlashingBox","isShow","active","flashbox","done","getComponent","Skeleton","playAnimation","initTamako","children","forEach","item","index","setTamako","num","mini","changeAnimation","major","jackpot","useProps","key","value","setState","cur","winning","maxRate","positionId","isSubgame2","bindUI","useState","pre","isValid","Number","toFixed","string","formatAmountWithCommas","SUBGAME2","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,K,OAAAA,K;AAAaC,MAAAA,E,OAAAA,E;;AAC1CC,MAAAA,a,iBAAAA,a;;AAGFC,MAAAA,U;;AAC0BC,MAAAA,Q,iBAAAA,Q;;AAE1BC,MAAAA,M;;AACAC,MAAAA,uB;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;kCAmBjBU,gB,WADZF,OAAO,CAAC,kBAAD,C,gBAAR,MACaE,gBADb;AAAA;AAAA,0CAC4E;AAAA;AAAA;AAAA,eAChEC,UADgE;AAAA,eAEhEC,WAFgE;AAAA,eAGhEC,cAHgE;AAAA,eAIhEC,iBAJgE;AAAA,eAKhEC,kBALgE;AAAA,eAMhEC,qBANgE;AAAA,eAOhEC,sBAPgE,GAO9B,CAP8B;AAAA,eAW9DC,YAX8D,GAW/C,EAX+C;AAAA,eAejEC,KAfiE,GAejD;AACnBC,YAAAA,OAAO,EAAE,IADU;AAEnBC,YAAAA,QAAQ,EAAE,IAFS;AAGnBC,YAAAA,QAAQ,EAAE,IAHS;AAInBC,YAAAA,UAAU,EAAE,IAJO;AAKnBC,YAAAA,YAAY,EAAE;AACVC,cAAAA,YAAY,EAAE;AAAA;AAAA,wCAASC,IADb;AAEVC,cAAAA,YAAY,EAAE;AAAA;AAAA,wCAASD,IAFb;AAGVE,cAAAA,YAAY,EAAE;AAAA;AAAA,wCAASF,IAHb;AAIVG,cAAAA,SAAS,EAAE;AAJD;AALK,WAfiD;AAAA,eA4BjEC,MA5BiE,GA4BhD;AACpBC,YAAAA,oBAAoB,EAAGC,UAAD,IAA4B,CAAG;AADjC,WA5BgD;AAAA;;AAQxEC,QAAAA,KAAK,GAAG,CAEP;;AAsBSC,QAAAA,SAAS,GAAG;AAClB,iBAAO;AACHd,YAAAA,OAAO,EAAE,CADN;AAEHC,YAAAA,QAAQ,EAAE,CAFP;AAGHC,YAAAA,QAAQ,EAAE;AAHP,WAAP;AAKH;;AAESa,QAAAA,SAAS,GAAS;AACxB,eAAKxB,UAAL,GAAkB,KAAKyB,IAAL,CAAUC,cAAV,CAAyB,YAAzB,CAAlB;AACA,eAAKzB,WAAL,GAAmB,KAAKwB,IAAL,CAAUC,cAAV,CAAyB,aAAzB,CAAnB;AACA,eAAKxB,cAAL,GAAsB,KAAKuB,IAAL,CAAUC,cAAV,CAAyB,gBAAzB,CAAtB;AACA,eAAKvB,iBAAL,GAAyB,KAAKH,UAAL,CAAgB0B,cAAhB,CAA+B,SAA/B,CAAzB;AACA,eAAKtB,kBAAL,GAA0B,KAAKH,WAAL,CAAiByB,cAAjB,CAAgC,SAAhC,CAA1B;AACA,eAAKrB,qBAAL,GAA6B,KAAKH,cAAL,CAAoBwB,cAApB,CAAmC,SAAnC,CAA7B;AACA,eAAKC,sBAAL,CAA4B,KAA5B;AACH;AACF;;;AACCA,QAAAA,sBAAsB,CAACC,MAAD,EAAgB;AAClC,eAAKzB,iBAAL,CAAuB0B,MAAvB,GAA8BD,MAA9B;AACA,eAAKxB,kBAAL,CAAwByB,MAAxB,GAA+BD,MAA/B;AACA,eAAKvB,qBAAL,CAA2BwB,MAA3B,GAAkCD,MAAlC;AACH;AACD;;;AACOE,QAAAA,QAAQ,CAACC,IAAD,EAAQ;AACnB,eAAKJ,sBAAL,CAA4B,IAA5B;AACA,cAAIxB,iBAAiB,GAAG;AAAA;AAAA,kEAA4B,KAAKA,iBAAL,CAAuB6B,YAAvB,CAAoCzC,EAAE,CAAC0C,QAAvC,CAA5B,EAA8E,YAA9E,EAA4F,KAA5F,EAAkG,MAAI,CAC1H;AACH,WAFuB,CAAxB;AAGA9B,UAAAA,iBAAiB,CAAC+B,aAAlB;AACA,cAAI9B,kBAAkB,GAAG;AAAA;AAAA,kEAA4B,KAAKA,kBAAL,CAAwB4B,YAAxB,CAAqCzC,EAAE,CAAC0C,QAAxC,CAA5B,EAA+E,YAA/E,EAA6F,KAA7F,EAAmG,MAAI,CAC5H;AACH,WAFwB,CAAzB;AAGA7B,UAAAA,kBAAkB,CAAC8B,aAAnB;AACA,cAAI7B,qBAAqB,GAAG;AAAA;AAAA,kEAA4B,KAAKA,qBAAL,CAA2B2B,YAA3B,CAAwCzC,EAAE,CAAC0C,QAA3C,CAA5B,EAAkF,YAAlF,EAAgG,KAAhG,EAAuG,MAAM;AACrI;AACA;AACA;AACA;AACA;AACA,iBAAKN,sBAAL,CAA4B,KAA5B;AACAI,YAAAA,IAAI,IAAIA,IAAI,EAAZ;AACH,WAR2B,CAA5B;AASA1B,UAAAA,qBAAqB,CAAC6B,aAAtB;AACH;;AACKC,QAAAA,UAAU,GAAE;AAClB,eAAKV,IAAL,CAAUC,cAAV,CAAyB,sBAAzB,EAAiDU,QAAjD,CAA0DC,OAA1D,CAAkE,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/ED,YAAAA,IAAI,CAACT,MAAL,GAAc,KAAd;AACH,WAFD;AAGA,eAAKF,sBAAL,CAA4B,KAA5B;AACC;AACD;;;AACOa,QAAAA,SAAS,CAACC,GAAD,EAAc;AAC1B,cAAG,KAAKnC,sBAAL,IAA+BmC,GAAlC,EAAsC;AAAE;AACpC;AACH,WAFD,MAEK;AACD,iBAAKnC,sBAAL,GAA4BmC,GAA5B;AACA,iBAAKhB,IAAL,CAAUC,cAAV,CAAyB,sBAAzB,EAAiDG,MAAjD,GAAwD,IAAxD;AACA,iBAAKJ,IAAL,CAAUC,cAAV,CAAyB,sBAAzB,EAAiDU,QAAjD,CAA0DC,OAA1D,CAAkE,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/ED,cAAAA,IAAI,CAACT,MAAL,GAAeU,KAAK,IAAIE,GAAG,GAAG,CAA9B;AACH,aAFD;AAGH;;AACD,cAAIA,GAAG,IAAI,CAAX,EAAc;AACV,iBAAKtC,iBAAL,CAAuB0B,MAAvB,GAA8B,IAA9B;AACA,gBAAIa,IAAI,GAAG;AAAA;AAAA,oEAA4B,KAAKvC,iBAAL,CAAuB6B,YAAvB,CAAoCzC,EAAE,CAAC0C,QAAvC,CAA5B,EAA8E,YAA9E,EAA4F,KAA5F,EAAmG,MAAM;AAChHS,cAAAA,IAAI,CAACC,eAAL,CAAqB,YAArB,EAAmC,IAAnC;AACH,aAFU,CAAX;AAGAD,YAAAA,IAAI,CAACR,aAAL;AACH,WAND,MAMO,IAAIO,GAAG,IAAI,EAAX,EAAe;AAClB,iBAAKrC,kBAAL,CAAwByB,MAAxB,GAA+B,IAA/B;AACA,gBAAIe,KAAK,GAAG;AAAA;AAAA,oEAA4B,KAAKxC,kBAAL,CAAwB4B,YAAxB,CAAqCzC,EAAE,CAAC0C,QAAxC,CAA5B,EAA+E,YAA/E,EAA6F,KAA7F,EAAoG,MAAM;AAClHW,cAAAA,KAAK,CAACD,eAAN,CAAsB,YAAtB,EAAoC,IAApC;AACH,aAFW,CAAZ;AAGAC,YAAAA,KAAK,CAACV,aAAN;AACH,WANM,MAMA,IAAIO,GAAG,IAAI,EAAX,EAAe;AAClB,iBAAKpC,qBAAL,CAA2BwB,MAA3B,GAAkC,IAAlC;AACA,gBAAIgB,OAAO,GAAG;AAAA;AAAA,oEAA4B,KAAKxC,qBAAL,CAA2B2B,YAA3B,CAAwCzC,EAAE,CAAC0C,QAA3C,CAA5B,EAAkF,YAAlF,EAAgG,KAAhG,EAAuG,MAAM;AACvHY,cAAAA,OAAO,CAACF,eAAR,CAAwB,YAAxB,EAAsC,IAAtC;AACH,aAFa,CAAd;AAGAE,YAAAA,OAAO,CAACX,aAAR;AACH;AACJ;;AACSY,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AACjE,cAAID,GAAG,KAAK,YAAZ,EAA0B;AACtB,iBAAKjB,QAAL;AACA,iBAAKmB,QAAL,CAAc;AAAExC,cAAAA,OAAO,EAAEuC,KAAK,CAACE,GAAN,CAAUF,KAAV,GAAkB;AAAA;AAAA,oCAAOG,OAAP,CAAe,CAAf,EAAkBC;AAA/C,aAAd;AACA,iBAAKH,QAAL,CAAc;AAAEvC,cAAAA,QAAQ,EAAEsC,KAAK,CAACE,GAAN,CAAUF,KAAV,GAAkB;AAAA;AAAA,oCAAOG,OAAP,CAAe,CAAf,EAAkBC;AAAhD,aAAd;;AACA,gBAAI,KAAK5C,KAAL,CAAWI,UAAX,CAAsByC,UAAtB,GAAmC,CAAvC,EAA0C;AACtC,mBAAKJ,QAAL,CAAc;AAAEtC,gBAAAA,QAAQ,EAAEqC,KAAK,CAACE,GAAN,CAAUF,KAAV,GAAkB;AAAA;AAAA,sCAAOG,OAAP,CAAe,CAAf,EAAkBC;AAAhD,eAAd;AACH;AACJ;;AACD,cAAIL,GAAG,KAAK,cAAZ,EAA4B;AACxB,iBAAKtB,IAAL,CAAUC,cAAV,CAAyB,SAAzB,EAAoCG,MAApC,GAA6C,KAAKyB,UAAL,EAA7C;AACA,iBAAK7B,IAAL,CAAUC,cAAV,CAAyB,SAAzB,EAAoCG,MAApC,GAA6C,CAAC,KAAKyB,UAAL,EAA9C;AACH;;AACD,cAAIP,GAAG,KAAK,UAAZ,EAAwB;AACpB,gBAAI,KAAKvC,KAAL,CAAWI,UAAX,CAAsByC,UAAtB,IAAoC,CAAxC,EAA2C;AACvC,mBAAKJ,QAAL,CAAc;AAAEtC,gBAAAA,QAAQ,EAAEqC,KAAK,CAACE;AAAlB,eAAd;AACH;;AACD,gBAAIF,KAAK,CAACE,GAAN,KAAc,CAAlB,EAAqB;AACjB,mBAAKD,QAAL,CAAc;AAAEtC,gBAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,UAAX,CAAsBoC,KAAtB,GAA8B;AAAA;AAAA,sCAAOG,OAAP,CAAe,CAAf,EAAkBC;AAA5D,eAAd;AACH;AACJ;AACJ;;AACSG,QAAAA,MAAM,GAAS;AACrB,eAAKC,QAAL,CAAc,CAACT,GAAD,EAAMC,KAAN,KAAgB;AAC1B;AAAA;AAAA,0CAAeA,KAAK,CAACS,GAArB,EAA0BT,KAAK,CAACE,GAAhC,EAAsCT,GAAD,IAAS;AAC1C,kBAAI,KAAKhB,IAAL,IAAa,KAAKA,IAAL,CAAUiC,OAA3B,EAAoC;AAChC,oBAAMV,MAAK,GAAGW,MAAM,CAAClB,GAAG,CAACmB,OAAJ,CAAY,CAAZ,CAAD,CAApB;;AACA,qBAAK5D,UAAL,CAAgB0B,cAAhB,CAA+B,QAA/B,EAAyCM,YAAzC,CAAsD1C,KAAtD,EAA6DuE,MAA7D,GAAsEb,MAAK,CAACc,sBAAN,EAAtE;AACH;AACJ,aALD,EAKGxC,KALH;AAMH,WAPD,EAOG,CAAC,SAAD,CAPH;AASA,eAAKkC,QAAL,CAAc,CAACT,GAAD,EAAMC,KAAN,KAAgB;AAC1B;AAAA;AAAA,0CAAeA,KAAK,CAACS,GAArB,EAA0BT,KAAK,CAACE,GAAhC,EAAsCT,GAAD,IAAS;AAC1C,kBAAI,KAAKhB,IAAL,IAAa,KAAKA,IAAL,CAAUiC,OAA3B,EAAoC;AAChC,oBAAMV,OAAK,GAAGW,MAAM,CAAClB,GAAG,CAACmB,OAAJ,CAAY,CAAZ,CAAD,CAApB;;AACA,qBAAK3D,WAAL,CAAiByB,cAAjB,CAAgC,QAAhC,EAA0CM,YAA1C,CAAuD1C,KAAvD,EAA8DuE,MAA9D,GAAuEb,OAAK,CAACc,sBAAN,EAAvE;AACH;AACJ,aALD,EAKGxC,KALH;AAMH,WAPD,EAOG,CAAC,UAAD,CAPH;AASA,eAAKkC,QAAL,CAAc,CAACT,GAAD,EAAMC,KAAN,KAAgB;AAC1B;AAAA;AAAA,0CAAeA,KAAK,CAACS,GAArB,EAA0BT,KAAK,CAACE,GAAhC,EAAsCT,GAAD,IAAS;AAC1C,kBAAI,KAAKhB,IAAL,IAAa,KAAKA,IAAL,CAAUiC,OAA3B,EAAoC;AAChC,oBAAMV,OAAK,GAAGW,MAAM,CAAClB,GAAG,CAACmB,OAAJ,CAAY,CAAZ,CAAD,CAApB;;AACA,qBAAK1D,cAAL,CAAoBwB,cAApB,CAAmC,QAAnC,EAA6CM,YAA7C,CAA0D1C,KAA1D,EAAiEuE,MAAjE,GAA0Eb,OAAK,CAACc,sBAAN,EAA1E;AACH;AACJ,aALD,EAKGxC,KALH;AAMH,WAPD,EAOG,CAAC,UAAD,CAPH;AAQH;;AACOgC,QAAAA,UAAU,GAAG;AACjB,iBAAO,KAAK9C,KAAL,CAAWK,YAAX,CAAwBI,YAAxB,KAAyC;AAAA;AAAA,oCAAS8C,QAAzD;AACH;;AACDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAzKuE,O","sourcesContent":["import { _decorator, animation, find, Label, Node, sp } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { global } from '../../../hall';\r\nimport { BuyType } from '../../../hall/components/Hall_ShopPanel';\r\nimport StepNumber from '../../../utils/StepNumber';\r\nimport { DialogInfo, DialogType, GameType, GameTypeInfo } from '../type';\r\nimport { getNodeByNameDeep } from '../../../utils/tool';\r\nimport config from '../config';\r\nimport SkeletonAnimationPlayer from '../../../utils/SkeletonPlay';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n    miniVal: number,\r\n    majorVal: number,\r\n    grandVal: number,\r\n}\r\n\r\nexport interface IProps {\r\n    miniVal?: number,\r\n    majorVal?: number,\r\n    grandVal?: number,\r\n    gameTypeInfo: GameTypeInfo,\r\n    amountInfo?: any\r\n}\r\nexport interface IEvent {\r\n}\r\n\r\n@ccclass('DragonV2topValue')\r\nexport class DragonV2topValue extends BaseComponent<IState, IProps, IEvent> {\r\n    private mini_numer: Node\r\n    private major_numer: Node\r\n    private jackpot_number: Node\r\n    private mini_numerSpecial: Node\r\n    private major_numerSpecial: Node\r\n    private jackpot_numberSpecial: Node\r\n    private theNumberOfDragonBalls : number = 0\r\n    start() {\r\n\r\n    }\r\n    protected propertyNode = {\r\n\r\n    }\r\n\r\n    public props: IProps = {\r\n        miniVal: null,\r\n        majorVal: null,\r\n        grandVal: null,\r\n        amountInfo: null,\r\n        gameTypeInfo: {\r\n            lastGameType: GameType.NONE,\r\n            currGameType: GameType.NONE,\r\n            viewGameType: GameType.NONE,\r\n            leftCount: 0\r\n        },\r\n    }\r\n\r\n    public events: IEvent = {\r\n        onWindowCloseHandler: (dialogType: DialogType) => { }\r\n    }\r\n\r\n    protected initState() {\r\n        return {\r\n            miniVal: 0,\r\n            majorVal: 0,\r\n            grandVal: 0,\r\n        }\r\n    }\r\n\r\n    protected bindEvent(): void {\r\n        this.mini_numer = this.node.getChildByName('mini_numer')\r\n        this.major_numer = this.node.getChildByName('major_numer')\r\n        this.jackpot_number = this.node.getChildByName('jackpot_number')\r\n        this.mini_numerSpecial = this.mini_numer.getChildByName('special')\r\n        this.major_numerSpecial = this.major_numer.getChildByName('special')\r\n        this.jackpot_numberSpecial = this.jackpot_number.getChildByName('special')\r\n        this.isDisplaysAFlashingBox(false)\r\n    }\r\n   /*  显示闪动框 */\r\n    isDisplaysAFlashingBox(isShow:boolean){\r\n        this.mini_numerSpecial.active=isShow\r\n        this.major_numerSpecial.active=isShow\r\n        this.jackpot_numberSpecial.active=isShow\r\n    }\r\n    /* 闪动框回调 */\r\n    public flashbox(done?) {\r\n        this.isDisplaysAFlashingBox(true)\r\n        let mini_numerSpecial = new SkeletonAnimationPlayer(this.mini_numerSpecial.getComponent(sp.Skeleton), 'animation2', false,()=>{\r\n            // mini_numerSpecial.changeAnimation('animation1',false)\r\n        })\r\n        mini_numerSpecial.playAnimation()\r\n        let major_numerSpecial = new SkeletonAnimationPlayer(this.major_numerSpecial.getComponent(sp.Skeleton), 'animation2', false,()=>{\r\n            // major_numerSpecial.changeAnimation('animation1',false)\r\n        })\r\n        major_numerSpecial.playAnimation()\r\n        let jackpot_numberSpecial = new SkeletonAnimationPlayer(this.jackpot_numberSpecial.getComponent(sp.Skeleton), 'animation2', false, () => {\r\n            // jackpot_numberSpecial.changeAnimation('animation1',false,()=>{\r\n            //     jackpot_numberSpecial.stopAnimation()\r\n            //     this.isDisplaysAFlashingBox(false)\r\n            //     done && done()\r\n            // })\r\n            this.isDisplaysAFlashingBox(false)\r\n            done && done()\r\n        })\r\n        jackpot_numberSpecial.playAnimation()\r\n    }\r\n   public initTamako(){\r\n    this.node.getChildByName('smallDragonBeadPanel').children.forEach((item, index) => {\r\n        item.active = false\r\n    })\r\n    this.isDisplaysAFlashingBox(false)\r\n    }\r\n    /* 显示小龙珠 */\r\n    public setTamako(num: number) {\r\n        if(this.theNumberOfDragonBalls == num){ //如果龙珠和上把一样\r\n            return\r\n        }else{\r\n            this.theNumberOfDragonBalls=num\r\n            this.node.getChildByName('smallDragonBeadPanel').active=true\r\n            this.node.getChildByName('smallDragonBeadPanel').children.forEach((item, index) => {\r\n                item.active = (index <= num - 1)\r\n            })\r\n        }\r\n        if (num == 5) {\r\n            this.mini_numerSpecial.active=true\r\n            let mini = new SkeletonAnimationPlayer(this.mini_numerSpecial.getComponent(sp.Skeleton), 'animation1', false, () => {\r\n                mini.changeAnimation('animation2', true)\r\n            })\r\n            mini.playAnimation()\r\n        } else if (num == 10) {\r\n            this.major_numerSpecial.active=true\r\n            let major = new SkeletonAnimationPlayer(this.major_numerSpecial.getComponent(sp.Skeleton), 'animation1', false, () => {\r\n                major.changeAnimation('animation2', true)\r\n            })\r\n            major.playAnimation()\r\n        } else if (num == 15) {\r\n            this.jackpot_numberSpecial.active=true\r\n            let jackpot = new SkeletonAnimationPlayer(this.jackpot_numberSpecial.getComponent(sp.Skeleton), 'animation1', false, () => {\r\n                jackpot.changeAnimation('animation2', true)\r\n            })\r\n            jackpot.playAnimation()\r\n        }\r\n    }\r\n    protected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n        if (key === 'amountInfo') {\r\n            this.flashbox()\r\n            this.setState({ miniVal: value.cur.value * config.winning[1].maxRate })\r\n            this.setState({ majorVal: value.cur.value * config.winning[2].maxRate })\r\n            if (this.props.amountInfo.positionId < 6) {\r\n                this.setState({ grandVal: value.cur.value * config.winning[3].maxRate })\r\n            }\r\n        }\r\n        if (key === 'gameTypeInfo') {\r\n            this.node.getChildByName('mini_bg').active = this.isSubgame2()\r\n            this.node.getChildByName('main_bg').active = !this.isSubgame2()\r\n        }\r\n        if (key === 'grandVal') {\r\n            if (this.props.amountInfo.positionId >= 6) {\r\n                this.setState({ grandVal: value.cur })\r\n            }\r\n            if (value.cur === 1) {\r\n                this.setState({ grandVal: this.props.amountInfo.value * config.winning[3].maxRate })\r\n            }\r\n        }\r\n    }\r\n    protected bindUI(): void {\r\n        this.useState((key, value) => {\r\n            new StepNumber(value.pre, value.cur, (num) => {\r\n                if (this.node && this.node.isValid) {\r\n                    const value = Number(num.toFixed(0));\r\n                    this.mini_numer.getChildByName('number').getComponent(Label).string = value.formatAmountWithCommas();\r\n                }\r\n            }).start();\r\n        }, [\"miniVal\"])\r\n\r\n        this.useState((key, value) => {\r\n            new StepNumber(value.pre, value.cur, (num) => {\r\n                if (this.node && this.node.isValid) {\r\n                    const value = Number(num.toFixed(0));\r\n                    this.major_numer.getChildByName('number').getComponent(Label).string = value.formatAmountWithCommas();\r\n                }\r\n            }).start();\r\n        }, [\"majorVal\"])\r\n\r\n        this.useState((key, value) => {\r\n            new StepNumber(value.pre, value.cur, (num) => {\r\n                if (this.node && this.node.isValid) {\r\n                    const value = Number(num.toFixed(0));\r\n                    this.jackpot_number.getChildByName('number').getComponent(Label).string = value.formatAmountWithCommas();\r\n                }\r\n            }).start();\r\n        }, [\"grandVal\"])\r\n    }\r\n    private isSubgame2() {\r\n        return this.props.gameTypeInfo.viewGameType === GameType.SUBGAME2\r\n    }\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n"]}