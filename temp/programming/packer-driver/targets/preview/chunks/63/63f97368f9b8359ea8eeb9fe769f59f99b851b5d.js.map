{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/store/actions/baseBoard.ts"],"names":["reduxAct","default","ToastType","ToastPosition","initState","toastData","content","type","NORMAL","loadPayload","isShow","isAllowCloseLoading","subGameInfo","isShowWebView","isLoadRecommendData","isConnect","retryConnectTimes","appDownLoadGuide","ActionTypes","addToastAction","createAction","ADD_TOAST","console","log","position","BOTTOM","setLoadingAction","SET_LOADING","isLoadPayload","setSubGameInfoAction","SET_ACTIVE_SUBGAME","setSubGameRunState","SET_SUBGAME_STATE","subGameRunState","changeWebView","CHANGE_WEB_VIEW","value","loadRecommendData","LOAD_RECOMMEND_DATA","setSocketConnectStatus","SOCKET_CONNECT","connectData","setAppDownLoadGuide","APP_DOWNLOAD_GUIDE","resetDataBaseBoard","RESET_DATA_BOARD"],"mappings":"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","sourcesContent":["import { default as reduxAct } from 'redux-act'\r\nimport { HallGameGateType, SubGameRunState } from '../../config'\r\n\r\nexport enum ToastType {\r\n  NORMAL,\r\n  WARN,\r\n  ERROR,\r\n  SUCCESS\r\n}\r\nexport enum ToastPosition {\r\n  TOP = 'top',\r\n  MIDDLE = 'middle',\r\n  BOTTOM = 'bottom'\r\n}\r\nexport type InitStateType = {\r\n  toastData: { content: string, type: ToastType },\r\n  loadPayload: { isShow: boolean, isAllowCloseLoading: boolean },\r\n  subGameInfo: HallGameGateType,\r\n  isShowWebView: boolean,\r\n  isLoadRecommendData: string,\r\n  /**是否连接有效 */\r\n  isConnect: boolean,\r\n  /**第几次重连 */\r\n  retryConnectTimes: number,\r\n  appDownLoadGuide: boolean\r\n}\r\nexport const initState: InitStateType = {\r\n  toastData: { content: \"\", type: ToastType.NORMAL },\r\n  loadPayload: { isShow: false, isAllowCloseLoading: false },\r\n  subGameInfo: null,\r\n  isShowWebView: true,\r\n  isLoadRecommendData: '',\r\n  isConnect: true,\r\n  retryConnectTimes: 1,\r\n  appDownLoadGuide: true\r\n}\r\n\r\n/**必须大写，不然redux-act这狗日的要自动加序列号 */\r\nexport enum ActionTypes {\r\n  ADD_TOAST = 'ADD_TOAST',\r\n  SET_LOADING = 'SET_LOADING',\r\n  SET_ACTIVE_SUBGAME = \"SET_ACTIVE_SUBGAME\",\r\n  SET_SUBGAME_STATE = \"SET_SUBGAME_STATE\",\r\n  RESET_DATA_BOARD = \"RESET_DATA_BOARD\",\r\n  CHANGE_WEB_VIEW = \"CHANGE_WEB_VIEW\",\r\n  LOAD_RECOMMEND_DATA = \"LOAD_RECOMMEND_DATA\",\r\n  SOCKET_CONNECT = \"SOCKET_CONNECT\",\r\n  APP_DOWNLOAD_GUIDE = \"APP_DOWNLOAD_GUIDE\"\r\n}\r\n\r\n/**定义action的payLoad类型 */\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.ADD_TOAST ? { toastData: { content: string, type: ToastType, position: ToastPosition } } :\r\n  A extends ActionTypes.SET_LOADING ? { isLoadPayload: { isShow: boolean, isAllowCloseLoading?: boolean } } :\r\n  A extends ActionTypes.SET_ACTIVE_SUBGAME ? { subGameInfo: HallGameGateType } :\r\n  A extends ActionTypes.SET_SUBGAME_STATE ? { subGameRunState: SubGameRunState } :\r\n  A extends ActionTypes.CHANGE_WEB_VIEW ? { value: boolean } :\r\n  A extends ActionTypes.LOAD_RECOMMEND_DATA ? {} :\r\n  A extends ActionTypes.SOCKET_CONNECT ? { connectData: { isConnect: boolean, retryConnectTimes?: number } } :\r\n  A extends ActionTypes.APP_DOWNLOAD_GUIDE ? { appDownLoadGuide: boolean } :\r\n  never;\r\n\r\n\r\nexport const addToastAction = reduxAct.createAction(ActionTypes.ADD_TOAST,\r\n  (toastData: { content: string, type?: ToastType, position?: ToastPosition }): ActionPayLoad<ActionTypes.ADD_TOAST> => {\r\n    console.log(toastData.content)\r\n    return { toastData: { ...toastData, type: toastData.type || ToastType.NORMAL, position: toastData.position || ToastPosition.BOTTOM } }\r\n  })\r\n\r\nexport const setLoadingAction = reduxAct.createAction(ActionTypes.SET_LOADING,\r\n  (isLoadPayload: { isShow: boolean, isAllowCloseLoading?: boolean }): ActionPayLoad<ActionTypes.SET_LOADING> => {\r\n    return { isLoadPayload }\r\n  })\r\n\r\nexport const setSubGameInfoAction = reduxAct.createAction(ActionTypes.SET_ACTIVE_SUBGAME,\r\n  (subGameInfo: HallGameGateType): ActionPayLoad<ActionTypes.SET_ACTIVE_SUBGAME> => {\r\n    return { subGameInfo }\r\n  })\r\nexport const setSubGameRunState = reduxAct.createAction(ActionTypes.SET_SUBGAME_STATE,\r\n  (subGameRunState: SubGameRunState): ActionPayLoad<ActionTypes.SET_SUBGAME_STATE> => {\r\n    return { subGameRunState }\r\n  })\r\nexport const changeWebView = reduxAct.createAction(ActionTypes.CHANGE_WEB_VIEW,\r\n  (value: boolean): ActionPayLoad<ActionTypes.CHANGE_WEB_VIEW> => {\r\n    return { value }\r\n  })\r\nexport const loadRecommendData = reduxAct.createAction(ActionTypes.LOAD_RECOMMEND_DATA,\r\n  (): ActionPayLoad<ActionTypes.LOAD_RECOMMEND_DATA> => {\r\n    return {}\r\n  })\r\nexport const setSocketConnectStatus = reduxAct.createAction(ActionTypes.SOCKET_CONNECT,\r\n  (connectData: { isConnect: boolean, retryConnectTimes?: number }): ActionPayLoad<ActionTypes.SOCKET_CONNECT> => {\r\n    return { connectData }\r\n  })\r\n\r\nexport const setAppDownLoadGuide = reduxAct.createAction(ActionTypes.APP_DOWNLOAD_GUIDE,\r\n  (appDownLoadGuide: boolean): ActionPayLoad<ActionTypes.APP_DOWNLOAD_GUIDE> => {\r\n    return { appDownLoadGuide }\r\n  })\r\n\r\nexport const resetDataBaseBoard = reduxAct.createAction(ActionTypes.RESET_DATA_BOARD, (): any => { })"]}