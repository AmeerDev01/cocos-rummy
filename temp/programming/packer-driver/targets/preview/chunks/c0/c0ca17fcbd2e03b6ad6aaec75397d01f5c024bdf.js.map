{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragon/Slot/Component/dragon_SlotPanel.ts"],"names":["Stateswitch","Error","_decorator","instantiate","Label","Node","Sprite","sp","find","config","BaseComponent","NumberRoller","getBgProxy","ccclass","property","dragon_SlotPanel","majorNumberRoller","miniNumberRoller","jackTotalNumberRoller","dragonBallCollection","start","item","winning","i","id","majorLabel","getComponent","string","maxRate","formatAmountWithCommas","miniLabel","bindUI","left","_nodes","getChildByName","children","center","right","bindEvent","triangletwoButton","on","EventType","TOUCH_END","boardtwoScrollView","active","spitfire","data","RinghtAnger_dragon","God_tk_right","God_tk_left","God_tk_center","spine","Skeleton","setCompleteListener","entry","window","setTimeout","bgController","gameType","dragonBallStatus","leftDragonSwitching","forEach","index","type","setdragonBallLightsUp","num","bl","console","log","initJACKPOT","jackPotData","JackPotContent","destroyAllChildren","sprList","getSpriteFrames","headImgUrl","avatarIndex","spr","name","node","JackPotItem","nickName","winningAmount","spriteFrame","addChild","setGod_MAJOR","mini","major","startNumberMini","parseInt","replace","startNumberMajor","startRolling","set_jack_total","jackTotal","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, instantiate, Label, Node, Sprite, sp, find } from 'cc';\r\nimport config from '../config';\r\nimport BaseComponent from \"./BaseComponent\";\r\nimport { NumberRoller } from '../utils/NumberRoller'\r\nimport { getBgProxy } from '../utils';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('dragon_SlotPanel')\r\nexport class dragon_SlotPanel extends BaseComponent {\r\n\r\n    @property(Node)\r\n    triangletwoButton: Node = null\r\n    @property(Node)\r\n    boardtwoScrollView: Node = null\r\n    @property(Label)\r\n    majorLabel: Label = null\r\n    @property(Label)\r\n    miniLabel: Label = null\r\n    @property(Label)\r\n    jackTotal: Label = null\r\n    @property(Node)\r\n    @property(Node)\r\n    JackPotContent: Node = null\r\n    @property(Node)\r\n    JackPotItem: Node = null\r\n    private majorNumberRoller: NumberRoller = new NumberRoller();\r\n    private miniNumberRoller: NumberRoller = new NumberRoller();\r\n    private jackTotalNumberRoller: NumberRoller = new NumberRoller();\r\n    private dragonBallCollection = []\r\n    start() {\r\n        const item = config.winning.find(i => i.id === 2)\r\n        this.majorLabel.getComponent(Label).string = item.maxRate.formatAmountWithCommas()\r\n        this.miniLabel.getComponent(Label).string = config.winning[0].maxRate.formatAmountWithCommas()\r\n    }\r\n    protected bindUI(): void {\r\n        let left = this._nodes['God_tk_left'].getChildByName('Charge_order').children\r\n        let center = this._nodes['God_tk_center'].getChildByName('Charge_order').children\r\n        let right = this._nodes['God_tk_right'].getChildByName('Charge_order').children\r\n        this.dragonBallCollection = [...left, ...center, ...right]\r\n        // console.log(this.dragonBallCollection, '龙设置');\r\n    }\r\n    protected bindEvent(): void {\r\n        this.triangletwoButton.on(Node.EventType.TOUCH_END, () => {\r\n            this.boardtwoScrollView.active = !this.boardtwoScrollView.active\r\n        })\r\n    }\r\n    public spitfire(data) {\r\n        let RinghtAnger_dragon = this._nodes['RinghtAnger_dragon']\r\n        let God_tk_right: Node = this._nodes['God_tk_right'];\r\n        let God_tk_left: Node = this._nodes['God_tk_left'];\r\n        let God_tk_center: Node = this._nodes['God_tk_center'];\r\n        RinghtAnger_dragon.active = true\r\n        this._nodes['Ringht_dragon'].active = false\r\n        let spine = RinghtAnger_dragon.getComponent(sp.Skeleton)\r\n        spine.setCompleteListener((entry: sp.spine.TrackEntry) => {\r\n            // 龙吐火后mini特效出现\r\n            God_tk_right.getChildByName('special').active = true\r\n            God_tk_left.getChildByName('special').active = true\r\n            God_tk_center.getChildByName('special').active = true\r\n            // 回到默认值\r\n            RinghtAnger_dragon.active = false\r\n            this._nodes['Ringht_dragon'].active = true\r\n            window.setTimeout(() => {\r\n                God_tk_right.getChildByName('special').active = false\r\n                God_tk_left.getChildByName('special').active = false\r\n                God_tk_center.getChildByName('special').active = false\r\n            }, 1500)\r\n        })\r\n    }\r\n    public bgController(gameType) {\r\n        this._nodes['bg_sg_kuang1'].active = false\r\n        this.dragonBallStatus(true)\r\n        const God_tk_right: Node = this._nodes['God_tk_right'];\r\n        const God_tk_left: Node = this._nodes['God_tk_left'];\r\n        const God_tk_center: Node = this._nodes['God_tk_center'];\r\n        if (gameType === 0) {\r\n            this.leftDragonSwitching(false)\r\n            this._nodes['bg_sg_kuang'].active = true\r\n            God_tk_right.getChildByName('special').active = false\r\n            God_tk_left.getChildByName('special').active = false\r\n            God_tk_center.getChildByName('special').active = false\r\n            this.dragonBallCollection.forEach((item, index) => {\r\n                item.active = false\r\n            })\r\n        }\r\n        else if (gameType === 1) {\r\n            this._nodes['bg_sg_kuang'].active = true\r\n        }\r\n        else if (gameType === 2) {\r\n            this.leftDragonSwitching(true)\r\n            this._nodes['bg_sg_kuang1'].active = true\r\n            this.dragonBallStatus(true)\r\n        }\r\n\r\n    }\r\n    dragonBallStatus(type) { // 龙珠状态\r\n        const God_tk_right: Node = this._nodes['God_tk_right'];\r\n        const God_tk_left: Node = this._nodes['God_tk_left'];\r\n        const God_tk_center: Node = this._nodes['God_tk_center'];\r\n        God_tk_left.getChildByName('Charge_order').active = type\r\n        God_tk_center.getChildByName('Charge_order').active = type\r\n        God_tk_right.getChildByName('Charge_order').active = type\r\n    }\r\n    setdragonBallLightsUp(num) {\r\n        let God_tk_right: Node = this._nodes['God_tk_right'];\r\n        let God_tk_left: Node = this._nodes['God_tk_left'];\r\n        let God_tk_center: Node = this._nodes['God_tk_center'];\r\n        if(num>=15){\r\n            God_tk_right.getChildByName('special').active = true\r\n            God_tk_left.getChildByName('special').active = true\r\n            God_tk_center.getChildByName('special').active = true\r\n        }else if(num>=10){\r\n            God_tk_left.getChildByName('special').active = true\r\n            God_tk_center.getChildByName('special').active = true\r\n        }else if(num>=5){\r\n            God_tk_left.getChildByName('special').active = true \r\n        }\r\n        this.dragonBallCollection.forEach((item, index) => {\r\n            if (index <= num - 1) {\r\n                item.active = true\r\n            } else {\r\n                item.active = false\r\n            }\r\n        })\r\n    }\r\n    leftDragonSwitching(bl) { // 左边龙\r\n        this._nodes['Left_dragon'].active = bl\r\n        this._nodes['Dragon_Tail'].active = !bl\r\n        console.log(this._nodes['Dragon_Tail'].active)\r\n    }\r\n    /**排行榜 */\r\n    public initJACKPOT(jackPotData) { // 排行榜\r\n        this.JackPotContent.destroyAllChildren()\r\n        let sprList = getBgProxy().getSpriteFrames()\r\n        jackPotData.forEach(item => {\r\n            let headImgUrl = `head_circle_${item.avatarIndex}`\r\n            let spr = sprList.find(item => {\r\n                return item.name == headImgUrl\r\n            })\r\n            let node = instantiate(this.JackPotItem)\r\n            node.getChildByName('One_Right').getComponent(Label).string = item.nickName + ''\r\n            find('One_Left/One_Label', node).getComponent(Label).string = item.winningAmount.formatAmountWithCommas()\r\n            find('One_Left/One_head', node).getComponent(Sprite).spriteFrame = spr\r\n            node.active = true\r\n            this.JackPotContent.addChild(node)\r\n        })\r\n    }\r\n    /**mini,major */\r\n    public setGod_MAJOR(mini, major) {\r\n        let startNumberMini = parseInt(this.miniLabel.string.replace(/,/g, \"\"));\r\n        let startNumberMajor = parseInt(this.majorLabel.string.replace(/,/g, \"\"));\r\n        this.majorNumberRoller.startRolling(startNumberMini, mini, 500, this.miniLabel)\r\n        this.miniNumberRoller.startRolling(startNumberMajor, major, 500, this.majorLabel);\r\n    }\r\n    /**jack_total */\r\n    public set_jack_total(num) {\r\n        let startNumberMajor = parseInt(this.jackTotal.string.replace(/,/g, \"\"));\r\n        this.jackTotalNumberRoller.startRolling(startNumberMajor, num, 500, this.jackTotal)\r\n    }\r\n    update(deltaTime: number) {\r\n        this.majorNumberRoller.update(deltaTime); // 手动触发滚动逻辑\r\n        this.miniNumberRoller.update(deltaTime); // 手动触发滚动逻辑\r\n        this.jackTotalNumberRoller.update(deltaTime); // 手动触发滚动逻辑\r\n    }\r\n}\r\nfunction Stateswitch() {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n"]}