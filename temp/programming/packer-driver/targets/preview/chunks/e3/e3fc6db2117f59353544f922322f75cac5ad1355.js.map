{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/viewModel/RollerPanelViewModel.ts"],"names":["ViewModel","StoreInject","getStore","AutoLauncherType","GameType","IconEffectType","config","setStopRollAction","initRollAction","setIconEffect","setRollRoundEnd","setRollSpeed","setIconYuanBaoEffect","setIconFreeGameEffect","SKT_MAG_TYPE","sktMsgListener","dataTransfer","refreshData","DataKeyType","setData","TaskScheduler","Task","PrefabPathDefine","footerViewModel","phoenix_Audio","gameBoardViewModel","sourceManageSeletor","playShellEnd","getCoin","EffectType","changeProfit","setFreeGameRate","setWaiting","updateBalance","updateSubGameTimes","BaseViewModel","addToastAction","global","lang","sendNativeVibrate","RollerPanelViewModel","constructor","lastGameType","gameType","viewGameType","rollerMap","taskScheduler","autoLaunchType","isWining","freeGameRate","stopRollerIndex","begin","dispatch","forEach","queue","queueIndex","gameOption","normalRollOption","push","index","iconQueue","map","iconId","uiData","find","i","id","iconEffect","NONE","height","singleRollerHeight","width","singleRollerWidth","intervalHeight","singleIntervalHeight","rolling","speed","rollerSpeed","speedBackUp","rollerWidth","intervalWidth","rollerIntervalWidth","stopIconIndex","direction","setEvent","panelRollEnd","rollerIndex","allRollStop","longStop","MAIN","PROFIT_AMOUNT","flicherArr","ICON_EFFECT_DATA","flicherYuanBaoArr","ICON_YUANBAO_EFFECT_DATA","yuanBaoPosition","freeGameArr","FREE_GAME_POSITION","allFlicherTask","done","length","arrItemArr","arrItem","phoenixMagnification","NORMAIL","comp","scheduleOnce","subscribeDone","freeGameTask","FreeGameItemArr","FREEEGAMEZ","yuanBaoTask","arrYuanBaoItemArr","YUANBAO","joinqQueue","multiplesOfFlight","Object","keys","multiplier","addFrequency","GAME_TYPE","SUBGAME1","SUBGAME_TIMES","showAwardTask","checkAward","BALANCE","props","stopMode","task","changeGameTypeTask","isExecute","console","log","currentGameViewModel","viewNode","active","chooseSmall","createSgChooseSmallGame","LAMIT_FAST","_taskScheduler","add","LAUNCHER_BET","data","error","hallDispatch","content","write","k","InitGameModule","FetcherFaild","placeStr","closeSubGame","confirmContent","rollerItem","dl","si","indexGameType","COINS_AFTER_BETTING","nextGameType","stopQueue","stopIndex","ROLLER_STOP_INDEX_ID","isSortStop","t","window","setInterval","clearInterval","autoLauncherPanel","setLaunchEvent","manualBetHandler","profitMultiple","PROFIT_MULTIPLE","winning","item","minRate","maxRate","FREE_GAME_AMOUNT","winnerDialog","mountView","getFile","DIALOG_WIN","source","appendTo","parentNode","parent","effectType","EFFECT1","isModal","setProps","glodAmount","killSelfHandler","unMount","unMountCallBack","destoryQueue","rollerViewModelMap","mv","removeById","connect","inject","state","game","autoLauncherType","roller","iconEffectData","jackpotAmount","iconYuanBaoEffectData","iconFreeGameEffectData"],"mappings":"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","sourcesContent":["import { Label, Node, tween } from \"cc\";\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\";\r\nimport {\r\n  phoenix_rollerPanel,\r\n  IProps,\r\n  IEvent,\r\n} from \"../components/phoenix_rollerPanel\";\r\nimport { StateType } from \"../store/reducer\";\r\nimport { getStore } from \"../store\";\r\nimport {\r\n  AutoLauncherType,\r\n  DialogType,\r\n  DirectionType,\r\n  GameType,\r\n  IconEffectType,\r\n  RollerType,\r\n  SMALLGAME,\r\n} from \"../type\";\r\nimport config from \"../config\";\r\nimport {\r\n  beginRollAction,\r\n  setStopRollAction,\r\n  initRollAction,\r\n  endRollingAction,\r\n  setIconEffect,\r\n  setRollRoundEnd,\r\n  setRollSpeed,\r\n  setIconYuanBaoEffect,\r\n  setIconFreeGameEffect,\r\n} from \"../store/actions/roller\";\r\nimport { SKT_MAG_TYPE, sktMsgListener } from \"../socketConnect\";\r\nimport dataTransfer, {\r\n  refreshData,\r\n  DataKeyType,\r\n  setData,\r\n} from \"../dataTransfer\";\r\nimport TaskScheduler, {\r\n  Task,\r\n  TaskSchedulerDefault,\r\n} from \"../../../utils/TaskScheduler\";\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\";\r\nimport {footerViewModel,phoenix_Audio,gameBoardViewModel,sourceManageSeletor,playChooseCardIn,playShellEnd,getCoin,} from \"../index\";\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\";\r\nimport { changeGame, changeProfit, setFreeGameId, setFreeGameRate, setSubGameTimes, setWaiting, updateBalance, updateJackpotAmount, updateSubGameTimes, } from \"../store/actions/game\";\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\";\r\nimport { phoenix_dialogWin, IState as BPIState, IProps as BPIProps, IEvent as BPIEvent, } from \"../components/phoenix_dialogWin\";\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\";\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\";\r\n// import SgChooseViewModel from \"./SgChooseViewModel\"\r\nimport { ChooseSmallGame } from \"./GameBoardViewModel\";\r\nimport { global, lang } from \"../../../hall\";\r\nimport { sendNativeVibrate } from \"../../../common/bridge\";\r\n\r\n@StoreInject(getStore())\r\nclass RollerPanelViewModel extends ViewModel<\r\n  phoenix_rollerPanel,\r\n  IProps,\r\n  IEvent\r\n> {\r\n  constructor() {\r\n    super(\"phoenix_rollerPanel\");\r\n  }\r\n  private lastGameType: GameType;\r\n  private gameType: GameType;\r\n  private viewGameType: GameType;\r\n  public rollerMap: RollerType[] = [];\r\n  public taskScheduler: TaskScheduler = new TaskScheduler();\r\n  private autoLaunchType: AutoLauncherType;\r\n  private isWining: boolean;\r\n  private freeGameRate: number;\r\n  // private winnerDialog: BaseViewModel<Fruit777_BigPrize, BPIState, BPIProps, BPIEvent>\r\n\r\n  private stopRollerIndex: number = -1;\r\n  protected begin() {\r\n    // const rollerMap: RollerType[] = []\r\n    this.dispatch(setRollRoundEnd(true));\r\n    // console.log(\"this.gameType === GameType.MAIN \",this.gameType === GameType.MAIN );\r\n\r\n    config[\"iconRollerQueue\"].forEach((queue, queueIndex) => {\r\n      // const isLargeRollGame: boolean = (this.gameType === GameType.SUBGAME1 && queueIndex === 1)\r\n      const gameOption = config.normalRollOption;\r\n      this.rollerMap.push({\r\n        index: queueIndex,\r\n        iconQueue: queue.map((iconId, index) => {\r\n          const uiData = config[\"rollerIcon\"].find((i) => i.id === iconId);\r\n          return {\r\n            iconId,\r\n            queueIndex: index + 1,\r\n            iconEffect: IconEffectType.NONE,\r\n            height: gameOption.singleRollerHeight,\r\n            width: gameOption.singleRollerWidth,\r\n            intervalHeight: gameOption.singleIntervalHeight,\r\n            // LargeIcon: (this.gameType === GameType.SUBGAME1 && queueIndex == 1),\r\n            uiData,\r\n          };\r\n        }),\r\n        // LargeRoller: isLargeRollGame,\r\n        rolling: false,\r\n        speed: gameOption.rollerSpeed,\r\n        speedBackUp: gameOption.rollerSpeed,\r\n        width: gameOption.rollerWidth,\r\n        intervalWidth: gameOption.rollerIntervalWidth,\r\n        stopIconIndex: -1,\r\n        direction: gameOption.direction,\r\n      });\r\n    });\r\n    // if (this.viewGameType === GameType.SUBGAME2) {\r\n    //   //马上执行的游戏类型是小游戏2\r\n    //   this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    //   this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    // }\r\n    this.setEvent({\r\n      panelRollEnd: (rollerIndex) => {\r\n        // console.log('rollerIndex', rollerIndex)\r\n        this.stopRollerIndex = rollerIndex;\r\n      },\r\n      /**滚动结束时执行 */\r\n      allRollStop: () => {\r\n        // console.log(\"allRollStop\",GameType.MAIN)\r\n        phoenix_Audio.longStop();\r\n        // this.dispatch(setRollRoundEnd(true))//是否爆浆完，控制下注按钮;\r\n        playShellEnd();\r\n        if (this.viewGameType === GameType.MAIN) {\r\n          this.dispatch(changeProfit(dataTransfer(DataKeyType.PROFIT_AMOUNT))); //更新盈利\r\n        } else {\r\n          //小游戏\r\n          // this.dispatch( changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)) ); //更新盈亏\r\n        }\r\n\r\n        // if (this.viewGameType === GameType.MAIN) {\r\n\r\n        // this.dispatch( updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)) ); //小游戏剩余次数\r\n        // }\r\n        const flicherArr: number[][][] = dataTransfer( DataKeyType.ICON_EFFECT_DATA ); //获取闪动数据\r\n        const flicherYuanBaoArr: number[][][] = dataTransfer( DataKeyType.ICON_YUANBAO_EFFECT_DATA ).yuanBaoPosition; //获取元宝闪动数据\r\n        const freeGameArr: number[][][] = dataTransfer( DataKeyType.FREE_GAME_POSITION ); //小游戏转轴位置\r\n        // flicherArr.length && fruit777_Audio.playOneShot(SoundPathDefine.FRUIT_SHELL)\r\n        /**中奖特效 */\r\n        const allFlicherTask = new Task((done) => {\r\n          if (flicherArr.length >= 1) {\r\n            let arrItemArr = [];\r\n            flicherArr.forEach((arrItem, index) => arrItemArr.push(...arrItem));\r\n            this.freeGameRate = dataTransfer(\r\n              DataKeyType.ICON_YUANBAO_EFFECT_DATA\r\n            ).phoenixMagnification;\r\n            this.dispatch(setIconEffect(IconEffectType.NORMAIL, arrItemArr));\r\n            this.dispatch(setFreeGameRate(this.freeGameRate));\r\n            if (!arrItemArr.length) {\r\n              done();\r\n            } else {\r\n              //闪烁2秒钟就结束\r\n              this.comp.scheduleOnce(() => done(), 2 )\r\n              // window.setTimeout(() => done(), 2000);\r\n            }\r\n          } else {\r\n            // this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))//小游戏剩余次数\r\n            done();\r\n          }\r\n        }).subscribeDone(`total`, () => {\r\n          this.dispatch(setIconEffect(IconEffectType.NONE, []));\r\n        });\r\n        /**小游戏特效 */\r\n        const freeGameTask = new Task((done) => {\r\n          //小游戏转轴          \r\n          if (freeGameArr.length > 0) {\r\n            let FreeGameItemArr = [];\r\n            freeGameArr.forEach((arrItem, index) =>\r\n              FreeGameItemArr.push(...arrItem)\r\n            );\r\n            // console.log(\"---arrYuanBaoItemArr\",arrYuanBaoItemArr);\r\n            this.dispatch( setIconFreeGameEffect(IconEffectType.FREEEGAMEZ, FreeGameItemArr) );\r\n            if (!FreeGameItemArr.length) {\r\n              done();\r\n            } else {\r\n              //闪烁2秒钟就结束\r\n              this.comp.scheduleOnce(() => done(), 2 )\r\n\r\n              // window.setTimeout(() => done(), 2000);\r\n            }\r\n          } else {\r\n            done();\r\n          }\r\n        }).subscribeDone(\"total\", () => {\r\n          this.dispatch(setIconFreeGameEffect(IconEffectType.NONE, []));\r\n          // this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE))); //更新用户金币值\r\n        });\r\n        /**元宝中奖特效 */\r\n        const yuanBaoTask = new Task((done) => {\r\n          if (flicherYuanBaoArr.length > 0) {\r\n            let arrYuanBaoItemArr = [];\r\n            flicherYuanBaoArr.forEach((arrItem, index) =>\r\n              arrYuanBaoItemArr.push(arrItem)\r\n            );\r\n            // console.log(\"---arrYuanBaoItemArr\",arrYuanBaoItemArr);\r\n            this.dispatch(\r\n              setIconYuanBaoEffect(IconEffectType.YUANBAO, arrYuanBaoItemArr)\r\n            );\r\n            if (!arrYuanBaoItemArr.length) {\r\n              done();\r\n            } else {\r\n              //闪烁3秒钟就结束\r\n              this.comp.scheduleOnce(() => done(), 3 )\r\n\r\n              // window.setTimeout(() => done(), 3000);\r\n            }\r\n          } else {\r\n            done();\r\n          }\r\n        }).subscribeDone(\"total\", () => {\r\n          this.dispatch(setIconYuanBaoEffect(IconEffectType.NONE, []));\r\n        });\r\n        this.taskScheduler.joinqQueue(yuanBaoTask).joinqQueue(allFlicherTask);\r\n        this.taskScheduler.joinqQueue(freeGameTask);\r\n        /**次数飞行特效*/\r\n        const multiplesOfFlight = new Task((done) => { \r\n          if(Object.keys(flicherArr).length > 0){\r\n            this.comp.multiplier(done)\r\n          } else {\r\n            done()\r\n          }\r\n        })\r\n        this.taskScheduler.joinqQueue(multiplesOfFlight, false)\r\n        //加次数\r\n        const addFrequency = new Task((done) => {\r\n          // 倍数特效\r\n          // this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.ITEMTOTALMULTIPLIER)))\r\n          //检查添加INDEXADDFREECOUNT\r\n          if (dataTransfer(DataKeyType.GAME_TYPE) == GameType.SUBGAME1) {\r\n            // 更新次数\r\n            this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n            this.comp.scheduleOnce(() => done(), 1 )\r\n\r\n          } else {\r\n            done()\r\n          }\r\n        })\r\n        this.taskScheduler.joinqQueue(addFrequency, false)\r\n\r\n\r\n        // const yuanBaoYinBiTask = new Task((done) => {\r\n        //   if (flicherYuanBaoArr.length) {\r\n            \r\n        //   }\r\n        // })\r\n\r\n        const showAwardTask = new Task((done) => {\r\n          //图标效果执行完之后要执行的任务，检查是否有爆奖 弹jackpot框\r\n          this.checkAward(done);\r\n        }).subscribeDone(\"total\", () => {\r\n          if (this.viewGameType === GameType.MAIN) {\r\n            this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE))); //更新用户金币值\r\n          }\r\n          this.dispatch(setRollRoundEnd(true)); //是否爆浆完，控制下注按钮;\r\n        });\r\n        this.taskScheduler.joinqQueue(showAwardTask, false);\r\n\r\n        //游戏不跳转，才显示每一条线，并且没有自动,11/6日：如果处于加速模式，也不显示每一个闪动了\r\n        if ( dataTransfer(DataKeyType.GAME_TYPE) === this.viewGameType && this.autoLaunchType === AutoLauncherType.NONE && this.comp.props.stopMode === \"jump\" ) {\r\n          //将闪动加入任务调度器队列\r\n          flicherArr.forEach((arrItem, index) => {\r\n            const task = new Task((done) => {\r\n              this.dispatch(setIconEffect(IconEffectType.NORMAIL, arrItem));\r\n              //闪烁2秒钟就结束\r\n              this.comp.scheduleOnce(() => done(), 1.5 )\r\n\r\n              // window.setTimeout(() => done(), 1500);\r\n            }).subscribeDone(`${index}`, () => {\r\n              this.dispatch(setIconEffect(IconEffectType.NONE, []));\r\n            });\r\n            this.taskScheduler.joinqQueue(task, false);\r\n          });\r\n        }\r\n        if ( gameBoardViewModel.changeGameTypeTask && !gameBoardViewModel.changeGameTypeTask.isExecute ) {\r\n          this.gameType = dataTransfer(DataKeyType.GAME_TYPE);\r\n          //  console.log(\"111111111111 this.gameType\",this.gameType,this.viewGameType );\r\n          //切换游戏\r\n          if (this.gameType === GameType.SUBGAME1) {\r\n            // this.dispatch(changeGame(GameType.MAIN))\r\n            this.taskScheduler.joinqQueue(\r\n              new Task((done) => {\r\n                console.log(\"2222\");\r\n                gameBoardViewModel.currentGameViewModel.viewNode.active = false;\r\n                let chooseSmall: ChooseSmallGame = {\r\n                  done,\r\n                };\r\n                // playChooseCardIn()\r\n                gameBoardViewModel.createSgChooseSmallGame(chooseSmall);\r\n              })\r\n            );\r\n          }\r\n          //禁用掉主下注按钮\r\n          this.dispatch(setRollRoundEnd(false));\r\n          this.taskScheduler.joinqQueue(gameBoardViewModel.changeGameTypeTask);\r\n        } else {\r\n          //不切换游戏\r\n\r\n          this.taskScheduler.joinqQueue(\r\n            new Task((done) => {\r\n              this.dispatch(setWaiting(true));\r\n              done();\r\n            })\r\n          );\r\n        }\r\n      },\r\n    });\r\n    // this.setProps({ rollerMap })\r\n    this.dispatch(initRollAction(this.rollerMap)); //更新每个滑槽图标信息配置\r\n\r\n    if (this.autoLaunchType === AutoLauncherType.LAMIT_FAST) {\r\n      this.dispatch(setRollSpeed(1.5));\r\n    }\r\n    const _taskScheduler = new TaskScheduler();\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET,\"roller\",(data, error) => {\r\n        if (!data) {\r\n          global.hallDispatch(addToastAction({content: lang.write((k) => k.InitGameModule.FetcherFaild,{}, { placeStr: \"数据加载失败\" }),}));\r\n          global.closeSubGame({confirmContent: lang.write((k) => k.InitGameModule.FetcherFaild),});\r\n          return;\r\n        }\r\n        if (error) {\r\n          console.log(error);\r\n          this.dispatch(addToastAction({ content: error }));\r\n          this.rollerMap.forEach((rollerItem, index) => {\r\n            this.dispatch(setStopRollAction(index, 1));\r\n          });\r\n        } else {\r\n          console.log(\"refreshData(data)\", data);\r\n          refreshData(data);\r\n          if (data.dl.si[0].indexGameType === GameType.MAIN) {\r\n            this.dispatch(updateBalance(dataTransfer(DataKeyType.COINS_AFTER_BETTING)));\r\n          }\r\n          setData(\"gameType\", data.dl.si[0].nextGameType);\r\n          this.taskScheduler.stopQueue(false);\r\n          this.dispatch(setIconEffect(IconEffectType.NONE, []));\r\n          const stopIndex: number[] = dataTransfer(DataKeyType.ROLLER_STOP_INDEX_ID);\r\n          this.stopRollerIndex = -1;\r\n          this.rollerMap.forEach((rollerItem, index) => {\r\n            //顺序停止，stopMode=index的时候不使用这种方案，因为一轮可能就会花不少时间，所以最好不用这种\r\n            if (this.comp.props.stopMode === \"jump\" &&this.comp.props.isSortStop) {\r\n              _taskScheduler.joinqQueue(new Task((done) => {\r\n                  this.dispatch(setStopRollAction(index, stopIndex ? stopIndex[index] : 0));\r\n                  if (index < 5) {\r\n                    const t = window.setInterval(() => {\r\n                      if (this.stopRollerIndex === index) {\r\n                        window.clearInterval(t);\r\n                        done();\r\n                      }\r\n                    }, 50);\r\n                  } else {\r\n                    done();\r\n                  }\r\n                })\r\n              );\r\n            } else {\r\n              this.dispatch(\r\n                setStopRollAction(index, stopIndex ? stopIndex[index] : 0)\r\n              );\r\n            }\r\n          });\r\n        }\r\n      },\r\n      0\r\n    );\r\n\r\n    // this.dispatch( changeProfit( dataTransfer( this.viewGameType === GameType.MAIN ? DataKeyType.PROFIT_AMOUNT : DataKeyType.FREE_GAME_AMOUNT  ) ) );\r\n    this.dispatch(changeProfit(0))\r\n    this.comp.scheduleOnce(() => {\r\n      this.dispatch(setWaiting(true))\r\n    }, 1.5 )\r\n\r\n    // window.setTimeout(() => {\r\n    //   console.log(\"this.isWaiting setWaiting\");\r\n\r\n    //   this.dispatch(setWaiting(true)); //是否等待人工操作\r\n    // }, 1500);\r\n    /**自动运行的函数 */\r\n    footerViewModel.autoLauncherPanel.setLaunchEvent(() => {\r\n      footerViewModel.manualBetHandler();\r\n    });\r\n  }\r\n  /**检查是否要爆奖，爆什么奖 */\r\n  private checkAward(done: Function) {\r\n    /**盈利值 */\r\n    const profitMultiple = dataTransfer(DataKeyType.PROFIT_MULTIPLE);\r\n    const winning = config.winning.find( (item) => item.minRate <= profitMultiple && profitMultiple <= item.maxRate ); //判断使用哪个dialog\r\n\r\n    if (winning) {\r\n      sendNativeVibrate(200);\r\n      this.isWining = true;\r\n      this.dispatch( changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)) ); //更新盈亏\r\n      const winnerDialog = new BaseViewModel<phoenix_dialogWin,BPIState,BPIProps,BPIEvent>(\"phoenix_dialogWin\").mountView(\r\n          sourceManageSeletor().getFile(PrefabPathDefine.DIALOG_WIN).source).appendTo(this.parentNode.parent, {effectType: EffectType.EFFECT1,\r\n          isModal: true,}).setProps({winning,glodAmount: dataTransfer(DataKeyType.PROFIT_AMOUNT),})\r\n          .setEvent({\r\n            killSelfHandler: () => {\r\n              winnerDialog.unMount(EffectType.EFFECT1);\r\n               //小游戏\r\n                done();\r\n              },\r\n            });\r\n      getCoin();\r\n    } else {\r\n      done();\r\n    }\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.taskScheduler.destoryQueue();\r\n    this.comp.rollerViewModelMap.forEach((mv) => mv.unMount());\r\n    // this.comp.rollerViewModelMap = []\r\n    this.dispatch(initRollAction([]));\r\n    sktMsgListener.removeById(\"roller\");\r\n    // this.winnerDialog && this.winnerDialog.unMount()\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      this.lastGameType = state.game.lastGameType;\r\n      // this.gameType = state.game.currGameType\r\n      this.viewGameType = state.game.viewGameType;\r\n      this.autoLaunchType = state.game.autoLauncherType;\r\n      return {\r\n        rollerMap: state.roller.rollerMap,\r\n        iconEffectData: state.roller.iconEffectData,\r\n        jackpotAmount: state.game.jackpotAmount,\r\n        stopMode: state.game.stopMode,\r\n        isSortStop: state.game.isSortStop,\r\n        iconYuanBaoEffectData: state.roller.iconYuanBaoEffectData,\r\n        iconFreeGameEffectData: state.roller.iconFreeGameEffectData,\r\n        freeGameRate: state.game.freeGameRate,\r\n      };\r\n    });\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default RollerPanelViewModel;\r\n"]}