{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/components/phoenix_small_result.ts"],"names":["_decorator","Label","tween","BaseComponent","ccclass","property","phoenix_small_result","propertyNode","props_label_result_num","props","goldAmount","events","killSelfHadler","start","destroyView","initState","bindEvent","useProps","key","value","console","log","cur","string","formatAmountWithCommas","node","delay","call","destroy","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,K,OAAAA,K;AAAaC,MAAAA,K,OAAAA,K;;AACpCC,MAAAA,a,iBAAAA,a;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;sCAejBM,oB,WADZF,OAAO,CAAC,sBAAD,C,gBAAR,MACaE,oBADb;AAAA;AAAA,0CACgF;AAAA;AAAA;AAAA,eAKrEC,YALqE,GAKtD;AAClBC,YAAAA,sBAAsB,EAAC,IAAIP,KAAJ;AADL,WALsD;AAAA,eASxEQ,KATwE,GASxD;AAChBC,YAAAA,UAAU,EAAC;AADK,WATwD;AAAA,eAaxEC,MAbwE,GAavD;AACjBC,YAAAA,cAAc,EAAE,MAAM,CAAG;AADR,WAbuD;AAAA;;AAC/EC,QAAAA,KAAK,GAAG;AACD,eAAKC,WAAL;AACN;;AAeSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAE3B;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AACpE,cAAID,GAAG,KAAK,YAAZ,EAA0B;AACzBE,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,KAAK,CAACG,GAA/B;AAES,iBAAKf,YAAL,CAAkBC,sBAAlB,CAAyCe,MAAzC,GAAkDJ,KAAK,CAACG,GAAN,CAAUE,sBAAV,EAAlD;AAED;AACN;;AAEOV,QAAAA,WAAW,GAAG;AAClBZ,UAAAA,KAAK,CAAC,KAAKuB,IAAN,CAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0BC,IAA1B,CAA+B,MAAM;AAEjC,iBAAKF,IAAL,CAAUG,OAAV;AACH,WAHD,EAGGf,KAHH;AAIH;;AAEMgB,QAAAA,MAAM,GAAS,CAExB;;AAGDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAnD8E,O","sourcesContent":["import { _decorator, Component, Label, Node, tween } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { GameType } from '../type';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n    goldAmount:number,\r\n}\r\nexport interface IEvent {\r\n    killSelfHadler: () => void,\r\n    \r\n}\r\n\r\n@ccclass('phoenix_small_result')\r\nexport class phoenix_small_result extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n        this.destroyView();\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n        props_label_result_num:new Label()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n        goldAmount:0,\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n        killSelfHadler: () => { },\r\n        \r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === \"goldAmount\") {\r\n\t\t\tconsole.log(\"goldAmount\",value.cur);\r\n\t\t\t\r\n            this.propertyNode.props_label_result_num.string = value.cur.formatAmountWithCommas()\r\n\r\n          }\r\n    }\r\n    \r\n    private destroyView() {\r\n        tween(this.node).delay(2).call(() => {\r\n            \r\n            this.node.destroy()\r\n        }).start()\r\n    }\r\n\r\n\tprotected bindUI(): void {\r\n  \r\n\t}\r\n\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}