{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonV2/components/DragonV2_RulePanel.ts"],"names":["_decorator","Node","BaseComponent","ccclass","property","DragonV2_RulePanel","propertyNode","props_helpPage","props_btnClose","props","events","onClose","start","initState","bindEvent","on","EventType","TOUCH_END","useProps","key","value","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;;AACZC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;oCAajBK,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb;AAAA;AAAA,0CAC8E;AAAA;AAAA;AAAA,eAKnEC,YALmE,GAKpD;AACxBC,YAAAA,cAAc,EAAE,IAAIN,IAAJ,EADQ;AAExBO,YAAAA,cAAc,EAAE,IAAIP,IAAJ,EAFQ,CAGxB;AACA;;AAJwB,WALoD;AAAA,eAYtEQ,KAZsE,GAYtD,EAZsD;AAAA,eAetEC,MAfsE,GAerD;AACvBC,YAAAA,OAAO,EAAE,MAAM,CAAG;AADK,WAfqD;AAAA;;AAC7EC,QAAAA,KAAK,GAAG,CAEP;;AAgBSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AACA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKR,YAAL,CAAkBE,cAAlB,CAAiCO,EAAjC,CAAoCd,IAAI,CAACe,SAAL,CAAeC,SAAnD,EAA8D,MAAM;AACnE,iBAAKP,MAAL,CAAYC,OAAZ;AACA,WAFD,EAD2B,CAI3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAESO,QAAAA,QAAQ,CAACC,GAAD,EAAiCC,KAAjC,EAAgE,CACjF;;AAESC,QAAAA,MAAM,GAAS,CACxB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3D4E,O","sourcesContent":["import { _decorator, Node, PageView } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n}\r\nexport interface IEvent {\r\n\tonClose: () => void\r\n}\r\n\r\n@ccclass('DragonV2_RulePanel')\r\nexport class DragonV2_RulePanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_helpPage: new Node(),\r\n\t\tprops_btnClose: new Node(),\r\n\t\t// props_btnRight: new Node(),\r\n\t\t// props_btnLeft: new Node(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tonClose: () => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btnClose.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.events.onClose();\r\n\t\t})\r\n\t\t// this.propertyNode.props_btnRight.on(Node.EventType.TOUCH_END, () => {\r\n\t\t// \tconst pageView = this.propertyNode.props_helpPage.getComponent(PageView)\r\n\t\t// \tlet curPageIdx = pageView.curPageIdx + 1;\r\n\t\t// \tif (curPageIdx >= pageView.getPages().length) {\r\n\t\t// \t\tcurPageIdx = 0;\r\n\t\t// \t\t// pageView.scrollToPage(curPageIdx, 0);\r\n\t\t// \t\tpageView.setCurrentPageIndex(curPageIdx);\r\n\t\t// \t} else {\r\n\t\t// \t\tpageView.setCurrentPageIndex(curPageIdx);\r\n\t\t// \t}\r\n\t\t// })\r\n\t\t// this.propertyNode.props_btnLeft.on(Node.EventType.TOUCH_END, () => {\r\n\t\t// \tconst pageView = this.propertyNode.props_helpPage.getComponent(PageView)\r\n\t\t// \tlet curPageIdx = pageView.curPageIdx - 1;\r\n\t\t// \tif (curPageIdx < 0) {\r\n\t\t// \t\tcurPageIdx = pageView.getPages().length - 1;\r\n\t\t// \t\t// pageView.scrollToPage(curPageIdx, 0);\r\n\t\t// \t\tpageView.setCurrentPageIndex(curPageIdx);\r\n\t\t// \t} else {\r\n\t\t// \t\tpageView.setCurrentPageIndex(curPageIdx);\r\n\t\t// \t}\r\n\t\t// })\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps | '_setDone', value: { pre: any, cur: any }) {\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}