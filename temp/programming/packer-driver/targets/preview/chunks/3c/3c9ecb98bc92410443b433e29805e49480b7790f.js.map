{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/utils/encryption.ts"],"names":["cryptojs","data","encryptedKey","enc","Hex","parse","encryptedByteStr","Utf8","encryptedData","AES","encrypt","mode","ECB","padding","pad","PKCS7","ciphertext","toString"],"mappings":";;;;;;;;;;;;;;;AACOA,MAAAA,Q;;;;;kFADP;;;AAEA;yBAEgBC,IAAD,IAAkB;AAC/B,YAAMC,YAAY,GAAG;AAAA;AAAA,kCAASC,GAAT,CAAaC,GAAb,CAAiBC,KAAjB,CAAuB,kCAAvB,CAArB;AACA,YAAMC,gBAAgB,GAAG;AAAA;AAAA,kCAASH,GAAT,CAAaI,IAAb,CAAkBF,KAAlB,CAAwBJ,IAAxB,CAAzB;AACA,YAAMO,aAAa,GAAG;AAAA;AAAA,kCAASC,GAAT,CAAaC,OAAb,CAAqBJ,gBAArB,EAAuCJ,YAAvC,EAAqD;AACzES,UAAAA,IAAI,EAAE;AAAA;AAAA,oCAASA,IAAT,CAAcC,GADqD;AAEzEC,UAAAA,OAAO,EAAE;AAAA;AAAA,oCAASC,GAAT,CAAaC;AAFmD,SAArD,CAAtB;AAIA,eAAOP,aAAa,CAACQ,UAAd,CAAyBC,QAAzB,EAAP;AACD,O","sourcesContent":["// import { inject } from \"vue\"\r\nimport cryptojs from 'crypto-ts'\r\n// const cryptojs = inject(\"cryptojs\") as any\r\n\r\nexport default (data: string) => {\r\n  const encryptedKey = cryptojs.enc.Hex.parse(\"6bb4837eb74329105ee4568dda7dc67e\")\r\n  const encryptedByteStr = cryptojs.enc.Utf8.parse(data)\r\n  const encryptedData = cryptojs.AES.encrypt(encryptedByteStr, encryptedKey, {\r\n    mode: cryptojs.mode.ECB,\r\n    padding: cryptojs.pad.PKCS7\r\n  })\r\n  return encryptedData.ciphertext.toString()\r\n}"]}