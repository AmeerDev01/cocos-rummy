{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/components/login_v2/Hall_RegPageV2.ts"],"names":["_decorator","Button","EditBox","Node","BaseComponent","global","lang","InputValidator","addToastAction","CaptchaGenerator","ccclass","property","Hall_RegPageV2","captchaGenerator","propertyNode","props_closeBtu","props_input_akun","props_input_sandi","props_input_kSandi","props_btn_ok","props_input_kode","props_spr_kode","props","events","closeHandler","regHandler","regDoneHandler","start","initState","bindEvent","node","on","EventType","TOUCH_END","generate","loginName","string","trim","password","password_re","success","begin","isIDAPhoneNumber","isEmtry","write","k","HallModule","passwordEmptyError","placeStr","isChartLength","confirmPasswordEmptyError","done","hallDispatch","content","pwdRepetitionError","valodateCode","length","captchaEmptyError","toLocaleLowerCase","captcha","captchaError","useProps","key","value","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, EditBox, Label, Node, sys } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { fetcher, global, lang } from '../../index';\r\nimport InputValidator from '../../../utils/InputValidator';\r\nimport { addToastAction } from '../../store/actions/baseBoard';\r\nimport CaptchaGenerator from '../../../utils/CaptchaGenerator';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n}\r\n\r\nexport interface IProps {\r\n\r\n}\r\n\r\nexport interface IEvent {\r\n\tcloseHandler: () => void\r\n\tregHandler: (loginName: string, password: string) => void\r\n\t/**注册成功的回调 */\r\n\tregDoneHandler: () => void\r\n}\r\n\r\n@ccclass('Hall_RegPageV2')\r\nexport class Hall_RegPageV2 extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() { }\r\n\tprivate captchaGenerator: CaptchaGenerator\r\n\tprotected propertyNode = {\r\n\t\tprops_closeBtu: new Button(),\r\n\t\t/**用户名 */\r\n\t\tprops_input_akun: new EditBox(),\r\n\t\t/**第一遍密码 */\r\n\t\tprops_input_sandi: new EditBox(),\r\n\t\t/**重复密码 */\r\n\t\tprops_input_kSandi: new EditBox(),\r\n\t\t/**确认 */\r\n\t\tprops_btn_ok: new Button(),\r\n\t\t/**验证码 */\r\n\t\tprops_input_kode: new EditBox(),\r\n\t\t/**验证码图片 */\r\n\t\tprops_spr_kode: new Node()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tcloseHandler: () => { },\r\n\t\tregHandler: () => { },\r\n\t\tregDoneHandler: () => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_closeBtu.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.events.closeHandler()\r\n\t\t})\r\n\t\t/**切换验证码 */\r\n\t\tthis.propertyNode.props_spr_kode.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.captchaGenerator.generate()\r\n\t\t})\r\n\t\tthis.propertyNode.props_btn_ok.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tconst loginName = this.propertyNode.props_input_akun.string.trim()\r\n\t\t\tconst password = this.propertyNode.props_input_sandi.string.trim()\r\n\t\t\tconst password_re = this.propertyNode.props_input_kSandi.string.trim()\r\n\t\t\tlet success = false;\r\n\t\t\tnew InputValidator().begin().isIDAPhoneNumber(loginName)\r\n\t\t\t.isEmtry(password, lang.write(k => k.HallModule.passwordEmptyError, {}, { placeStr: \"请输入密码\" }))\r\n\t\t\t.isChartLength([6, 30], password)\r\n\t\t\t.isEmtry(password_re, lang.write(k => k.HallModule.confirmPasswordEmptyError, {}, { placeStr: \"请输入确认密码\" }))\r\n\t\t\t.isChartLength([6, 30], password_re).done(() => {\r\n\t\t\t\tsuccess = true;\r\n\t\t\t})\r\n\r\n\t\t\tif (!success) return;\r\n\t\t\tif (password !== password_re) {\r\n\t\t\t\tglobal.hallDispatch(addToastAction({ content: lang.write(k => k.HallModule.pwdRepetitionError, {}, { placeStr: \"两次输入的密码不一致\" }) }))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst valodateCode = this.propertyNode.props_input_kode.string\r\n\t\t\tif(valodateCode.trim().length === 0){\r\n\t\t\t\tglobal.hallDispatch(addToastAction({ content: lang.write(k => k.HallModule.captchaEmptyError, {}, { placeStr: \"请输入验证码\" }) }))\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (valodateCode.toLocaleLowerCase() !== this.captchaGenerator.captcha.toLocaleLowerCase()) {\r\n\t\t\t\tthis.captchaGenerator.generate()\r\n\t\t\t\tthis.propertyNode.props_input_kode.string = '';\r\n\t\t\t\tglobal.hallDispatch(addToastAction({ content: lang.write(k => k.HallModule.captchaError, {}, { placeStr: \"验证码错误\" }) }))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tthis.events.regHandler(loginName, password)\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\t/**传入的props变更触发的函数 */\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.captchaGenerator = new CaptchaGenerator(this.propertyNode.props_spr_kode, 4)\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}