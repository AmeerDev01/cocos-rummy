{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/components/Yxx_Setting.ts"],"names":["_decorator","Button","Node","Toggle","BaseComponent","UseSetOption","playBtnClick","playMainBg","yxxAudio","ccclass","property","Yxx_Setting","propertyNode","props_btn_close","props_toggle_music","props_toggle_sound","props","events","close","start","initState","bindEvent","node","on","EventType","TOUCH_END","toggle","Instance","setOption","option","music","pause","sound","useProps","key","value","bindUI","isChecked","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;AAC1BC,MAAAA,a,iBAAAA,a;;AACFC,MAAAA,Y;;AACEC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,U,iBAAAA,U;;AACdC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;6BAcjBW,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb;AAAA;AAAA,0CACuE;AAAA;AAAA;AAAA,eAK5DC,YAL4D,GAK7C;AACxBC,YAAAA,eAAe,EAAE,IAAIZ,MAAJ,EADO;AAExBa,YAAAA,kBAAkB,EAAE,IAAIX,MAAJ,EAFI;AAGxBY,YAAAA,kBAAkB,EAAE,IAAIZ,MAAJ;AAHI,WAL6C;AAAA,eAW/Da,KAX+D,GAW/C,EAX+C;AAAA,eAe/DC,MAf+D,GAe9C;AACvBC,YAAAA,KAAK,EAAE,MAAM,CAAG;AADO,WAf8C;AAAA;;AACtEC,QAAAA,KAAK,GAAG,CAEP;;AAiBSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKT,YAAL,CAAkBC,eAAlB,CAAkCS,IAAlC,CAAuCC,EAAvC,CAA0CrB,IAAI,CAACsB,SAAL,CAAeC,SAAzD,EAAoE,MAAM;AACzE;AAAA;AAAA;AACA,iBAAKR,MAAL,CAAYC,KAAZ;AACA,WAHD;AAIA,eAAKN,YAAL,CAAkBE,kBAAlB,CAAqCQ,IAArC,CAA0CC,EAA1C,CAA6CrB,IAAI,CAACsB,SAAL,CAAeC,SAA5D,EAAwEC,MAAD,IAAoB;AAC1F;AAAA;AAAA;AACA;AAAA;AAAA,8CAAaC,QAAb,GAAwBC,SAAxB,CAAkC,OAAlC,EAA2C,CAAC;AAAA;AAAA,8CAAaD,QAAb,GAAwBE,MAAxB,CAA+BC,KAA3E;AACA;AAAA;AAAA,8CAAaH,QAAb,GAAwBE,MAAxB,CAA+BC,KAA/B,GAAuC;AAAA;AAAA,2CAAvC,GAAsD;AAAA;AAAA,sCAASC,KAAT,EAAtD;AACA,WAJD;AAKA,eAAKnB,YAAL,CAAkBG,kBAAlB,CAAqCO,IAArC,CAA0CC,EAA1C,CAA6CrB,IAAI,CAACsB,SAAL,CAAeC,SAA5D,EAAwEC,MAAD,IAAoB;AAC1F;AAAA;AAAA;AACA;AAAA;AAAA,8CAAaC,QAAb,GAAwBC,SAAxB,CAAkC,OAAlC,EAA2C,CAAC;AAAA;AAAA,8CAAaD,QAAb,GAAwBE,MAAxB,CAA+BG,KAA3E;AACA,WAHD;AAIA;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CAEpE;;AAESC,QAAAA,MAAM,GAAS;AACxB,eAAKxB,YAAL,CAAkBE,kBAAlB,CAAqCuB,SAArC,GAAiD;AAAA;AAAA,4CAAaV,QAAb,GAAwBE,MAAxB,CAA+BC,KAAhF;AACA,eAAKlB,YAAL,CAAkBG,kBAAlB,CAAqCsB,SAArC,GAAiD;AAAA;AAAA,4CAAaV,QAAb,GAAwBE,MAAxB,CAA+BG,KAAhF;AACA;;AAEDM,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AArDqE,O","sourcesContent":["import { _decorator, Button, Node, Toggle } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport UseSetOption from '../../../utils/UseSetOption';\r\nimport { playBtnClick, playMainBg } from '../index';\r\nimport { yxxAudio } from '../index';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\r\n}\r\nexport interface IEvent {\r\n\tclose: () => void\r\n}\r\n\r\n@ccclass('Yxx_Setting')\r\nexport class Yxx_Setting extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_close: new Button(),\r\n\t\tprops_toggle_music: new Toggle(),\r\n\t\tprops_toggle_sound: new Toggle(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tclose: () => { }\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_close.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tplayBtnClick();\r\n\t\t\tthis.events.close();\r\n\t\t});\r\n\t\tthis.propertyNode.props_toggle_music.node.on(Node.EventType.TOUCH_END, (toggle: Toggle) => {\r\n\t\t\tplayBtnClick();\r\n\t\t\tUseSetOption.Instance().setOption('music', !UseSetOption.Instance().option.music)\r\n\t\t\tUseSetOption.Instance().option.music ? playMainBg() : yxxAudio.pause();\r\n\t\t});\r\n\t\tthis.propertyNode.props_toggle_sound.node.on(Node.EventType.TOUCH_END, (toggle: Toggle) => {\r\n\t\t\tplayBtnClick();\r\n\t\t\tUseSetOption.Instance().setOption('sound', !UseSetOption.Instance().option.sound)\r\n\t\t});\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.propertyNode.props_toggle_music.isChecked = UseSetOption.Instance().option.music;\r\n\t\tthis.propertyNode.props_toggle_sound.isChecked = UseSetOption.Instance().option.sound;\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}