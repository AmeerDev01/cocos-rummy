{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/Crash/Crash_Main.ts"],"names":["_decorator","Component","Node","assetManager","ProgressBar","Prefab","instantiate","SpriteFrame","Label","Crash_GameConfig","Crash_WsManager","Crash_DataManager","ProtocolCode","Crash_NetMsgDispatcher","AudioManager","global","lang","initConfig","SubGameRunState","addToastAction","setSubGameRunState","ccclass","property","Crash_Main","BUNDLE","PRELOAD_DIR","ENTRY_PREFAB","BODY_PREFAB","ApplicationGlobal","lbVersion","progressBar","start","init","node","createConnect","scheduleOnce","loadBundle","_error","_bundle","preload","console","error","stack","getInstance","e","hallDispatch","content","String","load","progress","total","LOADING","setSubGameGate","gameId","err","assets","isAllowOpenSubGame","READY","_prefabPath","_prefab","get","_node","getChildByName","getComponent","on","EventType","TOUCH_END","closeConnect","closeSubGame","addChild","loadDir","SpriteFrames","log","name","setHeadSpriteFrame","setNumberSpriteFrame","setTimeout","loadPreload","_finished","_total","string","toFixed","data","write","k","WebSocketModule","GameInit","placeStr","RUN","parent","destroy","active","cb","regCallBack","RES_USER_INFORMATION","bettingSituation","then","response","item","gameConfig","find","id","isTest","connect","WsUrl","ws","bl","socketConnectAuthFaild","closeMusic","confirmContent","ConfigGameFaild","stopCrash_WsManage"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, assetManager, director, ProgressBar, AssetManager, Prefab, instantiate, SpriteFrame, Texture2D, Label } from 'cc';\r\nimport { Crash_GameConfig } from \"./config/Crash_GameConfig\";\r\nimport Crash_WsManager from \"./net/Crash_WsManager\";\r\nimport { Crash_DataManager } from \"./manager/Crash_DataManager\";\r\nimport { UserLoginProtocol } from \"./net/protocol/HttpProtocol\";\r\nimport { ProtocolCode } from \"./net/protocol/ProtocolDef\";\r\nimport Crash_NetMsgDispatcher from './net/Crash_NetMsgDispatcher';\r\nimport { AudioManager } from \"./manager/AudioManager\";\r\nimport {global, lang} from \"../../hall\";\r\nimport { initConfig, SubGameRunState } from '../../hall/config';\r\nimport {addToastAction, setSubGameRunState} from \"../../hall/store/actions/baseBoard\";\r\nconst { ccclass, property } = _decorator;\r\n//场景类\r\n@ccclass('CrashMain')\r\nexport class Crash_Main extends Component {\r\n    // ab包\r\n    private BUNDLE = \"Crash\";\r\n    //预加载资源\r\n    private PRELOAD_DIR = \"res/preload\";\r\n    // 入口预制体\r\n    private ENTRY_PREFAB = \"loader\";\r\n    private BODY_PREFAB = \"main\";\r\n    private ApplicationGlobal: Node = null\r\n    private lbVersion: Label = null\r\n    private progressBar: ProgressBar = null\r\n    start() {\r\n        this.init()\r\n    }\r\n    public init(node?) {\r\n        if (node) {\r\n            this.ApplicationGlobal = node\r\n        }\r\n        this.createConnect(() => {\r\n            this.scheduleOnce(()=>{\r\n                assetManager.loadBundle(this.BUNDLE, (_error, _bundle) => {\r\n                    if (_bundle) {\r\n                        this.preload(_bundle);\r\n                    } else {\r\n                        console.error(_error.stack);\r\n                    }\r\n                });\r\n            },1)\r\n        })\r\n    }\r\n    private async preload(_bundle: AssetManager.Bundle) {\r\n        try{\r\n            await AudioManager.getInstance().init(_bundle)\r\n        }catch(e) {\r\n            global.hallDispatch(addToastAction({content: String(e)}))\r\n        }\r\n        _bundle.load(\"res/preload/loader\", (progress, total) => {\r\n            global.hallDispatch(setSubGameRunState(SubGameRunState.LOADING))\r\n            global.setSubGameGate(Crash_GameConfig.gameId, (progress / total))\r\n        }, (err, assets) => {\r\n            if (err) {\r\n                console.error(err);\r\n                return;\r\n            }\r\n            if (!global.isAllowOpenSubGame(Crash_GameConfig.gameId)) return\r\n            global.hallDispatch(setSubGameRunState(SubGameRunState.READY))\r\n            let _prefabPath = `${this.PRELOAD_DIR}/${this.ENTRY_PREFAB}`\r\n            let _prefab: Prefab = _bundle.get(_prefabPath, Prefab);\r\n            let _node = instantiate(_prefab);\r\n            this.lbVersion = _node.getChildByName(\"Version\").getComponent(Label)\r\n            this.progressBar = _node.getChildByName(\"loadProgress\").getComponent(ProgressBar)\r\n            _node.getChildByName(\"props_btn_return\").on(Node.EventType.TOUCH_END, () => {\r\n                Crash_WsManager.getInstance().closeConnect()\r\n                global.closeSubGame()\r\n            })\r\n            // this.lbVersion.string =Crash_GameConfig.Version;\r\n            this.progressBar.progress = 1;\r\n            this.ApplicationGlobal.addChild(_node);\r\n            _bundle.loadDir('res/main/head', SpriteFrame, null, (err, SpriteFrames) => {\r\n                if (err) {\r\n                    console.log(`theResourceFailedToLoad ${name}：`, err);\r\n                }\r\n                Crash_DataManager.getInstance().setHeadSpriteFrame(SpriteFrames)\r\n            })\r\n            // 数字弹窗\r\n            _bundle.loadDir(\"res/main/number\", SpriteFrame, (err, assets) => {\r\n                if (err) {\r\n                    console.error(err);\r\n                    return;\r\n                }\r\n                Crash_DataManager.getInstance().setNumberSpriteFrame(assets)\r\n                // let timer=setInterval(()=>{\r\n                //     console.log(Crash_WsManager.getInstance().wsState)\r\n                //      if(Crash_WsManager.getInstance().wsState === 2 ){\r\n                //          this.loadPreload( this.aaa)\r\n                //          clearInterval(timer)\r\n                //      }\r\n                //  },500)\r\n                setTimeout(() => {\r\n                    this.loadPreload(_bundle)\r\n                }, 2000)\r\n            })\r\n        })\r\n    }\r\n    loadPreload(_bundle) {\r\n        _bundle.loadDir(this.PRELOAD_DIR, (_finished: number, _total: number) => {\r\n            this.progressBar.progress = 1 - _finished / _total;\r\n            this.lbVersion.string = (_finished / _total * 100).toFixed(0) + '%'\r\n        }, (error, data) => {\r\n            this.lbVersion.string=lang.write(k => k.WebSocketModule.GameInit, {}, { placeStr: \"Game init...\" })\r\n            global.hallDispatch(setSubGameRunState(SubGameRunState.RUN))\r\n            let _prefabPath = `${this.PRELOAD_DIR}/${this.BODY_PREFAB}`\r\n            let _prefab: Prefab = _bundle.get(_prefabPath, Prefab);\r\n            let _node = instantiate(_prefab);\r\n            if (this.ApplicationGlobal) {\r\n                this.ApplicationGlobal.addChild(_node);\r\n            } else {\r\n                this.node.addChild(_node);\r\n            }\r\n            this.progressBar.node.parent.destroy()\r\n            this.progressBar.node.active = false;\r\n        })\r\n    }\r\n    createConnect(cb) {\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.RES_USER_INFORMATION, this, this.bettingSituation);\r\n        initConfig().then((response) => {\r\n            const item = response.gameConfig.find(item => item.id === 5)\r\n            if (Crash_GameConfig.isTest) {\r\n                Crash_WsManager.getInstance().connect(Crash_GameConfig.WsUrl);\r\n            } else {\r\n                Crash_WsManager.getInstance().connect(item.ws);\r\n            }\r\n            cb()\r\n        })\r\n    }\r\n    bettingSituation(bl,data){\r\n        if(!bl){\r\n            global.hallDispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectAuthFaild, {}, { placeStr: \"认证失败\" }) }))\r\n            AudioManager.getInstance().closeMusic(()=>{\r\n                global.closeSubGame({confirmContent: lang.write(k =>  k.WebSocketModule.ConfigGameFaild)})\r\n            })\r\n        }\r\n    }\r\n    stopCrash_WsManage() {\r\n        Crash_WsManager.getInstance().closeConnect()\r\n    }\r\n}\r\n"]}