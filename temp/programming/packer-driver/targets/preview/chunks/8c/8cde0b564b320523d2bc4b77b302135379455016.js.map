{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/gxfc/Slot/Mediator/LoaderMediator.ts"],"names":["LoaderMediator","Prefab","assetManager","instantiate","PrefabDefine","BaseMediator","AudioManager","global","addToastAction","setSubGameRunState","SubGameRunState","config","LoaderViewType","constructor","mediatorName","viewComponent","sourceMap","key","path","LOADER_PANEL","sourceType","source","listNotificationConst","name","INIT_LOADER_PANEL","handler","notification","panel","getSource","loadBundle","err","_bundle","getInstance","init","e","hallDispatch","content","String","load","progress","total","LOADING","setSubGameGate","gameId","prefab","isAllowOpenSubGame","READY","node","addChild","fileList","getBody","data","loaderScript","getComponent","remainNum","length","forEach","file","i","setLoadingProgress","getLoaderState","done","RUN","listenerEvent"],"mappings":";;;iOAkBqBA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBZC,MAAAA,M,OAAAA,M;AAAoCC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,W,OAAAA,W;;AAIlDC,MAAAA,Y,iBAAAA,Y;;AACFC,MAAAA,Y;;AAIEC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,M,iBAAAA,M;;AACDC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,kB,iBAAAA,kB;;AACfC,MAAAA,e,iBAAAA,e;;AACFC,MAAAA,M;;;;;;;;;gCAEKC,c,0BAAAA,c;AAAAA,QAAAA,c;eAAAA,c;;;yBAGSZ,c,GAAN,MAAMA,cAAN;AAAA;AAAA,wCAA0C;AAChDa,QAAAA,WAAW,CAACC,YAAD,EAA8BC,aAA9B,EAAyD;AAAA,cAAxDD,YAAwD;AAAxDA,YAAAA,YAAwD,GAAjC,IAAiC;AAAA;;AAAA,cAA3BC,aAA2B;AAA3BA,YAAAA,aAA2B,GAAN,IAAM;AAAA;;AACzE,gBAAMD,YAAN,EAAoBC,aAApB;AADyE,eAGpEC,SAHoE,GAGpC,CACrC;AACEC,YAAAA,GAAG,EAAE,aADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaC,YAFrB;AAGEC,YAAAA,UAAU,EAAEnB,MAHd;AAIEoB,YAAAA,MAAM,EAAE;AAJV,WADqC,CAHoC;AAAA,eAcjEC,qBAdiE,GAcD,CACxE;AACEC,YAAAA,IAAI,EAAEX,cAAc,CAACY,iBADvB;;AAEEC,YAAAA,OAAO,CAACC,YAAD,EAA8B;AAAA;;AACnC,kBAAMC,KAAK,GAAG,KAAKC,SAAL,CAAe;AAAA;AAAA,gDAAaT,YAA5B,EAA0C,KAA1C,CAAd,CADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAjB,cAAAA,YAAY,CAAC2B,UAAb,CAAwB,MAAxB,iCAAgC,WAAOC,GAAP,EAAYC,OAAZ,EAAwB;AACtD;AACE,oBAAG;AACC,wBAAM;AAAA;AAAA,oDAAaC,WAAb,GAA2BC,IAA3B,CAAgCF,OAAhC,CAAN;AACH,iBAFD,CAEC,OAAMG,CAAN,EAAS;AACN;AAAA;AAAA,wCAAOC,YAAP,CAAoB;AAAA;AAAA,wDAAe;AAACC,oBAAAA,OAAO,EAAEC,MAAM,CAACH,CAAD;AAAhB,mBAAf,CAApB;AACH;;AACHH,gBAAAA,OAAO,CAACO,IAAR,CAAaX,KAAK,CAACT,IAAnB,EAAyBjB,MAAzB,EAAiC,CAACsC,QAAD,EAAWC,KAAX,KAAqB;AACpD;AAAA;AAAA,wCAAOL,YAAP,CAAoB;AAAA;AAAA,gEAAmB;AAAA;AAAA,0DAAgBM,OAAnC,CAApB;AACA;AAAA;AAAA,wCAAOC,cAAP,CAAsB;AAAA;AAAA,wCAAOC,MAA7B,EAAsCJ,QAAQ,GAAGC,KAAjD;AACD,iBAHD,EAGG,CAACV,GAAD,EAAMc,MAAN,KAAiB;AAClB,sBAAI,CAAC;AAAA;AAAA,wCAAOC,kBAAP,CAA0B;AAAA;AAAA,wCAAOF,MAAjC,CAAL,EAA+C;AAC/C;AAAA;AAAA,wCAAOR,YAAP,CAAoB;AAAA;AAAA,gEAAmB;AAAA;AAAA,0DAAgBW,KAAnC,CAApB;AACA,sBAAMC,IAAI,GAAG5C,WAAW,CAACyC,MAAD,CAAxB;;AACA,kBAAA,KAAI,CAAC7B,aAAL,CAAmBiC,QAAnB,CAA4BD,IAA5B;;AACA,sBAAME,QAAuB,GAAGvB,YAAY,CAACwB,OAAb,GAAuBC,IAAvD;AACA,sBAAMC,YAAY,GAAgBL,IAAI,CAACM,YAAL,CAAkB,aAAlB,CAAlC;AACA,sBAAIC,SAAS,GAAGL,QAAQ,CAACM,MAAzB,CAPkB,CAQlB;;AACAN,kBAAAA,QAAQ,CAACO,OAAT,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B3B,oBAAAA,OAAO,CAACO,IAAR,CAAamB,IAAI,CAACvC,IAAlB,EAAwBjB,MAAxB,EAAgC,CAAC6B,GAAD,EAAMc,MAAN,KAAiB;AAC/Ca,sBAAAA,IAAI,CAACpC,MAAL,GAAcuB,MAAd;AACAQ,sBAAAA,YAAY,CAACO,kBAAb,CAAgCF,IAAI,CAACxC,GAArC,EAA0CgC,QAAQ,CAACM,MAAnD,EAA2D,EAAED,SAA7D;;AACA,0BAAIF,YAAY,CAACQ,cAAb,EAAJ,EAAmC;AACjC,4BAAI,CAACN,SAAL,EAAgB;AACd5B,0BAAAA,YAAY,CAACwB,OAAb,GAAuBW,IAAvB;AACA;AAAA;AAAA,gDAAO1B,YAAP,CAAoB;AAAA;AAAA,wEAAmB;AAAA;AAAA,kEAAgB2B,GAAnC,CAApB;AACD;AACF;AACF,qBATD;AAUD,mBAXD;AAYD,iBAxBD;AAyBD,eAhCD;AAiCD;;AArDH,WADwE,CAdC;AAE1E;;AASSC,QAAAA,aAAa,GAAG,CAEzB;;AAdsD,O","sourcesContent":["import { Prefab, Script, TypeScript, Widget, assetManager, instantiate, AudioClip } from \"cc\";\r\nimport { INotification } from \"../../Framework/interfaces/INotification\";\r\nimport Mediator from \"../../Framework/patterns/mediator/Mediator\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { PrefabDefine } from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\";\r\nimport { IlistTypeHander } from \"../types/IlistTypeHander\";\r\nimport { ISourceFile } from \"../types/ISourceFile\";\r\nimport { gxfc_Loader } from \"../Component/gxfc_Loader\";\r\nimport { AudioManager } from \"../Managr/AudioManager\";\r\nimport { global } from \"../../../../hall\";\r\nimport {addToastAction, setSubGameRunState} from \"../../../../hall/store/actions/baseBoard\";\r\nimport { SubGameRunState } from \"../../../../hall/config\";\r\nimport config from \"../config\";\r\n\r\nexport enum LoaderViewType {\r\n  INIT_LOADER_PANEL = \"initLoaderPanel\"\r\n}\r\nexport default class LoaderMediator extends BaseMediator {\r\n  public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n    super(mediatorName, viewComponent)\r\n  }\r\n  public sourceMap: Array<ISourceFile> = [\r\n    {\r\n      key: 'loaderPanel',\r\n      path: PrefabDefine.LOADER_PANEL,\r\n      sourceType: Prefab,\r\n      source: null\r\n    }\r\n  ]\r\n  protected listenerEvent() {\r\n\r\n  }\r\n  protected listNotificationConst: Array<IlistTypeHander<LoaderMediator>> = [\r\n    {\r\n      name: LoaderViewType.INIT_LOADER_PANEL,\r\n      handler(notification: INotification) {\r\n        const panel = this.getSource(PrefabDefine.LOADER_PANEL, false)\r\n        // resources.load(panel.path, Prefab, (err, prefab) => {\r\n        //   // 首先贴入加载框面板\r\n        //   const node = instantiate(prefab)\r\n        //   this.viewComponent.addChild(node)\r\n        //   const fileList: ISourceFile[] = notification.getBody().data\r\n        //   const loaderScript = <Loader>node.getComponent(\"Loader\")\r\n        //   let remainNum = fileList.length\r\n        //   //加载面板\r\n        //   fileList.forEach((file, i) => {\r\n        //     resources.load(file.path, Prefab, (err, prefab) => {\r\n        //       file.source = prefab\r\n        //       loaderScript.setLoadingProgress(file.key, fileList.length, --remainNum)\r\n        //       !remainNum && notification.getBody().done()\r\n        //     })\r\n        //   })\r\n        // })\r\n        assetManager.loadBundle(\"gxfc\", async (err, _bundle) => {\r\n          // 首先贴入加载框面板\r\n            try{\r\n                await AudioManager.getInstance().init(_bundle)\r\n            }catch(e) {\r\n                global.hallDispatch(addToastAction({content: String(e)}))\r\n            }\r\n          _bundle.load(panel.path, Prefab, (progress, total) => {\r\n            global.hallDispatch(setSubGameRunState(SubGameRunState.LOADING))\r\n            global.setSubGameGate(config.gameId, (progress / total))\r\n          }, (err, prefab) => {\r\n            if (!global.isAllowOpenSubGame(config.gameId)) return\r\n            global.hallDispatch(setSubGameRunState(SubGameRunState.READY))\r\n            const node = instantiate(prefab)\r\n            this.viewComponent.addChild(node)\r\n            const fileList: ISourceFile[] = notification.getBody().data\r\n            const loaderScript = <gxfc_Loader>node.getComponent(\"gxfc_Loader\")\r\n            let remainNum = fileList.length\r\n            //加载面板\r\n            fileList.forEach((file, i) => {\r\n              _bundle.load(file.path, Prefab, (err, prefab) => {\r\n                file.source = prefab\r\n                loaderScript.setLoadingProgress(file.key, fileList.length, --remainNum)\r\n                if (loaderScript.getLoaderState()) {\r\n                  if (!remainNum) {\r\n                    notification.getBody().done()\r\n                    global.hallDispatch(setSubGameRunState(SubGameRunState.RUN))\r\n                  }\r\n                }\r\n              })\r\n            })\r\n          })\r\n        })\r\n      }\r\n    }\r\n  ]\r\n}\r\n"]}