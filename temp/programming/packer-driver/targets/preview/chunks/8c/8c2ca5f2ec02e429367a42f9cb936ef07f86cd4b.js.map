{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/common/fish/ActionCurve.ts"],"names":["ActionCurve","rotatinPoint","x","y","degree","radian","getCurPoint","t","prePos","item","t1","t2","fparam","v","time","pos","getpos","ftype","rot","getPostionByTime","lst","spos","startIndex","curPos","Vec3","line","len","length","ep","i","undefined","instantiate","cos","sin","pia","atan","pi","frule","CURVE_TYPE","abs","dt","constructor","startPos","ratio","funcLst","curDefineWay","curActionSeconds","isReserve","rotationAngle","curAngle","curIndex","startDefineWay","init","addCurve","cveinfo","fitem","s","x2","x1","ag","cicle","push","getAllTime","key","setStartPo","setRatio","getPosAndSlopeByTime","pos0","pos1","res","dx","dy","getPosAndAngleByTime","k","bcal","isCurveEnd","it","resetInfo","getActionWay","setActionReserve","bres","n","setActionRotation","angle","clearAllCurve","setCurveRatio"],"mappings":"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","sourcesContent":["import { Vec3, instantiate } from \"cc\";\r\nimport { cos, sin, pia, atan, pi, frule, CURVE_TYPE, abs, dt } from \"./CalculteRule\";\r\n\r\n// 按照顺时针旋转坐标\r\nexport function rotatinPoint(x, y, degree) {\r\n    let radian = (degree / pia) * pi;\r\n    return [x * cos(radian) + y * sin(radian), y * cos(radian) - x * sin(radian)];\r\n}\r\n/**\r\n * 获得当前位置\r\n * @param t 时间\r\n * @param prePos 上一个线段的结束位置\r\n * @param item 参数\r\n * @returns \r\n */\r\nexport function getCurPoint(t, prePos, item) {\r\n    // 计算走了多长的记录 距离 = 速度 * 时间\r\n    if (t >= item.t1 && t < item.t2) {\r\n        item.fparam.x = item.v * (t - item.t1);\r\n    }\r\n    else {\r\n        item.fparam.x = item.v * item.time;\r\n    }\r\n    let pos = frule.getpos(item.ftype, item.fparam);\r\n    // console.log(`t: ${t} , t1: ${item.t1}, t2: ${item.t2}, v: ${item.v}, x : ${item.fparam.x}, ftype: ${item.ftype}, fparam : `, item.fparam);\r\n    let x = pos[0];\r\n    let y = pos[1];\r\n    // 旋转位置\r\n    if (item.rot && item.rot !== 0) {\r\n        pos = rotatinPoint(x, y, item.rot);\r\n        x = pos[0];\r\n        y = pos[1];\r\n    }\r\n    if (prePos) {\r\n        return [prePos.x + x, prePos.y + y];\r\n    }\r\n    return [x, y];\r\n}\r\n/**\r\n * 根据时间获得位置\r\n * @param t 时间\r\n * @param lst 线段数组\r\n * @param rot 整个路径的旋转角度\r\n * @param spos 起始位置\r\n * @param startIndex 开始线段索引\r\n * @returns \r\n */\r\nexport function getPostionByTime(t, lst, rot, spos: Vec3, startIndex) {\r\n    // 当前位置\r\n    let curPos = new Vec3(0, 0);\r\n    // 线类型\r\n    let ftype = -1;\r\n    // 第几条线段\r\n    let line = -1;\r\n    let len = lst.length - 1;\r\n    if (t < 0 || t >= lst[len].t2) {\r\n        return [lst[len].ep, lst[len].ftype, line];\r\n    }\r\n    startIndex = startIndex >= 0 ? startIndex : 0;\r\n    for (let i = startIndex; i <= len; i++) {\r\n        let v = lst[i];\r\n        if (t >= v.t1 && t < v.t2) {\r\n            let ep = i > 0 ? lst[i - 1].ep : undefined;\r\n            let pos = getCurPoint(t, ep, v);\r\n            curPos.x = pos[0]\r\n            curPos.y = pos[1]\r\n            if (rot && rot !== 0) {\r\n                pos = rotatinPoint(curPos.x, curPos.y, rot);\r\n                curPos.x = pos[0]\r\n                curPos.y = pos[1]\r\n            }\r\n            curPos.x = curPos.x + spos.x;\r\n            curPos.y = curPos.y + spos.y;\r\n            ftype = v.ftype;\r\n            line = i;\r\n            break;\r\n        }\r\n    }\r\n    return [curPos, ftype, line];\r\n}\r\n\r\nexport class ActionCurve {\r\n    constructor(startPos, ratio) {\r\n        this.init(startPos, ratio);\r\n    }\r\n\r\n    funcLst: any[] = [];\r\n    startPos: Vec3 = new Vec3(0, 0);\r\n    ratio: number = 1;\r\n    /**当前运动方向，右为正方向，左为负方向 */\r\n    curDefineWay = 1;\r\n    /**当前运行时间 */\r\n    curActionSeconds = 0;\r\n    isReserve = false;\r\n    rotationAngle = 0;\r\n    curAngle = 0;\r\n    curIndex = -1;\r\n    /**开始运动方向 */\r\n    public startDefineWay = 0;\r\n\r\n    public init(startPos: Vec3, ratio) {\r\n        this.funcLst = []\r\n        this.startPos = startPos\r\n        this.ratio = ratio\r\n        this.curDefineWay = 1 //运动方向，右为正方向，左为负方向\r\n        this.curActionSeconds = 0 //当前运行时间\r\n        this.isReserve = false //是否反向\r\n        this.rotationAngle = 0 //正为顺时针方向 0 ~ 360 负为逆时针方向 -360 ~ 0\r\n        this.curAngle = 0 //当前斜率角度\r\n        this.curIndex = -1 //当前运行函数\r\n    }\r\n    // 添加线段\r\n    public addCurve(cveinfo) {\r\n        let fitem: any = {};\r\n        // 运动时间\r\n        fitem.time = cveinfo.t;\r\n        // 两点之间的距离\r\n        fitem.s = cveinfo.x2 - cveinfo.x1;\r\n        fitem.ag = cveinfo.ag;\r\n        // 旋转角度\r\n        fitem.rot = cveinfo.rot;\r\n        // 速度 = 距离 / 时间\r\n        fitem.v = fitem.s / fitem.time;\r\n        if (cveinfo.ftype === CURVE_TYPE.cicle) {\r\n            fitem.v = fitem.ag / fitem.time;\r\n        }\r\n        // 画线类型\r\n        fitem.ftype = cveinfo.ftype;\r\n        fitem.fparam = instantiate(cveinfo.fparam);\r\n        fitem.fparam.x = 0;\r\n        fitem.x1 = cveinfo.x1;\r\n        fitem.x2 = cveinfo.x2;\r\n        // 线段的结束坐标\r\n        fitem.ep = new Vec3(0, 0);\r\n        if (this.isReserve) {\r\n            fitem.s = cveinfo.x1 - cveinfo.x2;\r\n            fitem.v = fitem.s / fitem.time;\r\n            if (cveinfo.ftype === CURVE_TYPE.cicle) {\r\n                fitem.ag = -fitem.ag;\r\n                fitem.v = fitem.ag / fitem.time;\r\n            }\r\n            fitem.x1 = cveinfo.x2;\r\n            fitem.x2 = cveinfo.x1;\r\n        }\r\n        let len = this.funcLst.length - 1;\r\n        if (len < 0) {\r\n            fitem.t1 = 0;\r\n            fitem.t2 = fitem.t1 + fitem.time;\r\n            let pos = getCurPoint(fitem.t2, undefined, fitem);\r\n            fitem.ep.x = pos[0]\r\n            fitem.ep.y = pos[1]\r\n            this.funcLst.push(fitem)\r\n        }\r\n        else {\r\n            fitem.t1 = this.funcLst[len].t2;\r\n            fitem.t2 = fitem.t1 + fitem.time;\r\n            let pos = getCurPoint(fitem.t2, this.funcLst[len].ep, fitem)\r\n            fitem.ep.x = pos[0];\r\n            fitem.ep.y = pos[1];\r\n            this.funcLst.push(fitem)\r\n        }\r\n    };\r\n    public getAllTime() {\r\n        let time = 0;\r\n        for (const key in this.funcLst) {\r\n            const v = this.funcLst[key];\r\n            time = time + v.time;\r\n        }\r\n        return time;\r\n    };\r\n    public setStartPo(pos) {\r\n        this.startPos = pos;\r\n    };\r\n    public setRatio(ratio: number) {\r\n        this.ratio = ratio !== undefined ? ratio : 1;\r\n    };\r\n    // 返回下一个画线坐标\r\n    public getPosAndSlopeByTime(t: number) {\r\n        this.curActionSeconds = t;\r\n        let pos0, ftype, line, pos1;\r\n        const res = getPostionByTime(t, this.funcLst, this.rotationAngle, this.startPos, this.curIndex);\r\n        pos0 = res[0];\r\n        ftype = res[1];\r\n        line = res[2];\r\n        if ((ftype !== CURVE_TYPE.line) || (ftype === CURVE_TYPE.line && line !== this.curIndex)) {\r\n            pos1 = getPostionByTime(t + dt, this.funcLst, this.rotationAngle, this.startPos, line)[0]\r\n        }\r\n        this.curIndex = line;\r\n        if (pos1 && line >= 0) {\r\n            this.curDefineWay = 1;\r\n            if (pos0.x > pos1.x) {\r\n                this.curDefineWay = -1;\r\n            }\r\n            let dx = pos1.x - pos0.x;\r\n            let dy = pos1.y - pos0.y;\r\n            if (abs(dx) <= 0.000000001) {\r\n                if (pos0.y >= pos1.y) {\r\n                    this.curDefineWay = -1;\r\n                }\r\n                else {\r\n                    this.curDefineWay = 1;\r\n                }\r\n                return [pos0, undefined, true];\r\n            }\r\n            return [pos0, dy / dx, true];\r\n        }\r\n        return [pos0, undefined, false];\r\n    };\r\n    public getPosAndAngleByTime(t) {\r\n        this.curActionSeconds = t;\r\n        let pos, k, bcal;\r\n        const res = this.getPosAndSlopeByTime(t)\r\n        // 保存该路线的开始方向\r\n        this.curIndex === 0 && this.startDefineWay === 0 && (this.startDefineWay = this.curDefineWay);\r\n        pos = res[0]\r\n        k = res[1]\r\n        bcal = res[2]\r\n        if (bcal) {\r\n            if (k === undefined) {\r\n                if (this.curDefineWay === -1) {\r\n                    this.curAngle = 270;\r\n                }\r\n                else {\r\n                    this.curAngle = 90;\r\n                }\r\n            }\r\n            else {\r\n                if (this.curDefineWay === 1) {\r\n                    this.curAngle = 360 + atan(k) * pia / pi;\r\n                }\r\n                else {\r\n                    this.curAngle = 180 + atan(k) * pia / pi;\r\n                }\r\n            }\r\n        }\r\n        return [pos, this.curAngle];\r\n    };\r\n    public isCurveEnd() {\r\n        let it = this.funcLst[this.funcLst.length - 1];\r\n        if (it) {\r\n            if (it.t2 > this.curActionSeconds) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    public resetInfo() {\r\n        this.curActionSeconds = 0;\r\n    };\r\n    public getActionWay() {\r\n        return this.curDefineWay;\r\n    };\r\n    public setActionReserve(bres: boolean) {\r\n        this.isReserve = bres;\r\n        if (this.isReserve) {\r\n            let i = 0;\r\n            for (const key in this.funcLst) {\r\n                const n = this.funcLst[key];\r\n                n.x1 = n.x2;\r\n                n.x2 = n.x1;\r\n                n.s = n.x2 - n.x1;\r\n                n.v = n.s / n.time;\r\n                if (n.ftype === CURVE_TYPE.cicle) {\r\n                    n.ag = -n.ag;\r\n                    n.v = n.ag / n.time;\r\n                }\r\n                let ep = i > 0 ? this.funcLst[i - 1].ep : undefined;\r\n                let pos = getCurPoint(n.t2, ep, n)\r\n                n.ep.x = pos[0]\r\n                n.ep.y = pos[1]\r\n                i++;\r\n            }\r\n        }\r\n    };\r\n\r\n    public setActionRotation(angle) {\r\n        if (angle >= 0 && angle <= 360) {\r\n            this.rotationAngle = angle;\r\n        }\r\n    };\r\n    public clearAllCurve() {\r\n        this.funcLst = [];\r\n    };\r\n    public setCurveRatio(ratio) {\r\n        this.ratio = ratio !== undefined ? ratio : 0;\r\n    };\r\n}\r\n\r\n"]}