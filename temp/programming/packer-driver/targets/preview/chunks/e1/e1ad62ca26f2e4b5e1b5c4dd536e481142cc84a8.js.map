{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragon/Slot/Managr/AudioManager.ts"],"names":["AudioManager","assert","AudioClip","clamp01","LocalStorageUtils","LOCAL_DATA_KEY","Singleton","SceneBgMusic","mainBg","gameBg","gameBgT","SoundList","buttonClick","coinCollection","rollerFast","theRollerStops","miniGameRingtones","voice","spitOut","fallBall","dragAndDropToTurnThePage","add_coin","reduce_coin","chooseNum","audioSource","soundVolume","MusicVolum","AudioClipArray","getInstance","_getInstance","init","_bundle","Promise","resolve","reject","loadDir","err","clip","console","warn","updateTheMusicStatus","OPTION","getItem","JSON","sound","music","setMusicVolume","setAudioSource","playMusic","name","loop","isValid","pauseMusic","find","item","info","playing","play","pause","resumeMusic","playSound","playOneShot","volume","flag","setSoundVolume","openMusic","closeMusic","cb","destroy","openSound","closeSound"],"mappings":"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","sourcesContent":["import { assert, AudioClip, AudioSource, clamp01 } from \"cc\";\r\nimport LocalStorageUtils, { LOCAL_DATA_KEY } from \"../utils/LocalStorageUtils\";\r\nimport Singleton from \"./Singleton\";\r\nexport const SceneBgMusic = {\r\n    mainBg: \"dragon_bg\", // 主音乐\r\n    gameBg: \"dragon_sg_bg1\",// 小游戏1主音乐\r\n    gameBgT: \"dragon_sg_bg2\",//小游戏2主音乐\r\n}\r\nexport const SoundList = {\r\n    buttonClick: \"btn_click\", //点击按钮\r\n    coinCollection: \"get_coin\", // 金币收集结算\r\n    rollerFast: \"fast_roller\", //滚轴加速\r\n    theRollerStops: \"shell_end\",//滚轴停止滚动\r\n    miniGameRingtones: \"ling\", // 小游戏铃声\r\n    voice: \"dragon_sound\",    //小游戏动画龙吟声\r\n    spitOut: \"dragon_ball\", //金龙吐球\r\n    fallBall: \"dragon_fall\", //火球向下掉\r\n    dragAndDropToTurnThePage: \"turn\",// 规则翻页\r\n    add_coin: \"maxCoin\",// 增加下注、最大下注\r\n    reduce_coin: \"minCoin\",// 减小下注\r\n    chooseNum: \"biu\", //选择自转次数时音效\r\n}\r\n\r\nexport class AudioManager extends Singleton {\r\n    //private static instance: AudioManager = null;\r\n    private audioSource?: AudioSource = null;\r\n    private soundVolume: number = 1;\r\n    private MusicVolum: number = 1;\r\n    private AudioClipArray = []\r\n    public static getInstance(): AudioManager {\r\n        return super._getInstance<AudioManager>();\r\n    }\r\n    public init(_bundle) {\r\n        return new Promise((resolve, reject) => {\r\n            _bundle.loadDir(\"audio\", AudioClip, (err, clip) => {\r\n                if (err) {\r\n                    console.warn('load audioClip failed: ', err);\r\n                    reject(err)\r\n                    return;\r\n                }\r\n                resolve(true)\r\n                this.AudioClipArray = clip\r\n            })\r\n        })\r\n\r\n    }\r\n    public updateTheMusicStatus() {\r\n        let OPTION = LocalStorageUtils.getItem(LOCAL_DATA_KEY.OPTION, JSON, true);\r\n        this.soundVolume = OPTION.sound ? 1 : 0;\r\n        this.MusicVolum = OPTION.music ? 0.5 : 0;\r\n        this.setMusicVolume(this.MusicVolum);\r\n    }\r\n    public setAudioSource(audioSource: AudioSource) {\r\n        let OPTION = LocalStorageUtils.getItem(LOCAL_DATA_KEY.OPTION, JSON, true);\r\n        this.audioSource = audioSource;\r\n        this.soundVolume = OPTION.sound ? 1 : 0;\r\n        this.MusicVolum = OPTION.music ? 0.5 : 0;\r\n        this.setMusicVolume(this.MusicVolum);\r\n    }\r\n    public playMusic(name: string, loop: boolean) {\r\n        if (!this.audioSource || !this.audioSource.isValid) return;\r\n        assert(this.audioSource, 'AudioManager not inited!');\r\n        if (name == \"\") { return; }\r\n        // if(!(this.audioSource.volume > 0)) {\r\n        //     return;\r\n        // }\r\n        this.pauseMusic()\r\n        this.audioSource.loop = loop;\r\n        let music = this.AudioClipArray.find(item => item.name === name)\r\n        if (music) {\r\n            if (!this.audioSource || !this.audioSource.isValid) return;\r\n            console.info(\"playMusic \", name);\r\n            this.audioSource.clip = music;\r\n            if (!this.audioSource.playing) {\r\n                this.audioSource.play();\r\n            }\r\n        } else {\r\n            console.info(\"audioNotFound \", name);\r\n        }\r\n\r\n        // this.bundle.load(\"audio/\" + name, AudioClip, (err, clip)=> {\r\n        //     if (err) {\r\n        //         console.warn('load audioClip failed: ', err);\r\n        //         return;\r\n        //     }\r\n        //     if(!this.audioSource || !this.audioSource.isValid) return;\r\n        //     console.info(\"playMusic \", name);\r\n        //     this.audioSource.clip = clip;\r\n        //     if (!this.audioSource.playing) {\r\n        //         this.audioSource.play();\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    public pauseMusic() {\r\n        if (!this.audioSource || !this.audioSource.isValid) { return; }\r\n        this.audioSource.playing && this.audioSource.pause();\r\n    }\r\n\r\n    public resumeMusic() {\r\n        if (!this.audioSource || !this.audioSource.isValid) { return; }\r\n\r\n        this.audioSource.playing && this.audioSource.play();\r\n    }\r\n\r\n    public playSound(name: string) {\r\n        if (!(this.soundVolume > 0)) {\r\n            return;\r\n        }\r\n        if (!this.audioSource || !this.audioSource.isValid) return;\r\n        name = name ?? \"\";\r\n        assert(this.audioSource, 'AudioManager not inited!');\r\n        let sound = this.AudioClipArray.find(item => item.name === name)\r\n        if (sound) {\r\n            if (!this.audioSource || !this.audioSource.isValid) return;\r\n            console.info(\"playSound \", name);\r\n            this.setMusicVolume(this.soundVolume)\r\n            this.audioSource.playOneShot(sound, this.audioSource.volume ? this.audioSource.volume / this.soundVolume : this.soundVolume);\r\n            this.setMusicVolume(this.MusicVolum)\r\n        } else {\r\n            console.info(\"audioNotFound \", name);\r\n        }\r\n        // this.bundle.load(\"audio/\" + name, AudioClip, (err, clip)=> {\r\n        //     if (err) {\r\n        //         console.warn('load audioClip failed: ', err);\r\n        //         return;\r\n        //     }\r\n        //     if(!this.audioSource || !this.audioSource.isValid) return;\r\n        //     console.info(\"playSound \", name);\r\n        //     this.setMusicVolume(this.soundVolume)\r\n        //     this.audioSource.playOneShot(clip, this.audioSource.volume ? this.audioSource.volume / this.soundVolume : this.soundVolume);\r\n        //     this.setMusicVolume(this.MusicVolum)\r\n        // });\r\n    }\r\n\r\n    private setMusicVolume(flag: number) {\r\n        assert(this.audioSource, 'AudioManager not inited!');\r\n        flag = clamp01(flag);\r\n        this.audioSource.volume = flag;\r\n    }\r\n\r\n    private setSoundVolume(flag: number) {\r\n        this.soundVolume = flag;\r\n    }\r\n\r\n    public openMusic() {\r\n        this.setMusicVolume(0.5);\r\n    }\r\n\r\n    public closeMusic(cb) {\r\n        this.setMusicVolume(0);\r\n        this.audioSource.destroy()\r\n        cb()\r\n    }\r\n\r\n    public openSound() {\r\n        this.setSoundVolume(1);\r\n    }\r\n\r\n    public closeSound() {\r\n        this.setSoundVolume(0);\r\n    }\r\n}\r\n"]}