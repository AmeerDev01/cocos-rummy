{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/domino/viewModel/CardViewModel.ts"],"names":["ViewModel","StoreInject","getStore","CardPosition","genCardItem","getComposeCardValue","config","showOutCard","roomChooseViewModel","CardViewModel","constructor","onComplateCallback","siblingIndex","symbol","setSiblingIndex","setComplateCallback","setInitHide","value","comp","appendTo","parentNode","option","_option","Object","assign","effectType","effectDone","isModal","effectOption","addChild","viewNode","done","window","setTimeout","begin","setEvent","onOutCard","azimuth","cardItem","seatIndex","isTest","dispatch","mainBoardViewModel","sendOutCard","onDestroy","unMount","unMountCallBack","undefined","getWidth","isHorizontal","getInitHeight","getInitWidth","props","scale","getOriginalWidth","getScaleWidth","getOriginalHeight","getScaleHeight","position","HORIZONTAL","isVertical","getCellCount","getValue","isChecked","isBright","setOpacity","setBright","newCardItem","upFace","downFace","compose","composeValue","console","log","setProps","connect","inject","state","deskStatus","deskData","statue"],"mappings":"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","sourcesContent":["import { Node, UITransform, Vec3 } from \"cc\"\r\nimport { Domino_Card, IProps, IEvent } from \"../components/Domino_Card\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { getStore } from \"../store\"\r\nimport { EffectType, EnterOption } from \"../../../utils/NodeIOEffect\"\r\nimport { CardItem, CardPosition, genCardItem, getComposeCardValue } from \"../type\"\r\nimport config from \"../config\"\r\nimport { showOutCard } from \"../store/action/game\"\r\nimport { roomChooseViewModel } from \"../index\"\r\n\r\n@StoreInject(getStore())\r\nclass CardViewModel extends ViewModel<Domino_Card, IProps, IEvent> {\r\n  private onComplateCallback;\r\n  constructor() {\r\n    super('Domino_Card')\r\n  }\r\n\r\n  private siblingIndex = -1;\r\n  /**符号，-1表示右边，1表示左边  */\r\n  public symbol: -1 | 1;\r\n\r\n  public setSiblingIndex(siblingIndex: number) {\r\n    this.siblingIndex = siblingIndex;\r\n    return this;\r\n  }\r\n\r\n  public setComplateCallback(onComplateCallback) {\r\n    this.onComplateCallback = onComplateCallback;\r\n    return this;\r\n  }\r\n\r\n  public setInitHide(value: boolean) {\r\n    this.comp.setInitHide(value);\r\n    return this;\r\n  }\r\n\r\n  /**挂载到视图 */\r\n  public appendTo(parentNode: Node, option?: {\r\n    /**添加到节点的动效 */\r\n    effectType?: EffectType,\r\n    /**添加完成之后的回调 */\r\n    effectDone?: () => void,\r\n    /**是否以模态框的形式添加，既后面加一层模态框 */\r\n    isModal?: boolean,\r\n    effectOption?: EnterOption\r\n\r\n  }) {\r\n    const _option = Object.assign({\r\n      effectType: null,\r\n      effectDone: null,\r\n      isModal: false,\r\n      effectOption: {}\r\n    }, option || {})\r\n    this.parentNode = parentNode\r\n    // parentNode.insertChild(this.viewNode, this.siblingIndex)\r\n    parentNode.addChild(this.viewNode)\r\n    this.siblingIndex >= 0 && this.viewNode.setSiblingIndex(this.siblingIndex)\r\n    const done = () => window.setTimeout(() => {\r\n      this.begin()\r\n    }, 10)\r\n    done()\r\n    return this\r\n  }\r\n\r\n  protected begin() {\r\n    this.onComplateCallback && this.onComplateCallback()\r\n\r\n    this.setEvent({\r\n      onOutCard: (value: number, azimuth: 0 | 1) => {\r\n        const cardItem = genCardItem(value);\r\n        cardItem.azimuth = azimuth;\r\n        cardItem.seatIndex = 0;\r\n        if (config.isTest) {\r\n          this.dispatch(showOutCard(cardItem));\r\n        } else {\r\n          roomChooseViewModel.mainBoardViewModel.sendOutCard(cardItem);\r\n        }\r\n      },\r\n      onDestroy: () => {\r\n        this.unMount();\r\n      }\r\n    })\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.onComplateCallback = undefined;\r\n    this.siblingIndex = -1;\r\n  }\r\n\r\n  public getWidth() {\r\n    const value = this.isHorizontal() ? this.comp.getInitHeight() : this.comp.getInitWidth() - 10;\r\n    return this.comp.props.scale * value;\r\n  }\r\n\r\n  public getOriginalWidth() {\r\n    return this.comp.getScaleWidth();\r\n  }\r\n\r\n  public getOriginalHeight() {\r\n    return this.comp.getScaleHeight();\r\n  }\r\n\r\n  public isHorizontal() {\r\n    return this.comp.props.position === CardPosition.HORIZONTAL;\r\n  }\r\n  public isVertical() {\r\n    return !this.isHorizontal();\r\n  }\r\n\r\n  /**获得占用各自个数 */\r\n  public getCellCount() {\r\n    return this.isHorizontal() ? 2 : 1;\r\n  }\r\n\r\n  public getValue() {\r\n    if (!this.comp || !this.comp.props) {\r\n      return -1;\r\n    }\r\n    return this.comp.props.value;\r\n  }\r\n\r\n  public isChecked() {\r\n    return this.comp.props.isChecked;\r\n  }\r\n\r\n  public isBright() {\r\n    return this.comp.props.isBright;\r\n  }\r\n\r\n  public setOpacity(value: boolean) {\r\n    this.comp.setOpacity(value);\r\n  }\r\n\r\n  /**\r\n   * 设置高亮\r\n   * @param newCardItem 最新出的牌，如果为空，设置为灰\r\n   */\r\n  public setBright(newCardItem: CardItem, azimuth: 0 | 1 | 2) {\r\n    if (newCardItem) {\r\n      if (newCardItem.azimuth === 2) {\r\n        if (newCardItem.upFace === newCardItem.downFace) {\r\n          this.compose(newCardItem.upFace)\r\n          this.compose(newCardItem.downFace)\r\n        } else if (azimuth === 0) {\r\n          this.compose(newCardItem.upFace)\r\n        } else if (azimuth === 1) {\r\n          this.compose(newCardItem.downFace)\r\n        }\r\n      } else {\r\n        const composeValue = getComposeCardValue(newCardItem)\r\n        console.log(`方位: ${azimuth}, 牌方位: ${newCardItem.azimuth}, 比较牌值: ${newCardItem.upFace}-${newCardItem.downFace}, 比较值: ${composeValue}, 牌值： ${this.comp.props.upFace}-${this.comp.props.downFace}`);\r\n        this.compose(composeValue)\r\n      }\r\n    } else {\r\n      this.comp.setProps({ isBright: false });\r\n    }\r\n  }\r\n\r\n  private compose(composeValue: number) {\r\n    if (composeValue === this.comp.props.upFace || composeValue === this.comp.props.downFace) {\r\n      this.comp.setProps({ isBright: true });\r\n      console.log(`比较牌 : ${composeValue} ${this.comp.props.upFace},  显示的牌: ${this.comp.props.upFace}-${this.comp.props.downFace} `);\r\n    }\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        deskStatus: state.deskData.statue,\r\n        newCardItem: state.deskData.newCardItem,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default CardViewModel"]}