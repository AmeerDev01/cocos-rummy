{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/components/Bandar_online.ts"],"names":["_decorator","Label","Node","sp","BaseComponent","ccclass","property","Bandar_online","propertyNode","props_btn_users","props_label_users_num","props_skeleton_win","props","onlineNum","allWinUsers","events","start","initState","bindEvent","useProps","key","value","string","cur","playWinAni","active","getComponent","Skeleton","animation","toggleCallback","event","customEventData","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAWC,MAAAA,K,OAAAA,K;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,E,OAAAA,E;;AACvBC,MAAAA,a,iBAAAA,a;;;;;;;;;OAKH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;+BAmBjBO,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb;AAAA;AAAA,0CACyE;AAAA;AAAA;AAAA,eAK9DC,YAL8D,GAK/C;AACxB;AACAC,YAAAA,eAAe,EAAE,IAAIP,IAAJ,EAFO;;AAGxB;AACAQ,YAAAA,qBAAqB,EAAE,IAAIT,KAAJ,EAJC;;AAKxB;AACAU,YAAAA,kBAAkB,EAAC,IAAIT,IAAJ;AANK,WAL+C;AAAA,eAcjEU,KAdiE,GAcjD;AACtBC,YAAAA,SAAS,EAAC,IADY;AAEtBC,YAAAA,WAAW,EAAC;AAFU,WAdiD;AAAA,eAmBjEC,MAnBiE,GAmBhD,EAnBgD;AAAA;;AACxEC,QAAAA,KAAK,GAAG,CAEN;;AAoBQC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAG3B;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AAC7D,cAAGD,GAAG,KAAG,WAAT,EAAqB;AAC3B,iBAAKZ,YAAL,CAAkBE,qBAAlB,CAAwCY,MAAxC,GAAiDD,KAAK,CAACE,GAAN,GAAY,EAA7D;AACC;;AACD,cAAGH,GAAG,KAAG,aAAT,EAAuB,CACvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACF;AAGD;;;AACOI,QAAAA,UAAU,GAAE;AAClB;AAEA,eAAKhB,YAAL,CAAkBG,kBAAlB,CAAqCc,MAArC,GAA4C,IAA5C;AACA,eAAKjB,YAAL,CAAkBG,kBAAlB,CAAqCe,YAArC,CAAkDvB,EAAE,CAACwB,QAArD,EAA+DC,SAA/D,GAAyE,WAAzE;AACA;;AAEDC,QAAAA,cAAc,CAACC,KAAD,EAAeC,eAAf,EAAwC,CAErD;;AAESC,QAAAA,MAAM,GAAS;AACxB,eAAKxB,YAAL,CAAkBG,kBAAlB,CAAqCc,MAArC,GAA4C,KAA5C;AAEA;;AAEDQ,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA7EuE,O","sourcesContent":["import { _decorator,Label,Node, sp, Vec3 } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { getNodePositionInCanvas, initToggle } from '../../../utils/tool';\r\nimport { BetData, gameCacheData } from '../type';\r\nimport { WinUser } from '../store/actions/bet';\r\nimport { footerViewModel } from '../viewModel/BandarGameBoardViewModel';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\t /**在线人数 */\r\n\t onlineNum: number,\r\n\t allWinUsers:WinUser[],\r\n}\r\nexport interface IEvent {\r\n\t\r\n}\r\n\r\n\r\n@ccclass('Bandar_online')\r\nexport class Bandar_online extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\t\r\n\t }\r\n\r\n\tprotected propertyNode = {\r\n\t\t/** 在线人数图标 */\r\n\t\tprops_btn_users: new Node(),\r\n\t\t/** 在线人数 */\r\n\t\tprops_label_users_num: new Label(),\r\n\t\t/**赢 动画 */\r\n\t\tprops_skeleton_win:new Node(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tonlineNum:null,\r\n\t\tallWinUsers:null\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\t\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n         if(key===\"onlineNum\"){\r\n\t\t\tthis.propertyNode.props_label_users_num.string = value.cur + \"\"\r\n\t\t }\r\n\t\t if(key===\"allWinUsers\"){\r\n\t\t\t// console.log(value.cur);\r\n\t\t\t// if(!value.cur){\r\n\t\t\t// \treturn\r\n\t\t\t// }\r\n\t\t\t\r\n\t\t\t// value.cur.forEach((item)=>{\r\n\t\t\t// \tif(item.index>6 && item.memberId!==gameCacheData.memberId){\r\n\t\t\t// \t\tconsole.log(\"allwinitemindex\",item.index,item.memberId);\r\n\t\t\t// \t\tthis.playWinAni()\r\n\t\t\t// \t}else if(item.memberId===gameCacheData.memberId){\r\n\t\t\t// \t\tconsole.log(\"allwinitemindex\",item.index,item.memberId);\r\n\t\t\t// \t\tfooterViewModel.comp.palyAddUp(item)\r\n\t\t\t// \t}\r\n\t\t\t// })\r\n\t\t\t\r\n\t\t }\r\n\t}\r\n\r\n\r\n\t/** 播放其他玩家赢 动画 */\r\n\tpublic playWinAni(){\r\n\t\t// console.log(\"playWinAni\");\r\n\t\t\r\n\t\tthis.propertyNode.props_skeleton_win.active=true;\r\n\t\tthis.propertyNode.props_skeleton_win.getComponent(sp.Skeleton).animation=\"animation\";\r\n\t}\r\n\r\n\ttoggleCallback(event: Event, customEventData: string) {\r\n\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.propertyNode.props_skeleton_win.active=false;\r\n\t\t\t\t\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}