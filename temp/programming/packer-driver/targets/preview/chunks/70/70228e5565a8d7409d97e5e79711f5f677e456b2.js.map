{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragon/Slot/Mediator/BgMediator.ts"],"names":["BgMediator","Prefab","Node","Toggle","Sprite","CommandDefine","PrefabDefine","BaseMediator","SubGameType","AutoLaunchType","StopMode","dragon_DialogWin","BgCommandConst","getBgProxy","getSocketProxy","RollerMediatorConst","AudioManager","SoundList","DialogType","global","UseSetOption","addToastAction","sendNativeVibrate","BgMediatorConst","constructor","mediatorName","viewComponent","buttonThrottling","frequency","baseBetAmount","lineCount","sourceMap","key","path","SLOT_BG","sourceType","source","FLY_BG","DYNAMIC_NUMBER","DIALOG_WIN","RULE_PANEL","TOAST","listNotificationConst","name","INIT_MAIN_PANEL","handler","notification","init","pdd","Instance","option","gameSet","dragon","betTarget","positionId","initUserSwitch","sendNotification","BG","order","UPDATE_BET_AMOUNT","SETGREYOUT","state","getBody","comp","wrapView","getComponent","setGreyOut","CHANGE_BG","gameType","changeBg","INITSCORE","updateScore","getNextGame","START_FLY_BG","flyBgNode","getSource","addChild","setSiblingIndex","getInstance","playSound","spitOut","window","setTimeout","AUTO_LAUNCH","TOGGLETHESTARTBUTTON","removeChild","UPDATE_NUMBER","UPDATE_AUTO_LAUNCH","setActiveButton","getAutoLaunchType","UPDATE_GAME_STATUS","setDisable","getDisable","console","log","getLastGame","setDis_btn","homeButton","grayscale","UPDATE_BTN_LABEL","setBtnLabel","UPDATE_USER_GOLD","gold","getTransferGameInfo","getUserGold","setGold","checkAutoLaunch","str","isUNLIMT","getAutoLaunchNum","getTotal","setBtnState","SHOW_DIALOG_WIN","dialogType","amount","keepTime","done","dialog","type","getShiftAmount","jackpot","showDialog","NUMBEROFDISPLAYS","amounts","fab","getIsChangeGameRunning","length","getDackiconLenth","tatalNum","MAIN","SUB_GAME2","JACKPOTPOPUPS","getCurrentScore","SPECIALGAME","SUB_GAME1","YOUWON","JACKPOTS","OPEN_RULE_PANEL","rulePanel","InsufficientBalanceDisplay","bl","Balance_tips","updateBetAmount","INIT_JACKPOT","UPDATE_CURRENT_SCORE","currentScore","SHOW_TOAST","content","hallDispatch","String","listenerEvent","autoButtonWrap","autoLaunch","props_toggle_fast","propsToggleFast","isChecked","pressTime","timeLimit","timer","isLongPress","ruleButton","on","EventType","TOUCH_END","buttonClick","startButton","TOUCH_START","setInterval","clearInterval","presentGame","triggeAutoLaunch","fbp","DISABLE","setAutoLaunchType","sendLaunch","END_ROLL","scheduleOnce","closeMusic","closeSubGame","addBet","add_coin","calculateTheBalanceStatus","subtractBet","reduce_coin","maxBet","children","forEach","child","index","setStopMode","TOGGLE","toggle","QUEUE_STOP","NORMAL","gameRunner","_gameRunner","setBg"],"mappings":";;;gXAgEqBA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhEZC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;;AAEtBC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;;AACFC,MAAAA,Y;;AAIEC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,Q,iBAAAA,Q;;AAChBC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,U,iBAAAA,U;AAAYC,MAAAA,c,iBAAAA,c;;AAEZC,MAAAA,mB,kBAAAA,mB;;AACAC,MAAAA,Y,kBAAAA,Y;AAAcC,MAAAA,S,kBAAAA,S;;AACdC,MAAAA,U,kBAAAA,U;;AACAC,MAAAA,M,kBAAAA,M;;AACFC,MAAAA,Y;;AACEC,MAAAA,c,kBAAAA,c;;AACAC,MAAAA,iB,kBAAAA,iB;;;;;;;;;AACT;AACA;AACA;AACA;AACA;iCACYC,e,0BAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;AAAAA,QAAAA,e;eAAAA,e;;;yBAsCSvB,U,GAAN,MAAMA,UAAN;AAAA;AAAA,wCAAsC;AAK5CwB,QAAAA,WAAW,CAACC,YAAD,EAA8BC,aAA9B,EAAyD;AAAA,cAAxDD,YAAwD;AAAxDA,YAAAA,YAAwD,GAAjC,IAAiC;AAAA;;AAAA,cAA3BC,aAA2B;AAA3BA,YAAAA,aAA2B,GAAN,IAAM;AAAA;;AACzE,gBAAMD,YAAN,EAAoBC,aAApB;AADyE,eAJ3EC,gBAI2E,GAJxD,IAIwD;AAAA,eAH3EC,SAG2E,GAH/D,IAG+D;AAAA,eAF3EC,aAE2E,GAF3D,IAE2D;AAAA,eAD3EC,SAC2E,GAD/D,IAC+D;AAAA,eAGpEC,SAHoE,GAGpC,CACrC;AACEC,YAAAA,GAAG,EAAE,YADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaC,OAFrB;AAGEC,YAAAA,UAAU,EAAElC,MAHd;AAIEmC,YAAAA,MAAM,EAAE;AAJV,WADqC,EAOrC;AACEJ,YAAAA,GAAG,EAAE,OADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaI,MAFrB;AAGEF,YAAAA,UAAU,EAAElC,MAHd;AAIEmC,YAAAA,MAAM,EAAE;AAJV,WAPqC,EAarC;AACEJ,YAAAA,GAAG,EAAE,eADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaK,cAFrB;AAGEH,YAAAA,UAAU,EAAElC,MAHd;AAIEmC,YAAAA,MAAM,EAAE;AAJV,WAbqC,EAmBrC;AACEJ,YAAAA,GAAG,EAAE,WADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaM,UAFrB;AAGEJ,YAAAA,UAAU,EAAElC,MAHd;AAIEmC,YAAAA,MAAM,EAAE;AAJV,WAnBqC,EAyBrC;AACEJ,YAAAA,GAAG,EAAE,WADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaO,UAFrB;AAGEL,YAAAA,UAAU,EAAElC,MAHd;AAIEmC,YAAAA,MAAM,EAAE;AAJV,WAzBqC,EA+BrC;AACEJ,YAAAA,GAAG,EAAE,OADP;AAEEC,YAAAA,IAAI,EAAE;AAAA;AAAA,8CAAaQ,KAFrB;AAGEN,YAAAA,UAAU,EAAElC,MAHd;AAIEmC,YAAAA,MAAM,EAAE;AAJV,WA/BqC,CAHoC;AAAA,eA8JjEM,qBA9JiE,GA8JL,CACpE;AACEC,YAAAA,IAAI,EAAEpB,eAAe,CAACqB,eADxB;;AAEEC,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,mBAAKC,IAAL;AACA,kBAAIC,GAAG,GAAG;AAAA;AAAA,gDAAaC,QAAb,GAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,MAAvC,GAAgD;AAAA;AAAA,gDAAaH,QAAb,GAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,MAAvC,CAA8CC,SAA9C,CAAwDC,UAAxG,GAAqH,CAA/H;AACA;AAAA;AAAA,sDAAiBC,cAAjB,CAAgCP,GAAhC;AACA,mBAAKQ,gBAAL,CAAsB;AAAA;AAAA,kDAAcC,EAApC,EAAwC;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAxC,EAA2DnC,eAAe,CAACoC,iBAA3E;AACD;;AAPH,WADoE,EAUpE;AACEhB,YAAAA,IAAI,EAAEpB,eAAe,CAACqC,UADxB;;AAEEf,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEe,gBAAAA;AAAF,kBAAYf,YAAY,CAACgB,OAAb,EAAlB;AAAA,kBACEC,IAAI,GAAI,KAAKC,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CADV;;AAEA,kBAAIJ,KAAK,KAAK,CAAd,EAAiB;AACfE,gBAAAA,IAAI,CAACG,UAAL,CAAgB,OAAhB,EAAyBL,KAAK,IAAI,CAAlC;AACAE,gBAAAA,IAAI,CAACG,UAAL,CAAgB,OAAhB,EAAyBL,KAAK,IAAI,CAAlC;AACD,eAHD,MAGO;AACLE,gBAAAA,IAAI,CAACG,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACAH,gBAAAA,IAAI,CAACG,UAAL,CAAgB,OAAhB,EAAyB,KAAzB;AACD;AAEF;;AAbH,WAVoE,EAyBpE;AACEvB,YAAAA,IAAI,EAAEpB,eAAe,CAAC4C,SADxB;;AAEEtB,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEsB,gBAAAA;AAAF,kBAAetB,YAAY,CAACgB,OAAb,MAA0B,EAA/C;AACA,mBAAKO,QAAL,CAAcD,QAAd;AACD;;AALH,WAzBoE,EAgCpE;AACEzB,YAAAA,IAAI,EAAEpB,eAAe,CAAC+C,SADxB;;AAEEzB,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEe,gBAAAA;AAAF,kBAAYf,YAAY,CAACgB,OAAb,MAA0B,EAA5C;;AACA,kBAAID,KAAJ,EAAW;AACR,qBAAKG,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+DM,WAA/D,CAA2E,CAA3E;AACD;;AACD,kBAAI;AAAA;AAAA,8CAAaC,WAAb,MAA8B,CAAlC,EAAqC;AAClC,qBAAKR,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+DM,WAA/D,CAA2E,CAA3E;AACD;AACF;;AAVH,WAhCoE,EA4CpE;AACE5B,YAAAA,IAAI,EAAEpB,eAAe,CAACkD,YADxB;;AAEE5B,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM4B,SAAS,GAAG,KAAKC,SAAL,CAAe;AAAA;AAAA,gDAAatC,MAA5B,CAAlB;AACA,mBAAKX,aAAL,CAAmBkD,QAAnB,CAA4BF,SAA5B;AACAA,cAAAA,SAAS,CAACG,eAAV,CAA0B,IAA1B;AACA;AAAA;AAAA,gDAAaC,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,0CAAUC,OAA/C;AACAC,cAAAA,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtB,qBAAK1B,gBAAL,CAAsB;AAAA;AAAA,oDAAcC,EAApC,EAAwC,EAAxC,EAA4C;AAAA;AAAA,sDAAe0B,WAA3D;AACA,qBAAK3B,gBAAL,CAAsBjC,eAAe,CAAC6D,oBAAtC,EAA4D;AAAEvB,kBAAAA,KAAK,EAAE;AAAT,iBAA5D;AACA,qBAAKnC,aAAL,CAAmB2D,WAAnB,CAA+BX,SAA/B;AACD,eAJD,EAIG,IAJH;AAKD;;AAZH,WA5CoE,EA0DpE;AACE/B,YAAAA,IAAI,EAAEpB,eAAe,CAAC+D,aADxB;;AAEEzC,YAAAA,OAAO,CAACC,YAAD,EAA8B,CACnC;AACA;AACA;AACD;;AANH,WA1DoE,EAkEpE;AACEH,YAAAA,IAAI,EAAEpB,eAAe,CAACgE,kBADxB;;AAEE1C,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnB,mBAAKkB,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAhB,CAA6DuB,eAA7D,CAA6E;AAAA;AAAA,8CAAaC,iBAAb,EAA7E;AACD;;AAJH,WAlEoE,EAwEpE;AACE9C,YAAAA,IAAI,EAAEpB,eAAe,CAACmE,kBADxB;;AAEE7C,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAMiB,IAAI,GAAmB,KAAKC,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAA7B;AACAF,cAAAA,IAAI,CAAC4B,UAAL,CAAgB;AAAA;AAAA,8CAAaC,UAAb,EAAhB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAA;AAAA,8CAAaC,WAAb,EAAZ,EAAuC;AAAA;AAAA,8CAAavB,WAAb,EAAvC;;AACA,kBAAI;AAAA;AAAA,8CAAaA,WAAb,MAA8B,CAAlC,EAAqC;AACnCT,gBAAAA,IAAI,CAACiC,UAAL,CAAgB,IAAhB;AACD,eAFD,MAEO;AACLjC,gBAAAA,IAAI,CAACiC,UAAL,CAAgB;AAAA;AAAA,gDAAaJ,UAAb,EAAhB;AACD;;AACD7B,cAAAA,IAAI,CAACkC,UAAL,CAAgBhC,YAAhB,CAA6B7D,MAA7B,EAAqC8F,SAArC,GAAiD;AAAA;AAAA,8CAAaN,UAAb,EAAjD;AACD;;AAZH,WAxEoE,EAqFjE;AACDjD,YAAAA,IAAI,EAAEpB,eAAe,CAAC4E,gBADrB;;AAEDtD,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAI;AAAElB,gBAAAA;AAAF,kBAAgBkB,YAAY,CAACgB,OAAb,EAApB;AACA,mBAAKlC,SAAL,GAAiBA,SAAS,IAAI,KAAKA,SAAL,GAAiB,CAA/C;AACA,kBAAMmC,IAAI,GAAmB,KAAKC,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAA7B;AACAF,cAAAA,IAAI,CAACqC,WAAL,CAAiB,KAAKxE,SAAtB;AACD;;AAPA,WArFiE,EA6FjE;AACDe,YAAAA,IAAI,EAAEpB,eAAe,CAAC8E,gBADrB;;AAEDxD,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAI;AAAEe,gBAAAA;AAAF,kBAAYf,YAAY,CAACgB,OAAb,EAAhB;AACA,kBAAIwC,IAAI,GAAG;AAAA;AAAA,sDAAiBC,mBAAjB,GAAuCC,WAAvC,CAAmD3C,KAAnD,CAAX;AACA,kBAAME,IAAI,GAAmB,KAAKC,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAA7B;AACAF,cAAAA,IAAI,CAAC0C,OAAL,CAAaH,IAAb;AACD;;AAPA,WA7FiE,EAsGpE;AACE3D,YAAAA,IAAI,EAAEpB,eAAe,CAAC6D,oBADxB;;AAEEvC,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEe,gBAAAA;AAAF,kBAAYf,YAAY,CAACgB,OAAb,EAAlB;;AACA,kBAAI;AAAA;AAAA,8CAAaU,WAAb,MAA8B,CAAlC,EAAqC;AACnC,oBAAI;AAAA;AAAA,gDAAakC,eAAb,EAAJ,EAAoC;AAAE;AACpC,sBAAIC,GAAG,GAAI;AAAA;AAAA,kDAAaC,QAAb,EAAD,GAA4B,GAA5B,GAAkC;AAAA;AAAA,kDAAaC,gBAAb,KAAkC,GAAlC,GAAwC;AAAA;AAAA,kDAAaC,QAAb,EAApF;AACC,uBAAK9C,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+D8C,WAA/D,CAA2ElD,KAA3E,EAAkF,CAAlF,EAAqF8C,GAArF;AACD,iBAHD,MAGO;AACJ,uBAAK3C,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+D8C,WAA/D,CAA2ElD,KAA3E;AACD;AACF,eAPD,MAOO;AAAE;AACN,qBAAKG,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+D8C,WAA/D,CAA2ElD,KAA3E,EAAkF,CAAlF;AACD;AACF;;AAdH,WAtGoE,EAsHpE;AACElB,YAAAA,IAAI,EAAEpB,eAAe,CAACyF,eADxB;;AAEEnE,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEmE,gBAAAA,UAAF;AAAcC,gBAAAA,MAAd;AAAsBC,gBAAAA,QAAtB;AAAgCC,gBAAAA;AAAhC,kBAAyCtE,YAAY,CAACgB,OAAb,EAA/C;AACA,kBAAMuD,MAAM,GAAG,KAAK1C,SAAL,CAAe;AAAA;AAAA,gDAAapC,UAA5B,CAAf;AACA,mBAAKb,aAAL,CAAmBkD,QAAnB,CAA4ByC,MAA5B;AACA,kBAAIC,IAAI,GAAGL,UAAX;;AACA,kBAAIA,UAAU,KAAK,SAAf,IAA4B;AAAA;AAAA,sDAAiBM,cAAjB,CAAgC,MAAhC,EAAwCC,OAAxC,IAAmD,CAAnF,EAAsF;AACpFF,gBAAAA,IAAI,GAAG,UAAP;AACD;;AACD;AAAA;AAAA,0DAAkB,GAAlB;AACCD,cAAAA,MAAM,CAACpD,YAAP;AAAA;AAAA,uDAAD,CAA4DwD,UAA5D,CAAuER,UAAvE,EAAmFC,MAAnF,EAA2FC,QAAQ,IAAI,IAAvG,EAA6G,MAAM;AAAEC,gBAAAA,IAAI;AAAI,eAA7H;AACD;;AAZH,WAtHoE,EAoIpE;AACEzE,YAAAA,IAAI,EAAEpB,eAAe,CAACmG,gBADxB;;AACyC;AACvC7E,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEoE,gBAAAA,MAAF;AAAUC,gBAAAA,QAAV;AAAoBC,gBAAAA,IAApB;AAA0BE,gBAAAA;AAA1B,kBAAmCxE,YAAY,CAACgB,OAAb,EAAzC,CADmC,CAC8B;;AACjE,kBAAI6D,OAAO,GAAGT,MAAd;AACA,kBAAID,UAAsB,GAAG,IAA7B;AACA,kBAAMW,GAAG,GAAG;AAAA;AAAA,6CAAZ;;AACA,kBAAIA,GAAG,CAACC,sBAAJ,OAAiC,CAAC,CAAtC,EAAyC;AACvC,oBAAIC,MAAM,GAAG;AAAA;AAAA,wDAAiBvB,mBAAjB,GAAuCwB,gBAAvC,EAAb;AACA,oBAAIC,QAAQ,GAAG,CAAf;;AACA,oBAAIJ,GAAG,CAACpD,WAAJ,OAAsB;AAAA;AAAA,gDAAYyD,IAAtC,EAA4C;AAC1C,sBAAIL,GAAG,CAAC7B,WAAJ,OAAsB;AAAA;AAAA,kDAAYmC,SAAlC,IAA+CZ,IAAI,IAAI,CAA3D,EAA8D;AAC5D,wBAAIQ,MAAM,GAAG,CAAb,EAAgB;AACdV,sBAAAA,IAAI;AACJ;AACD;;AACDH,oBAAAA,UAAU,GAAG;AAAA;AAAA,kDAAWkB,aAAxB;AACAH,oBAAAA,QAAQ,GAAG;AAAA;AAAA,4DAAiBzB,mBAAjB,GAAuC6B,eAAvC,CAAuD,MAAvD,CAAX;AACD,mBAPD,MAOO,IAAId,IAAI,IAAI,CAAZ,EAAe;AACpBL,oBAAAA,UAAU,GAAG;AAAA;AAAA,kDAAWoB,WAAxB;AACAV,oBAAAA,OAAO,GAAG;AAAA;AAAA,4DAAiBpB,mBAAjB,GAAuC6B,eAAvC,CAAuD,MAAvD,CAAV;AACD,mBAHM,MAGA;AACLhB,oBAAAA,IAAI;AACJ;AACD;AACF,iBAfD,MAeO,IAAIQ,GAAG,CAACpD,WAAJ,OAAsB;AAAA;AAAA,gDAAY8D,SAAlC,IAA+ChB,IAAI,IAAI,CAA3D,EAA8D;AACnEL,kBAAAA,UAAU,GAAG;AAAA;AAAA,gDAAWsB,MAAxB;AACD,iBAFM,MAGF,IAAIX,GAAG,CAACpD,WAAJ,OAAsB;AAAA;AAAA,gDAAY0D,SAAlC,IAA+CZ,IAAI,IAAI,CAA3D,EAA8D;AACjEL,kBAAAA,UAAU,GAAG;AAAA;AAAA,gDAAWuB,QAAxB;AACD,iBAFI,MAEE;AACLpB,kBAAAA,IAAI;AACJ;AACD;;AACD,oBAAMC,MAAM,GAAG,KAAK1C,SAAL,CAAe;AAAA;AAAA,kDAAapC,UAA5B,CAAf;AACA,qBAAKb,aAAL,CAAmBkD,QAAnB,CAA4ByC,MAA5B;AACCA,gBAAAA,MAAM,CAACpD,YAAP;AAAA;AAAA,yDAAD,CAA4DwD,UAA5D,CAAuER,UAAvE,EAAmFU,OAAnF,EAA4FR,QAAQ,IAAI,IAAxG,EAA8G,MAAM;AAAEC,kBAAAA,IAAI;AAAI,iBAA9H,EAAgIU,MAAhI,EAAwIE,QAAxI;AACD,eA9BD,MA8BO;AACLZ,gBAAAA,IAAI;AACL;AACF;;AAxCH,WApIoE,EA8KpE;AACEzE,YAAAA,IAAI,EAAEpB,eAAe,CAACkH,eADxB;;AAEE5F,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM4F,SAAS,GAAG,KAAK/D,SAAL,CAAe;AAAA;AAAA,gDAAanC,UAA5B,CAAlB;AACA,mBAAKd,aAAL,CAAmBkD,QAAnB,CAA4B8D,SAA5B;AACD;;AALH,WA9KoE,EAqLpE;AACE/F,YAAAA,IAAI,EAAEpB,eAAe,CAACoH,0BADxB;;AAEE9F,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAE8F,gBAAAA;AAAF,kBAAS9F,YAAY,CAACgB,OAAb,EAAf;AACC,mBAAKE,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+D4E,YAA/D,CAA4ED,EAA5E;AACD;;AALH,WArLoE,EA4LpE;AACEjG,YAAAA,IAAI,EAAEpB,eAAe,CAACoC,iBADxB;;AAEEd,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEjB,gBAAAA,aAAF;AAAiBC,gBAAAA;AAAjB,kBAA+BgB,YAAY,CAACgB,OAAb,EAArC;AACA,mBAAKjC,aAAL,GAAqBA,aAArB;AACC,mBAAKmC,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+D6E,eAA/D,CAA+EjH,aAA/E,EAA8FC,SAA9F;AACAmD,cAAAA,MAAM,CAACC,UAAP,CAAkB,MAAI;AACpB,qBAAK1B,gBAAL,CAAsB;AAAA;AAAA,gEAAoBuF,YAA1C,EAAwDjG,YAAY,CAACgB,OAAb,EAAxD;AACD,eAFD,EAEE,GAFF;AAGD;;AATH,WA5LoE,EAuMpE;AACEnB,YAAAA,IAAI,EAAEpB,eAAe,CAACyH,oBADxB;;AAEEnG,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEY,gBAAAA;AAAF,kBAAYZ,YAAY,CAACgB,OAAb,MAA0B,EAA5C;AACA,kBAAMmF,YAAY,GAAG;AAAA;AAAA,sDAAiB1C,mBAAjB,GAAuC6B,eAAvC,CAAuD1E,KAAK,IAAI,MAAhE,CAArB;AACC,mBAAKM,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+DM,WAA/D,CAA2E0E,YAA3E;AACD;;AANH,WAvMoE,EA+MpE;AACEtG,YAAAA,IAAI,EAAEpB,eAAe,CAAC2H,UADxB;;AAEErG,YAAAA,OAAO,CAACC,YAAD,EAA8B;AACnC,kBAAM;AAAEqG,gBAAAA;AAAF,kBAAcrG,YAAY,CAACgB,OAAb,MAA0B,EAA9C;AACA;AAAA;AAAA,oCAAOsF,YAAP,CAAoB;AAAA;AAAA,oDAAe;AAAED,gBAAAA,OAAO,EAAEE,MAAM,CAACF,OAAD;AAAjB,eAAf,CAApB,EAFmC,CAGnC;AACA;AACA;AACD;;AARH,WA/MoE,CA9JK;AAE1E;;AAwCSG,QAAAA,aAAa,GAAG;AACxB,cAAMvF,IAAI,GAAmB,KAAKC,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAA7B;AACA,cAAMsF,cAAc,GAAmB,KAAKvF,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAhB,CAA6DuF,UAApF;AACA,cAAMC,iBAAiB,GAAmB,KAAKzF,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAhB,CAA6DyF,eAAvF;AACAD,UAAAA,iBAAiB,CAACxF,YAAlB,CAA+B9D,MAA/B,EAAuCwJ,SAAvC,GAAmD,KAAnD;AACA,cAAIC,SAAS,GAAG,CAAhB;AACA,cAAMC,SAAS,GAAG,GAAlB,CANwB,CAMF;;AACtB,cAAIC,KAAK,GAAG,CAAZ;AACA,cAAIC,WAAW,GAAG,KAAlB;AACAhG,UAAAA,IAAI,CAACiG,UAAL,CAAgBC,EAAhB,CAAmB/J,IAAI,CAACgK,SAAL,CAAeC,SAAlC,EAA6C,MAAM;AACjD;AAAA;AAAA,8CAAarF,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,wCAAUqF,WAA/C;AACA,iBAAK5G,gBAAL,CAAsBjC,eAAe,CAACkH,eAAtC;AACD,WAHD;AAIA1E,UAAAA,IAAI,CAACsG,WAAL,CAAiBJ,EAAjB,CAAoB/J,IAAI,CAACgK,SAAL,CAAeI,WAAnC,EAAgD,MAAM;AACpDR,YAAAA,KAAK,GAAG7E,MAAM,CAACsF,WAAP,CAAmB,MAAM;AAC/BX,cAAAA,SAAS,IAAI,EAAb;;AACA,kBAAIA,SAAS,GAAGC,SAAhB,EAA2B;AACzB5E,gBAAAA,MAAM,CAACuF,aAAP,CAAqBV,KAArB;AACA,oBAAMW,WAAW,GAAG;AAAA;AAAA,gDAAajG,WAAb,EAApB;;AACA,oBAAIiG,WAAW,KAAK;AAAA;AAAA,gDAAYxC,IAAhC,EAAsC;AACpB,uBAAKjE,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAhB,CAA6DyG,gBAA7D;AACAX,kBAAAA,WAAW,GAAG,IAAd;AACD,iBAHD,MAGO;AACLA,kBAAAA,WAAW,GAAG,KAAd;AACD;AACF;AACF,aAZO,EAYL,EAZK,CAAR;AAaA;AAAA;AAAA,8CAAajF,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,wCAAUqF,WAA/C;AACA,iBAAK5G,gBAAL,CAAsBjC,eAAe,CAAC+C,SAAtC;AACD,WAhBD;AAiBAP,UAAAA,IAAI,CAACsG,WAAL,CAAiBJ,EAAjB,CAAoB/J,IAAI,CAACgK,SAAL,CAAeC,SAAnC,EAA8C,MAAM;AAClDlF,YAAAA,MAAM,CAACuF,aAAP,CAAqBV,KAArB;;AACA,gBAAIC,WAAJ,EAAiB;AACfH,cAAAA,SAAS,GAAG,CAAZ;AACAG,cAAAA,WAAW,GAAG,KAAd;AACA;AACD;;AACD,gBAAMY,GAAG,GAAG;AAAA;AAAA,2CAAZ;;AACA,gBAAIA,GAAG,CAAClF,iBAAJ,OAA4B;AAAA;AAAA,kDAAemF,OAA/C,EAAwD;AACtDD,cAAAA,GAAG,CAACE,iBAAJ,CAAsB;AAAA;AAAA,oDAAeD,OAArC;AACD;;AACe,iBAAK5G,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAhB,CAA6DyG,gBAA7D,CAA8E,KAA9E,EAXkD,CAYlD;;AACA,gBAAI,CAACC,GAAG,CAAC/E,UAAJ,EAAL,EAAuB;AACrB,kBAAI,KAAKjE,gBAAT,EAA2B;AAAE;AAC3B,qBAAKA,gBAAL,GAAwB,KAAxB;AACAuD,gBAAAA,UAAU,CAAC,MAAM;AACf,uBAAKvD,gBAAL,GAAwB,IAAxB;AACD,iBAFS,EAEP,IAFO,CAAV;AAGA;AAAA;AAAA,wDAAiBmJ,UAAjB;AACD;AACF,aARD,MAQO,IAAI,CAACH,GAAG,CAACjE,eAAJ,EAAL,EAA4B;AACjC,mBAAKlD,gBAAL,CAAsB;AAAA;AAAA,8DAAoBuH,QAA1C;AACD;;AACDnB,YAAAA,SAAS,GAAG,CAAZ;AACD,WAzBD,EA9BwB,CAwDxB;;AACA7F,UAAAA,IAAI,CAACkC,UAAL,CAAgBgE,EAAhB,CAAmB/J,IAAI,CAACgK,SAAL,CAAeC,SAAlC,EAA6C,MAAM;AACjD;AAAA;AAAA,8CAAarF,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,wCAAUqF,WAA/C;AACA,gBAAMO,GAAG,GAAG;AAAA;AAAA,2CAAZ;;AACA,gBAAIA,GAAG,CAAC/E,UAAJ,EAAJ,EAAsB;AACpB;AACD,aAFD,MAEK;AACH7B,cAAAA,IAAI,CAACiH,YAAL,CAAkB,MAAI;AACpB;AAAA;AAAA,kDAAalG,WAAb,GAA2BmG,UAA3B,CAAsC,MAAM;AAC1C;AAAA;AAAA,wCAAOC,YAAP;AACD,iBAFD;AAGD,eAJD,EAIE,CAJF;AAKD;AACF,WAZD;AAaAnH,UAAAA,IAAI,CAACoH,MAAL,CAAYlB,EAAZ,CAAe/J,IAAI,CAACgK,SAAL,CAAeC,SAA9B,EAAyC,MAAM;AAC7C,gBAAMQ,GAAG,GAAG;AAAA;AAAA,2CAAZ;;AACA,gBAAIA,GAAG,CAAC/E,UAAJ,MAAoB+E,GAAG,CAAC5E,WAAJ,MAAqB,CAA7C,EAAgD;AAC9C;AACD;;AACD;AAAA;AAAA,8CAAajB,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,wCAAUqG,QAA/C;AACA,iBAAK5H,gBAAL,CAAsB;AAAA;AAAA,gDAAcC,EAApC,EAAwC;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAxC,EAA0DnC,eAAe,CAACoC,iBAA1E;AACA;AAAA;AAAA,oDAAiB0H,yBAAjB;AACD,WARD;AASAtH,UAAAA,IAAI,CAACuH,WAAL,CAAiBrB,EAAjB,CAAoB/J,IAAI,CAACgK,SAAL,CAAeC,SAAnC,EAA8C,MAAM;AAClD,gBAAMQ,GAAG,GAAG;AAAA;AAAA,2CAAZ;;AACA,gBAAIA,GAAG,CAAC/E,UAAJ,MAAoB+E,GAAG,CAAC5E,WAAJ,MAAqB,CAA7C,EAAgD;AAC9C;AACD;;AACD;AAAA;AAAA,8CAAajB,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,wCAAUwG,WAA/C;AACA,iBAAK/H,gBAAL,CAAsB;AAAA;AAAA,gDAAcC,EAApC,EAAwC;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAxC,EAA+DnC,eAAe,CAACoC,iBAA/E;AACA;AAAA;AAAA,oDAAiB0H,yBAAjB;AACD,WARD;AASAtH,UAAAA,IAAI,CAACyH,MAAL,CAAYvB,EAAZ,CAAe/J,IAAI,CAACgK,SAAL,CAAeC,SAA9B,EAAyC,MAAM;AAC7C,gBAAMQ,GAAG,GAAG;AAAA;AAAA,2CAAZ;;AACA,gBAAIA,GAAG,CAAC/E,UAAJ,MAAoB+E,GAAG,CAAC5E,WAAJ,MAAqB,CAA7C,EAAgD;AAC9C;AACD;;AACD;AAAA;AAAA,8CAAajB,WAAb,GAA2BC,SAA3B,CAAqC;AAAA;AAAA,wCAAUqG,QAA/C;AACA,iBAAK5H,gBAAL,CAAsB;AAAA;AAAA,gDAAcC,EAApC,EAAwC;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAxC,EAA0DnC,eAAe,CAACoC,iBAA1E;AACA;AAAA;AAAA,oDAAiB0H,yBAAjB;AACD,WARD;AASA9B,UAAAA,cAAc,CAACkC,QAAf,CAAwBC,OAAxB,CAAgC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChDD,YAAAA,KAAK,CAAC1B,EAAN,CAAS/J,IAAI,CAACgK,SAAL,CAAeC,SAAxB,EAAmC,MAAM;AACvC,kBAAMQ,GAAG,GAAG;AAAA;AAAA,6CAAZ,CADuC,CAEvC;;AACA,kBAAIA,GAAG,CAAClF,iBAAJ,OAA4B;AAAA;AAAA,oDAAemF,OAA/C,EAAwD;AACtDD,gBAAAA,GAAG,CAACE,iBAAJ,CAAsBe,KAAtB;AACA,qBAAKpI,gBAAL,CAAsB;AAAA;AAAA,oDAAcC,EAApC,EAAwC,EAAxC,EAA4C;AAAA;AAAA,sDAAe0B,WAA3D;AACD;AACF,aAPD;AAQD,WATD;AAUA,eAAK0G,WAAL,CAAiBpC,iBAAiB,CAACxF,YAAlB,CAA+B9D,MAA/B,CAAjB;AACAsJ,UAAAA,iBAAiB,CAACQ,EAAlB,CAAqB9J,MAAM,CAAC+J,SAAP,CAAiB4B,MAAtC,EAA+CC,MAAD,IAAoB;AAChE;AAAA;AAAA,4CAAaF,WAAb,CAAyBE,MAAM,CAACpC,SAAP,GAAmB;AAAA;AAAA,sCAASqC,UAA5B,GAAyC;AAAA;AAAA,sCAASC,MAA3E;AACD,WAFD;AAGD;;AACOJ,QAAAA,WAAW,CAACE,MAAD,EAAiB;AAClC;AAAA;AAAA,0CAAaF,WAAb,CAAyBE,MAAM,CAACpC,SAAP,GAAmB;AAAA;AAAA,oCAASqC,UAA5B,GAAyC;AAAA;AAAA,oCAASC,MAA3E;AACD;;AA4NO5H,QAAAA,QAAQ,CAAC6H,UAAD,EAA2B;AACzC,cAAMC,WAAwB,GAAGD,UAAU,IAAI;AAAA;AAAA,kDAAiB3F,mBAAjB,GAAuCnC,QAAvC,EAA/C;;AACC,eAAKJ,QAAL,CAAcC,YAAd,CAA2B,eAA3B,CAAD,CAA+DmI,KAA/D,CAAqED,WAAW,KAAK;AAAA;AAAA,0CAAYlE,IAA5B,GAAmC,MAAnC,GAA4C,MAAjH;AACD;;AAhYkD,O","sourcesContent":["import { Prefab, Node, Toggle, Sprite } from \"cc\";\r\nimport { INotification } from \"../../Framework/interfaces/INotification\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { PrefabDefine } from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\"\r\nimport { IlistTypeHander } from \"../types/IlistTypeHander\";\r\nimport { ISourceFile } from \"../types/ISourceFile\";\r\nimport { dragon_SlotBg } from \"../Component/dragon_SlotBg\";\r\nimport { SubGameType, SKT_MAG_TYPE, SocketProxy } from \"../Proxy/SocketProxy\";\r\nimport { AutoLaunchType, StopMode } from \"../Repositories/BgRepository\";\r\nimport { dragon_DialogWin } from \"../Component/dragon_DialogWin\";\r\nimport { BgCommandConst } from \"../Command/BgCommand\";\r\nimport { getBgProxy, getSocketProxy } from \"../utils\";\r\nimport { dragon_Toast } from \"../Component/dragon_Toast\";\r\nimport { RollerMediatorConst } from \"./RollerMediator\";\r\nimport { AudioManager, SoundList } from \"../Managr/AudioManager\";\r\nimport { DialogType } from \"../Component/dragon_DialogWin\";\r\nimport { global } from \"db://assets/script/hall\";\r\nimport UseSetOption from \"../../../../utils/UseSetOption\";\r\nimport { addToastAction } from \"../../../../hall/store/actions/baseBoard\";\r\nimport { sendNativeVibrate } from \"../../../../common/bridge\";\r\n// export interface IlistNotificationer {\r\n//  name: string\r\n//  isListen?: boolean\r\n//  handler(notification: INotification): void\r\n// }\r\nexport enum BgMediatorConst {\r\n  INIT_MAIN_PANEL = \"initMainPanel\",\r\n  /**开始飞水果 */\r\n  START_FLY_BG = \"startFlyBg\",\r\n  /**更新一些关于数字的界面（弃用） */\r\n  UPDATE_NUMBER = \"updateNumber\",\r\n  /**修改背景图片 */\r\n  CHANGE_BG = \"changeBG\",\r\n  /**更新自动启动按钮面板 */\r\n  UPDATE_AUTO_LAUNCH = \"updateAutoLaunch\",\r\n  /**更新游戏进行状态 */\r\n  UPDATE_GAME_STATUS = \"updateGameStatus\",\r\n  /**展示大奖弹窗 */\r\n  SHOW_DIALOG_WIN = \"showDialogWin\",\r\n  /**展示规则弹窗 */\r\n  OPEN_RULE_PANEL = \"openRulePanel\",\r\n  /**刷新下注信息 */\r\n  UPDATE_BET_AMOUNT = \"updateBetAmount\",\r\n  /**更新当前的奖励 */\r\n  UPDATE_CURRENT_SCORE = \"updateCurrentScore\",\r\n  /**展示toast */\r\n  SHOW_TOAST = \"showToast\",\r\n  /*更换按钮文字*/\r\n  UPDATE_BTN_LABEL = \"updateBtnLabel\",\r\n  /*更新玩家金币*/\r\n  UPDATE_USER_GOLD = \"updateUserGold\",\r\n  /*切换启动按钮状态*/\r\n  TOGGLETHESTARTBUTTON = 'togglethestartbutton',\r\n  /*初始化积分*/\r\n  INITSCORE = 'initScore',\r\n  /*其他动画*/\r\n  NUMBEROFDISPLAYS = 'numberOfDisplays',\r\n  /*余额不足*/\r\n  InsufficientBalanceDisplay = \"InsufficientBalanceDisplay\",\r\n  /*设置+-按钮置灰*/\r\n  SETGREYOUT = 'SETGREYOUT'\r\n}\r\n\r\nexport default class BgMediator extends BaseMediator {\r\n  buttonThrottling = true\r\n  frequency = null\r\n  baseBetAmount = null\r\n  lineCount = null\r\n  public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n    super(mediatorName, viewComponent)\r\n  }\r\n  public sourceMap: Array<ISourceFile> = [\r\n    {\r\n      key: 'fruitsSlot',\r\n      path: PrefabDefine.SLOT_BG,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'flyBg',\r\n      path: PrefabDefine.FLY_BG,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'dynamicNumber',\r\n      path: PrefabDefine.DYNAMIC_NUMBER,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'dialogWin',\r\n      path: PrefabDefine.DIALOG_WIN,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'rulePanel',\r\n      path: PrefabDefine.RULE_PANEL,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'toast',\r\n      path: PrefabDefine.TOAST,\r\n      sourceType: Prefab,\r\n      source: null\r\n    }\r\n  ]\r\n\r\n  protected listenerEvent() {\r\n    const comp = (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\"))\r\n    const autoButtonWrap = (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\")).autoLaunch\r\n    const props_toggle_fast = (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\")).propsToggleFast\r\n    props_toggle_fast.getComponent(Toggle).isChecked = false;\r\n    let pressTime = 0\r\n    const timeLimit = 500 //按压触发自动面板时间\r\n    let timer = 0\r\n    let isLongPress = false\r\n    comp.ruleButton.on(Node.EventType.TOUCH_END, () => {\r\n      AudioManager.getInstance().playSound(SoundList.buttonClick)\r\n      this.sendNotification(BgMediatorConst.OPEN_RULE_PANEL)\r\n    })\r\n    comp.startButton.on(Node.EventType.TOUCH_START, () => {\r\n      timer = window.setInterval(() => {\r\n        pressTime += 10\r\n        if (pressTime > timeLimit) {\r\n          window.clearInterval(timer)\r\n          const presentGame = getBgProxy().getNextGame()\r\n          if (presentGame === SubGameType.MAIN) {\r\n            (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\")).triggeAutoLaunch();\r\n            isLongPress = true\r\n          } else {\r\n            isLongPress = false\r\n          }\r\n        }\r\n      }, 10);\r\n      AudioManager.getInstance().playSound(SoundList.buttonClick);\r\n      this.sendNotification(BgMediatorConst.INITSCORE)\r\n    })\r\n    comp.startButton.on(Node.EventType.TOUCH_END, () => {\r\n      window.clearInterval(timer);\r\n      if (isLongPress) {\r\n        pressTime = 0\r\n        isLongPress = false\r\n        return\r\n      }\r\n      const fbp = getBgProxy()\r\n      if (fbp.getAutoLaunchType() !== AutoLaunchType.DISABLE) {\r\n        fbp.setAutoLaunchType(AutoLaunchType.DISABLE)\r\n      }\r\n      (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\")).triggeAutoLaunch(false);\r\n      // 禁用状态不能点击发送下注\r\n      if (!fbp.getDisable()) {\r\n        if (this.buttonThrottling) { // 按钮防抖节流\r\n          this.buttonThrottling = false\r\n          setTimeout(() => {\r\n            this.buttonThrottling = true\r\n          }, 1000)\r\n          getSocketProxy().sendLaunch();\r\n        }\r\n      } else if (!fbp.checkAutoLaunch()) {\r\n        this.sendNotification(RollerMediatorConst.END_ROLL)\r\n      }\r\n      pressTime = 0\r\n    })\r\n    // 点击首页按钮\r\n    comp.homeButton.on(Node.EventType.TOUCH_END, () => {\r\n      AudioManager.getInstance().playSound(SoundList.buttonClick);\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable()) {\r\n        return\r\n      }else{\r\n        comp.scheduleOnce(()=>{\r\n          AudioManager.getInstance().closeMusic(() => {\r\n            global.closeSubGame()\r\n          });\r\n        },1)\r\n      }\r\n    })\r\n    comp.addBet.on(Node.EventType.TOUCH_END, () => {\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n        return\r\n      }\r\n      AudioManager.getInstance().playSound(SoundList.add_coin)\r\n      this.sendNotification(CommandDefine.BG, { order: \"add\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      getSocketProxy().calculateTheBalanceStatus()\r\n    })\r\n    comp.subtractBet.on(Node.EventType.TOUCH_END, () => {\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n        return\r\n      }\r\n      AudioManager.getInstance().playSound(SoundList.reduce_coin)\r\n      this.sendNotification(CommandDefine.BG, { order: \"subtract\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      getSocketProxy().calculateTheBalanceStatus()\r\n    })\r\n    comp.maxBet.on(Node.EventType.TOUCH_END, () => {\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n        return\r\n      }\r\n      AudioManager.getInstance().playSound(SoundList.add_coin)\r\n      this.sendNotification(CommandDefine.BG, { order: \"max\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      getSocketProxy().calculateTheBalanceStatus()\r\n    })\r\n    autoButtonWrap.children.forEach((child, index) => {\r\n      child.on(Node.EventType.TOUCH_END, () => {\r\n        const fbp = getBgProxy()\r\n        // 必须处于未开启状态才能修改自动执行\r\n        if (fbp.getAutoLaunchType() === AutoLaunchType.DISABLE) {\r\n          fbp.setAutoLaunchType(index);\r\n          this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n        }\r\n      })\r\n    })\r\n    this.setStopMode(props_toggle_fast.getComponent(Toggle));\r\n    props_toggle_fast.on(Toggle.EventType.TOGGLE, (toggle: Toggle) => {\r\n      getBgProxy().setStopMode(toggle.isChecked ? StopMode.QUEUE_STOP : StopMode.NORMAL);\r\n    })\r\n  }\r\n  private setStopMode(toggle: Toggle) {\r\n    getBgProxy().setStopMode(toggle.isChecked ? StopMode.QUEUE_STOP : StopMode.NORMAL);\r\n  }\r\n\r\n  protected listNotificationConst: Array<IlistTypeHander<BgMediator>> = [\r\n    {\r\n      name: BgMediatorConst.INIT_MAIN_PANEL,\r\n      handler(notification: INotification) {\r\n        this.init()\r\n        let pdd = UseSetOption.Instance().option.gameSet.dragon ? UseSetOption.Instance().option.gameSet.dragon.betTarget.positionId : 1\r\n        getSocketProxy().initUserSwitch(pdd)\r\n        this.sendNotification(CommandDefine.BG, { order: \"curr\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.SETGREYOUT,\r\n      handler(notification: INotification) {\r\n        const { state } = notification.getBody(),\r\n          comp = (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg)\r\n        if (state !== 0) {\r\n          comp.setGreyOut('SZX_-', state == 1)\r\n          comp.setGreyOut('SZX_+', state == 2)\r\n        } else {\r\n          comp.setGreyOut('SZX_-', false)\r\n          comp.setGreyOut('SZX_+', false)\r\n        }\r\n\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.CHANGE_BG,\r\n      handler(notification: INotification) {\r\n        const { gameType } = notification.getBody() || {}\r\n        this.changeBg(gameType)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.INITSCORE,\r\n      handler(notification: INotification) {\r\n        const { state } = notification.getBody() || {}\r\n        if (state) {\r\n          (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).updateScore(0);\r\n        }\r\n        if (getBgProxy().getNextGame() == 0) {\r\n          (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).updateScore(0);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.START_FLY_BG,\r\n      handler(notification: INotification) {\r\n        const flyBgNode = this.getSource(PrefabDefine.FLY_BG)\r\n        this.viewComponent.addChild(flyBgNode)\r\n        flyBgNode.setSiblingIndex(1000)\r\n        AudioManager.getInstance().playSound(SoundList.spitOut);\r\n        window.setTimeout(() => {\r\n          this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n          this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true })\r\n          this.viewComponent.removeChild(flyBgNode)\r\n        }, 3000)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_NUMBER,\r\n      handler(notification: INotification) {\r\n        // const { betAmount, score } = notification.getBody();\r\n        // (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).updateBetAmount(betAmount);\r\n        // (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).updateScore(score);\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_AUTO_LAUNCH,\r\n      handler(notification: INotification) {\r\n        (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\")).setActiveButton(getBgProxy().getAutoLaunchType())\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_GAME_STATUS,\r\n      handler(notification: INotification) {\r\n        const comp = (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\"))\r\n        comp.setDisable(getBgProxy().getDisable())\r\n        console.log(getBgProxy().getLastGame(),getBgProxy().getNextGame());\r\n        if (getBgProxy().getNextGame() != 0) {\r\n          comp.setDis_btn(true)\r\n        } else {\r\n          comp.setDis_btn(getBgProxy().getDisable())\r\n        }\r\n        comp.homeButton.getComponent(Sprite).grayscale = getBgProxy().getDisable()\r\n      }\r\n    }, {\r\n      name: BgMediatorConst.UPDATE_BTN_LABEL,\r\n      handler(notification: INotification) {\r\n        let { frequency } = notification.getBody()\r\n        this.frequency = frequency || this.frequency - 1\r\n        const comp = (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\"))\r\n        comp.setBtnLabel(this.frequency)\r\n      }\r\n    }, {\r\n      name: BgMediatorConst.UPDATE_USER_GOLD,\r\n      handler(notification: INotification) {\r\n        let { state } = notification.getBody()\r\n        let gold = getSocketProxy().getTransferGameInfo().getUserGold(state)\r\n        const comp = (<dragon_SlotBg>this.wrapView.getComponent(\"dragon_SlotBg\"))\r\n        comp.setGold(gold)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.TOGGLETHESTARTBUTTON,\r\n      handler(notification: INotification) {\r\n        const { state } = notification.getBody();\r\n        if (getBgProxy().getNextGame() == 0) {\r\n          if (getBgProxy().checkAutoLaunch()) { // 是自动\r\n            let str = (getBgProxy().isUNLIMT()) ? \"∞\" : getBgProxy().getAutoLaunchNum() + \"/\" + getBgProxy().getTotal();\r\n            (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).setBtnState(state, 3, str);\r\n          } else {\r\n            (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).setBtnState(state);\r\n          }\r\n        } else { // 小游戏\r\n          (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).setBtnState(state, 1);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.SHOW_DIALOG_WIN,\r\n      handler(notification: INotification) {\r\n        const { dialogType, amount, keepTime, done } = notification.getBody();\r\n        const dialog = this.getSource(PrefabDefine.DIALOG_WIN);\r\n        this.viewComponent.addChild(dialog);\r\n        let type = dialogType\r\n        if (dialogType === 'jackpot' && getSocketProxy().getShiftAmount(\"curr\").jackpot == 0) {\r\n          type = 'superWin'\r\n        }\r\n        sendNativeVibrate(200);\r\n        (dialog.getComponent(dragon_DialogWin) as dragon_DialogWin).showDialog(dialogType, amount, keepTime || 2000, () => { done() });\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.NUMBEROFDISPLAYS,// 其他的动画\r\n      handler(notification: INotification) {\r\n        const { amount, keepTime, done, type } = notification.getBody(); //type 1普通 2 龙珠结束\r\n        let amounts = amount\r\n        let dialogType: DialogType = null;\r\n        const fab = getBgProxy()\r\n        if (fab.getIsChangeGameRunning() !== -1) {\r\n          let length = getSocketProxy().getTransferGameInfo().getDackiconLenth()\r\n          let tatalNum = 0\r\n          if (fab.getNextGame() === SubGameType.MAIN) {\r\n            if (fab.getLastGame() === SubGameType.SUB_GAME2 && type == 2) {\r\n              if (length < 5) {\r\n                done()\r\n                return\r\n              }\r\n              dialogType = DialogType.JACKPOTPOPUPS\r\n              tatalNum = getSocketProxy().getTransferGameInfo().getCurrentScore('curr')\r\n            } else if (type == 1) {\r\n              dialogType = DialogType.SPECIALGAME\r\n              amounts = getSocketProxy().getTransferGameInfo().getCurrentScore('auto')\r\n            } else {\r\n              done()\r\n              return\r\n            }\r\n          } else if (fab.getNextGame() === SubGameType.SUB_GAME1 && type == 1) {\r\n            dialogType = DialogType.YOUWON\r\n          }\r\n          else if (fab.getNextGame() === SubGameType.SUB_GAME2 && type == 1) {\r\n            dialogType = DialogType.JACKPOTS\r\n          } else {\r\n            done()\r\n            return\r\n          }\r\n          const dialog = this.getSource(PrefabDefine.DIALOG_WIN);\r\n          this.viewComponent.addChild(dialog);\r\n          (dialog.getComponent(dragon_DialogWin) as dragon_DialogWin).showDialog(dialogType, amounts, keepTime || 2000, () => { done() }, length, tatalNum);\r\n        } else {\r\n          done()\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.OPEN_RULE_PANEL,\r\n      handler(notification: INotification) {\r\n        const rulePanel = this.getSource(PrefabDefine.RULE_PANEL);\r\n        this.viewComponent.addChild(rulePanel)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.InsufficientBalanceDisplay,\r\n      handler(notification: INotification) {\r\n        const { bl } = notification.getBody();\r\n        (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).Balance_tips(bl)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_BET_AMOUNT,\r\n      handler(notification: INotification) {\r\n        const { baseBetAmount, lineCount } = notification.getBody();\r\n        this.baseBetAmount = baseBetAmount;\r\n        (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).updateBetAmount(baseBetAmount, lineCount);\r\n        window.setTimeout(()=>{\r\n          this.sendNotification(RollerMediatorConst.INIT_JACKPOT, notification.getBody());\r\n        },500)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_CURRENT_SCORE,\r\n      handler(notification: INotification) {\r\n        const { order } = notification.getBody() || {}\r\n        const currentScore = getSocketProxy().getTransferGameInfo().getCurrentScore(order || \"auto\");\r\n        (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).updateScore(currentScore)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.SHOW_TOAST,\r\n      handler(notification: INotification) {\r\n        const { content } = notification.getBody() || {};\r\n        global.hallDispatch(addToastAction({ content: String(content) }))\r\n        // const toastPanel = this.getSource(PrefabDefine.TOAST)\r\n        // this.viewComponent.addChild(toastPanel);\r\n        // (toastPanel.getComponent(\"dragon_Toast\") as dragon_Toast).showContent(content)\r\n      }\r\n    }\r\n  ]\r\n  private changeBg(gameRunner?: SubGameType) {\r\n    const _gameRunner: SubGameType = gameRunner || getSocketProxy().getTransferGameInfo().gameType();\r\n    (this.wrapView.getComponent(\"dragon_SlotBg\") as dragon_SlotBg).setBg(_gameRunner === SubGameType.MAIN ? \"bg_1\" : \"bg_2\");\r\n  }\r\n}\r\n"]}