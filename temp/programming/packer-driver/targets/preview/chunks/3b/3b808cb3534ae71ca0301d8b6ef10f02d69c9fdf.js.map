{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/viewModel/SubGameGateViewModel.ts"],"names":["SubGameGateViewModel","ViewModel","constructor","begin","connect","inject","state","useVip","memberInfo","vipLevel","activeSubGameInfo","baseBoard","subGameInfo"],"mappings":";;;0FAMMA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALCC,MAAAA,S;;;;;;;;;AAKDD,MAAAA,oB,GAAN,MAAMA,oBAAN;AAAA;AAAA,kCAA+E;AAC7EE,QAAAA,WAAW,GAAG;AACZ,gBAAM,kBAAN;AACD;;AAESC,QAAAA,KAAK,GAAG,CAAG;;AAEdC,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,mBAAO;AACLC,cAAAA,MAAM,EAAED,KAAK,CAACE,UAAN,CAAiBC,QADpB;AAELC,cAAAA,iBAAiB,EAAEJ,KAAK,CAACK,SAAN,CAAgBC;AAF9B,aAAP;AAID,WALD;AAMA,iBAAO,IAAP;AACD;;AAf4E,O;;yBAkBhEZ,oB","sourcesContent":["import { Node } from \"cc\"\r\nimport ViewModel from \"../../base/ViewModel\"\r\nimport { Hall_SubGameGate, IProps, IEvent } from \"../components/Hall_SubGameGate\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { SubGameRunState } from \"../config\"\r\n\r\nclass SubGameGateViewModel extends ViewModel<Hall_SubGameGate, IProps, IEvent> {\r\n  constructor() {\r\n    super('Hall_SubGameGate')\r\n  }\r\n\r\n  protected begin() { }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        useVip: state.memberInfo.vipLevel,\r\n        activeSubGameInfo: state.baseBoard.subGameInfo\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default SubGameGateViewModel"]}