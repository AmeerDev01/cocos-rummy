{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth/Framework/patterns/command/Command.ts"],"names":["Command","Notifier","constructor","subCommands","Array","initializeMacroCommand","addSubCommand","commandClassRef","push","execute","notification","slice","len","length","i","commandInstance","splice"],"mappings":";;;wCAKqBA,O;;;;;;;;;;;;;;;;;;;;;;;;;;AAFdC,MAAAA,Q;;;;;;;yBAEcD,O,GAAN,MAAMA,OAAN;AAAA;AAAA,gCAA8D;AAIzEE,QAAAA,WAAW,GAAG;AACV;AADU,eAFJC,WAEI,GAFsB,IAEtB;AAEV,eAAKA,WAAL,GAAmB,IAAIC,KAAJ,EAAnB;AACA,eAAKC,sBAAL;AACH;;AAEMA,QAAAA,sBAAsB,GAAG,CAE/B;;AAEMC,QAAAA,aAAa,CAACC,eAAD,EAAkC;AAClD,eAAKJ,WAAL,CAAiBK,IAAjB,CAAsBD,eAAtB;AACH;;AAEME,QAAAA,OAAO,CAACC,YAAD,EAAoC;AAC9C,cAAIP,WAAuB,GAAG,KAAKA,WAAL,CAAiBQ,KAAjB,CAAuB,CAAvB,CAA9B;AACA,cAAIC,GAAW,GAAG,KAAKT,WAAL,CAAiBU,MAAnC;;AACA,eAAK,IAAIC,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGF,GAA5B,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,gBAAIP,eAAoB,GAAGJ,WAAW,CAACW,CAAD,CAAtC;AACA,gBAAIC,eAAyB,GAAa,IAAIR,eAAJ,EAA1C;AACAQ,YAAAA,eAAe,CAACN,OAAhB,CAAwBC,YAAxB;AACH;;AAED,eAAKP,WAAL,CAAiBa,MAAjB,CAAwB,CAAxB;AACH;;AA5BwE,O","sourcesContent":["import { ICommand } from \"../../interfaces/ICommand\";\r\nimport { INotification } from \"../../interfaces/INotification\";\r\nimport { INotifier } from \"../../interfaces/INotifier\";\r\nimport Notifier from \"../observer/Notifier\";\r\n\r\nexport default class Command extends Notifier implements ICommand, INotifier {\r\n\r\n    protected subCommands: Function[] = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.subCommands = new Array<Function>();\r\n        this.initializeMacroCommand();\r\n    }\r\n\r\n    public initializeMacroCommand() {\r\n\r\n    }\r\n\r\n    public addSubCommand(commandClassRef: Function): void {\r\n        this.subCommands.push(commandClassRef);\r\n    }\r\n\r\n    public execute(notification: INotification): void {\r\n        let subCommands: Function[] = this.subCommands.slice(0);\r\n        let len: number = this.subCommands.length;\r\n        for (let i: number = 0; i < len; i++) {\r\n            let commandClassRef: any = subCommands[i];\r\n            let commandInstance: ICommand = <ICommand>new commandClassRef();\r\n            commandInstance.execute(notification);\r\n        }\r\n\r\n        this.subCommands.splice(0);\r\n    }\r\n\r\n}"]}