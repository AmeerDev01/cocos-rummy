{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/Crash/game/Crash_PlayerListLayer.ts"],"names":["_decorator","instantiate","Prefab","Crash_ViewBase","Crash_DataManager","Crash_PlayerItem","Crash_NetMsgDispatcher","ProtocolCode","ccclass","property","Crash_PlayerListLayer","timeAccumulator","crashStageVo","sate","type1","isMe","totalNumberOfRoomOccupants","start","getInstance","regCallBack","LIST_OF_BETS","sendChatRsp","syncOncePerSecond","val","getCurrentParameters","_nodes","children","forEach","item","Number","getComponent","getItemInfo","odds","getoperated","isShowWin","operated","getisMe","removeChild","insertChild","initList","bl","data","args","destroyAllChildren","push","getUserInfo","setRoomInfoVos","node","playerItem","memberId","init","active","console","log","onDestroy","update","deltaTime","getCrashStageVo","gameType"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, instantiate, Prefab, log } from 'cc';\r\nimport { Crash_ViewBase } from \"../BaseView/Crash_ViewBase\";\r\nimport { Crash_DataManager } from \"../manager/Crash_DataManager\";\r\nimport { Crash_PlayerItem } from \"./Crash_PlayerItem\";\r\nimport Crash_NetMsgDispatcher from \"db://assets/script/subGame/Crash/net/Crash_NetMsgDispatcher\";\r\nimport { ProtocolCode } from \"db://assets/script/subGame/Crash/net/protocol/ProtocolDef\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerListLayer')\r\nexport class Crash_PlayerListLayer extends Crash_ViewBase {\r\n    @property(Prefab)\r\n    playerItem: Prefab = null\r\n    timeAccumulator = 0\r\n    crashStageVo\r\n    sate = true\r\n    type1 = true\r\n    isMe = false\r\n    totalNumberOfRoomOccupants = []\r\n    protected start() {\r\n        super.start();\r\n        this.totalNumberOfRoomOccupants = []\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.LIST_OF_BETS, this, this.sendChatRsp);\r\n        // 创建一个代理对象并将其应用到 this.crashStageVo 上\r\n        // this.crashStageVo = Crash_DataManager.getInstance().getCrashStageVo();\r\n        // // 使用 Object.defineProperty 定义属性 gameType 的 getter 和 setter\r\n        // Object.defineProperty(this.crashStageVo, 'gameType', {\r\n        //     get: function() {\r\n        //         return this._gameType; // 返回属性的值\r\n        //     },\r\n        //     set: function(newValue) {\r\n        //         this._gameType = newValue; // 设置属性的值\r\n        //         console.log('gameType 被设置为:', newValue);\r\n        //     }\r\n        // });\r\n    }\r\n    syncOncePerSecond() {\r\n        let val = Crash_DataManager.getInstance().getCurrentParameters()\r\n        this._nodes['content'].children.forEach(item => {\r\n            if (Number(item.getComponent(Crash_PlayerItem).getItemInfo().odds) <= Number(val) && item.getComponent(Crash_PlayerItem).getoperated()) {\r\n                item.getComponent(Crash_PlayerItem).isShowWin()\r\n                item.getComponent(Crash_PlayerItem).operated()\r\n                if (!item.getComponent(Crash_PlayerItem).getisMe()) {\r\n                    this._nodes['content'].removeChild(item);\r\n                    this._nodes['content'].insertChild(item, this.isMe ? 1 : 0);\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    initList() {\r\n        // this.totalNumberOfRoomOccupants = []\r\n        // this._nodes['content'].destroyAllChildren()\r\n        // let RoomInfoVos = Crash_DataManager.getInstance().getUserInfo().getRoomInfoVos()\r\n        // RoomInfoVos.length > 0 && RoomInfoVos.forEach((res: any, index) => {\r\n        //     let node: Node = instantiate(this.playerItem)\r\n        //     node.active = true\r\n        //     if (Crash_DataManager.getInstance().getUserInfo().getUserInfo().memberId === res.data.memberId) {\r\n        //         node.getComponent(Crash_PlayerItem).init(res, true)\r\n        //         this._nodes['content'].insertChild(node)\r\n        //     } else {\r\n        //         node.getComponent(Crash_PlayerItem).init(res)\r\n        //         this._nodes['content'].addChild(node)\r\n        //     }\r\n        // })\r\n    }\r\n    sendChatRsp(bl, data, args) {\r\n        if (this.type1) {\r\n            this.type1 = false\r\n            this._nodes['content'].destroyAllChildren()\r\n            this.totalNumberOfRoomOccupants = []\r\n        }\r\n        this.totalNumberOfRoomOccupants?.push(data.data)\r\n        Crash_DataManager.getInstance().getUserInfo().setRoomInfoVos(this.totalNumberOfRoomOccupants)\r\n        let node: Node = instantiate(this.playerItem)\r\n        if (node) {\r\n            if (Crash_DataManager.getInstance().getUserInfo().getUserInfo().memberId != data.data.memberId) {\r\n                node.getComponent(Crash_PlayerItem).init(data.data)\r\n                node.active = true\r\n                console.log(this.isMe);\r\n                if(this.isMe){\r\n                    this._nodes['content'].insertChild(node,1)\r\n                }else{\r\n                    this._nodes['content'].insertChild(node,0)\r\n                }\r\n            } else {\r\n                this.isMe = true\r\n                node.getComponent(Crash_PlayerItem).init(data.data, true)\r\n                node.active = true\r\n                this._nodes['content'].insertChild(node, 0);\r\n            }\r\n        }\r\n    }\r\n    protected onDestroy(): void {\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n        this.timeAccumulator += deltaTime;\r\n        if (this.timeAccumulator > 1) {\r\n            let crashStageVo = Crash_DataManager.getInstance().getCrashStageVo()\r\n            if (!crashStageVo) return;\r\n            if (crashStageVo.gameType === 2) {\r\n                if (this.sate) {\r\n                    this.timeAccumulator = 0;\r\n                    this.sate = false\r\n                    this.type1 = true\r\n                    this.initList()\r\n                }\r\n                this.syncOncePerSecond();\r\n            } else if (crashStageVo.gameType === 1) {\r\n                this.sate = true\r\n            }else{\r\n                this.isMe=false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}