{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/viewModel/BandarWinViewModel.ts"],"names":["_decorator","ViewModel","StoreInject","getStore","ccclass","property","WinViewModel","constructor","begin","connect","storeState","store","getState","inject","state","myInfo","game"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAGFC,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAEXC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAGxBM,MAAAA,Y,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,YADN;AAAA;AAAA,kCACiE;AAG7DC,QAAAA,WAAW,GAAG;AACV,gBAAM,YAAN;AACD;;AAESC,QAAAA,KAAK,GAAG,CAEjB;;AAGMC,QAAAA,OAAO,GAAG;AACf,cAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,QAAX,EAAnB;AAEA,eAAKC,MAAL,CAAY,EAAZ,EACIC,KAAD,IAAsB;AACvB;AACA,mBAAO;AACLC,cAAAA,MAAM,EAACD,KAAK,CAACE,IAAN,CAAWD,MADb,CAEL;;AAFK,aAAP;AAID,WAPD;AAQA,iBAAO,IAAP;AACD;;AAxB0D,O;;yBA4BlDT,Y","sourcesContent":["import { _decorator, assetManager,AssetManager, Component, instantiate, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { Bandar_win, IProps, IEvent } from \"../components/Bandar_win\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from '../store';\r\nimport { SKT_MAG_TYPE } from '../socketConnect';\r\nimport { setUserInfoAction } from '../store/actions/userInfo';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@StoreInject(getStore())\r\nclass WinViewModel extends ViewModel<Bandar_win, IProps, IEvent> {\r\n\r\n\r\n    constructor() {\r\n        super('Bandar_win')     \r\n      }\r\n    \r\n      protected begin() { \r\n         \r\n      }\r\n    \r\n      \r\n      public connect() {\r\n        const storeState = this.store.getState() as StateType;\r\n\r\n        this.inject({\r\n        }, (state: StateType) => {\r\n          // console.log(\"roomWinInfo win\",state.history.roomWinInfo)\r\n          return {\r\n            myInfo:state.game.myInfo,\r\n            // roomWinInfo:state.history.roomWinInfo\r\n          }\r\n        })\r\n        return this\r\n      }\r\n\r\n}\r\n\r\nexport default WinViewModel\r\n\r\n"]}