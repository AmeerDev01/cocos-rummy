{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/components/phoenix_flyBg.ts"],"names":["_decorator","BaseComponent","ccclass","property","phoenix_flyBg","propertyNode","props","events","changeGameHandler","lastGameType","currGameType","start","initState","bindEvent","useProps","key","value","bindUI","mirrorImage","bl","Math","random","node","getChildByName","setScale","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;+BAejBI,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb;AAAA;AAAA,0CACyE;AAAA;AAAA;AAAA,eAK9DC,YAL8D,GAK/C,EAL+C;AAAA,eAUjEC,KAViE,GAUjD,EAViD;AAAA,eAcjEC,MAdiE,GAchD;AACvBC,YAAAA,iBAAiB,EAAE,CAACC,YAAD,EAAyBC,YAAzB,KAAoD,CAAG;AADnD,WAdgD;AAAA;;AACxEC,QAAAA,KAAK,GAAG,CAEP;;AAeSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAE3B;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CAEpE;;AAESC,QAAAA,MAAM,GAAS,CAExB;;AAEUC,QAAAA,WAAW,GAAG;AAClB,cAAMC,EAAE,GAAGC,IAAI,CAACC,MAAL,MAAiB,GAA5B;AACA,eAAKC,IAAL,CAAUC,cAAV,CAAyB,iBAAzB,EAA4CC,QAA5C,CAAqDL,EAAE,GAAG,CAAC,CAAJ,GAAQ,CAA/D,EAAkE,CAAlE;AACH;;AAEJM,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3CuE,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { GameType } from '../type';\r\nimport { setShowAuthLaunch } from '../store/actions/game';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\r\n}\r\nexport interface IEvent {\r\n\t/**子游戏值改变要执行的函数 */\r\n\tchangeGameHandler: (lastGameType: GameType, currGameType: GameType) => void\r\n}\r\n\r\n@ccclass('phoenix_flyBg')\r\nexport class phoenix_flyBg extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\r\n\t\t\t\t\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tchangeGameHandler: (lastGameType: GameType, currGameType: GameType) => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\t\r\n\t}\r\n\r\n    private mirrorImage() {\r\n        const bl = Math.random() >= 0.5;\r\n        this.node.getChildByName('caishenguochang').setScale(bl ? -1 : 1, 1)\r\n    }\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}