{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth111/viewModel/RollerPanelViewModel.ts"],"names":["ViewModel","StoreInject","getStore","AutoLauncherType","GameType","IconEffectType","config","setStopRollAction","initRollAction","setIconEffect","setRollRoundEnd","setRollSpeed","setIconBaoHeEffect","setIconFreeGameEffect","SKT_MAG_TYPE","sktMsgListener","dataTransfer","refreshData","DataKeyType","setData","TaskScheduler","Task","PrefabPathDefine","footerViewModel","godWealth_Audio","gameBoardViewModel","sourceManageSeletor","playShellEnd","getCoin","playLing","EffectType","changeProfit","setFreeGameRate","setWaiting","updateBalance","updateSubGameTimes","BaseViewModel","addToastAction","sendNativeVibrate","RollerPanelViewModel","constructor","lastGameType","gameType","viewGameType","rollerMap","taskScheduler","autoLaunchType","isWining","freeGameRate","stopRollerIndex","begin","dispatch","forEach","queue","queueIndex","gameOption","normalRollOption","push","index","iconQueue","map","iconId","uiData","find","i","id","iconEffect","NONE","height","singleRollerHeight","width","singleRollerWidth","intervalHeight","singleIntervalHeight","rolling","speed","rollerSpeed","speedBackUp","rollerWidth","intervalWidth","rollerIntervalWidth","stopIconIndex","direction","setEvent","panelRollEnd","rollerIndex","allRollStop","longStop","MAIN","PROFIT_AMOUNT","FREE_GAME_AMOUNT","SUBGAME_TIMES","flicherArr","ICON_EFFECT_DATA","flicherBaoHeArr","FIXED_CHESSBOARD_ICON","freeGameArr","FREE_GAME_POSITION","allFlicherTask","done","length","arrItemArr","arrItem","NORMAIL","comp","scheduleOnce","subscribeDone","flicherBaoHeTask","BAOHE","SUBGAME2","freeGameTask","FreeGameItemArr","FREEEGAMEZ","joinqQueue","showAwardTask","checkAward","BALANCE","GAME_TYPE","props","stopMode","task","changeGameTypeTask","isExecute","SUBGAME1","winning","winnerDialog","showSmallWin","getSpinsNode","active","getBaoHeBoxNode","LAMIT_FAST","_taskScheduler","add","LAUNCHER_BET","data","error","content","rollerItem","console","log","dl","si","stopQueue","stopIndex","ROLLER_STOP_INDEX_ID","COINS_AFTER_BETTING","isSortStop","t","window","setInterval","clearInterval","autoLauncherPanel","setLaunchEvent","manualBetHandler","profitMultiple","PROFIT_MULTIPLE","item","minRate","maxRate","mountView","getFile","DIALOG_WIN","source","appendTo","parentNode","effectType","EFFECT1","isModal","setProps","glodAmount","killSelfHandler","unMount","SMALL_RESULT","parent","spinsNum","winNum","then","createFlyBg","unMountCallBack","destoryQueue","rollerViewModelMap","mv","removeById","connect","inject","state","game","currGameType","autoLauncherType","roller","iconEffectData","jackpotAmount","iconBaoHeEffectData","iconFreeGameEffectData"],"mappings":"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","sourcesContent":["import { Label, Node } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { GodWealth_rollerPanel, IProps, IEvent } from \"../components/GodWealth_rollerPanel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from \"../store\"\r\nimport { AutoLauncherType, DialogType, DirectionType, GameType, IconEffectType, RollerType, SMALLGAME } from \"../type\"\r\nimport config from \"../config\"\r\nimport { beginRollAction, setStopRollAction, initRollAction, endRollingAction, setIconEffect, setRollRoundEnd, setRollSpeed, setIconBaoHeEffect, setIconFreeGameEffect } from \"../store/actions/roller\"\r\nimport { SKT_MAG_TYPE, sktMsgListener } from \"../socketConnect\"\r\nimport dataTransfer, { refreshData, DataKeyType, setData } from \"../dataTransfer\"\r\nimport TaskScheduler, { Task, TaskSchedulerDefault } from \"../../../utils/TaskScheduler\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { footerViewModel, godWealth_Audio, gameBoardViewModel, sourceManageSeletor, playShellEnd, getCoin, playLing } from \"../index\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { changeGame, changeProfit, setFreeGameId, setFreeGameRate, setSubGameTimes, setWaiting, updateBalance, updateJackpotAmount, updateSubGameTimes } from \"../store/actions/game\"\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\"\r\nimport { GodWealth_dialogWin, IState as BPIState, IProps as BPIProps, IEvent as BPIEvent } from \"../components/GodWealth_dialogWin\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\n// import SgChooseViewModel from \"./SgChooseViewModel\"\r\nimport { ChooseSmallGame } from \"./GameBoardViewModel\"\r\nimport { sendNativeVibrate } from \"../../../common/bridge\"\r\nimport { GodWealth_small_win, IState as SWIState, IProps as SWIProps, IEvent as SWIEvent } from \"../components/GodWealth_small_win\"\r\n\r\n\r\n// export let chooseSmallGame:SgChooseViewModel\r\n@StoreInject(getStore())\r\nclass RollerPanelViewModel extends ViewModel<GodWealth_rollerPanel, IProps, IEvent> {\r\n  constructor() {\r\n    super('GodWealth_rollerPanel')\r\n  }\r\n  private lastGameType: GameType\r\n  private gameType: GameType\r\n  private viewGameType: GameType\r\n  public rollerMap: RollerType[] = []\r\n  public taskScheduler: TaskScheduler = new TaskScheduler()\r\n  private autoLaunchType: AutoLauncherType;\r\n  private isWining: boolean;\r\n  private freeGameRate: number;\r\n  // private winnerDialog: BaseViewModel<Fruit777_BigPrize, BPIState, BPIProps, BPIEvent>\r\n\r\n  private stopRollerIndex: number = -1\r\n  protected begin() {\r\n    this.dispatch(setRollRoundEnd(true))\r\n    \r\n    config[ 'iconRollerQueue'].forEach((queue, queueIndex) => {\r\n      const gameOption = config.normalRollOption\r\n      this.rollerMap.push({\r\n        index: queueIndex,\r\n        iconQueue: queue.map((iconId, index) => {\r\n          const uiData = config['rollerIcon'].find(i => i.id === iconId)\r\n          return {\r\n            iconId,\r\n            queueIndex: index + 1,\r\n            iconEffect: IconEffectType.NONE,\r\n            height: gameOption.singleRollerHeight,\r\n            width: gameOption.singleRollerWidth,\r\n            intervalHeight: gameOption.singleIntervalHeight,\r\n            // LargeIcon: (this.gameType === GameType.SUBGAME1 && queueIndex == 1),\r\n            uiData\r\n          }\r\n        }),\r\n        // LargeRoller: isLargeRollGame,\r\n        rolling: false,\r\n        speed: gameOption.rollerSpeed,\r\n        speedBackUp: gameOption.rollerSpeed,\r\n        width: gameOption.rollerWidth,\r\n        intervalWidth: gameOption.rollerIntervalWidth,\r\n        stopIconIndex: -1,\r\n        direction: gameOption.direction\r\n      })\r\n    })\r\n    // if (this.viewGameType === GameType.SUBGAME2) {\r\n    //   //马上执行的游戏类型是小游戏2\r\n    //   this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    //   this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    // }\r\n    this.setEvent({\r\n      panelRollEnd: (rollerIndex) => {\r\n        // console.log('rollerIndex', rollerIndex)\r\n        this.stopRollerIndex = rollerIndex\r\n      },\r\n      /**滚动结束时执行 */\r\n      allRollStop: () => {\r\n        // console.log(\"allRollStop\",GameType.MAIN)\r\n        godWealth_Audio.longStop()\r\n        playShellEnd()\r\n        if (this.viewGameType === GameType.MAIN) {\r\n          this.dispatch(changeProfit(dataTransfer(DataKeyType.PROFIT_AMOUNT)))//更新盈利\r\n        } else {//小游戏\r\n          this.dispatch(changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)))//更新盈亏\r\n        }\r\n        this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))//小游戏剩余次数\r\n        // this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.SUBGAME_ALL_TIMES)))//小游戏总次数 总次数会发生变化\r\n        const flicherArr: number[][][] = dataTransfer(DataKeyType.ICON_EFFECT_DATA);//获取闪动数据\r\n        const flicherBaoHeArr: number[][] = dataTransfer(DataKeyType.FIXED_CHESSBOARD_ICON);//获取宝盒数据\r\n        const freeGameArr: number[][][] = dataTransfer(DataKeyType.FREE_GAME_POSITION);//小游戏财神位置\r\n        const allFlicherTask = new Task((done) => {\r\n          if (flicherArr.length >= 1) {\r\n            let arrItemArr = [];\r\n            flicherArr.forEach((arrItem, index) => arrItemArr.push(...arrItem));\r\n            this.dispatch(setIconEffect(IconEffectType.NORMAIL, arrItemArr));\r\n            this.dispatch(setFreeGameRate(this.freeGameRate));\r\n            if (!arrItemArr.length) {\r\n              done()\r\n            } else {\r\n              this.comp.scheduleOnce(()=>done(), 2)\r\n              //闪烁2秒钟就结束\r\n              // window.setTimeout(() => done(), 2000)\r\n            }\r\n          } else {\r\n            done()\r\n          }\r\n        }).subscribeDone(`total`, () => {\r\n          this.dispatch(setIconEffect(IconEffectType.NONE, []));\r\n        })\r\n        const flicherBaoHeTask = new Task((done) => {\r\n          if (flicherBaoHeArr.length > 0) {\r\n            this.dispatch(setIconBaoHeEffect(IconEffectType.BAOHE, flicherBaoHeArr));\r\n            if (!flicherBaoHeArr.length || this.gameType !== GameType.SUBGAME2) {\r\n              done()\r\n            } else {\r\n              //闪烁2秒钟就结束\r\n              this.comp.scheduleOnce(()=>done(), 2)\r\n              // window.setTimeout(() => done(), 2000)\r\n            }\r\n          } else {\r\n            done()\r\n          }\r\n        }).subscribeDone(\"total\", () => {\r\n          this.dispatch(setIconFreeGameEffect(IconEffectType.NONE, []));     \r\n        })\r\n\r\n        const freeGameTask = new Task((done) => {\r\n          if (freeGameArr.length > 0) {\r\n            let FreeGameItemArr = [];\r\n            freeGameArr.forEach((arrItem, index) => FreeGameItemArr.push(...arrItem));\r\n            this.dispatch(setIconFreeGameEffect(IconEffectType.FREEEGAMEZ, FreeGameItemArr));\r\n            if (!FreeGameItemArr.length) {\r\n              done()\r\n            } else {\r\n              //闪烁2秒钟就结束\r\n              this.comp.scheduleOnce(()=>done(), 2)\r\n\r\n              // window.setTimeout(() => done(), 2000)\r\n            }\r\n          } else {\r\n            done()\r\n          }\r\n        }).subscribeDone(\"total\", () => {\r\n          this.dispatch(setIconFreeGameEffect(IconEffectType.NONE, []));     \r\n        })\r\n        this.taskScheduler.joinqQueue(allFlicherTask).joinqQueue(freeGameTask)\r\n        this.taskScheduler.joinqQueue(flicherBaoHeTask);\r\n\r\n      \r\n\r\n        const showAwardTask = new Task((done) => {\r\n          //图标效果执行完之后要执行的任务，检查是否有爆奖 弹jackpot框\r\n          this.checkAward(done)\r\n        }).subscribeDone(\"total\", () => {\r\n          if (this.viewGameType === GameType.MAIN) {\r\n            this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE))); //更新用户金币值\r\n          }\r\n          this.dispatch(setRollRoundEnd(true))//是否爆浆完，控制下注按钮;\r\n        })\r\n        this.taskScheduler.joinqQueue(showAwardTask, false);\r\n        // this.taskScheduler.joinqQueue(freeGameTask)\r\n\r\n        //游戏不跳转，才显示每一条线，并且没有自动,11/6日：如果处于加速模式，也不显示每一个闪动了\r\n        if (dataTransfer(DataKeyType.GAME_TYPE) === this.viewGameType && this.autoLaunchType === AutoLauncherType.NONE && this.comp.props.stopMode === 'jump') {\r\n          //将闪动加入任务调度器队列\r\n          flicherArr.forEach((arrItem, index) => {\r\n            const task = new Task((done) => {\r\n              this.dispatch(setIconEffect(IconEffectType.NORMAIL, arrItem))\r\n              //闪烁2秒钟就结束\r\n              this.comp.scheduleOnce(()=>done(), 1.5)\r\n\r\n              // window.setTimeout(() => done(), 1500)\r\n            }).subscribeDone(`${index}`, () => {\r\n              this.dispatch(setIconEffect(IconEffectType.NONE, []))\r\n            })\r\n            this.taskScheduler.joinqQueue(task, false)\r\n          })\r\n        }\r\n\r\n        if (gameBoardViewModel.changeGameTypeTask && !gameBoardViewModel.changeGameTypeTask.isExecute) {\r\n          this.gameType = dataTransfer(DataKeyType.GAME_TYPE);\r\n          //切换游戏\r\n          if (this.gameType === GameType.SUBGAME1) {\r\n            this.taskScheduler.joinqQueue(new Task((done) => {\r\n              const winning = config.winning[config.winning.length - 1]\r\n              const winnerDialog= this.showSmallWin(done)\r\n\r\n                winnerDialog.comp.getSpinsNode().active = true;\r\n              \r\n            }))\r\n          } else if (this.gameType === GameType.SUBGAME2) {\r\n            this.taskScheduler.joinqQueue(new Task((done) => {\r\n              const winnerDialog = this.showSmallWin(done);\r\n              winnerDialog.comp.getBaoHeBoxNode().active = true;\r\n              \r\n            }))\r\n           \r\n          }\r\n          playLing()\r\n            //禁用掉主下注按钮\r\n          this.dispatch(setRollRoundEnd(false))\r\n          this.taskScheduler.joinqQueue(gameBoardViewModel.changeGameTypeTask)\r\n        } else {\r\n          //不切换游戏\r\n          this.taskScheduler.joinqQueue(new Task((done) => {\r\n            this.dispatch(setWaiting(true))\r\n            done()\r\n          }))\r\n        }\r\n      }\r\n\r\n    })\r\n    // this.setProps({ rollerMap })\r\n    this.dispatch(initRollAction(this.rollerMap))//更新每个滑槽图标信息配置\r\n\r\n    if (this.autoLaunchType === AutoLauncherType.LAMIT_FAST) {\r\n      this.dispatch(setRollSpeed(1.5))\r\n    }\r\n\r\n    const _taskScheduler = new TaskScheduler()\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET, \"roller\", (data, error) => {\r\n      if (error) {\r\n        this.dispatch(addToastAction({ content: error }))\r\n        this.rollerMap.forEach((rollerItem, index) => {\r\n          this.dispatch(setStopRollAction(index, 1))\r\n        })\r\n      } else {\r\n        console.log(\"refreshData(data)\", data);\r\n        refreshData(data)\r\n        setData(\"gameType\", data.dl.si[0].gameType)\r\n        this.taskScheduler.stopQueue(false)\r\n        this.dispatch(setIconEffect(IconEffectType.NONE, []))\r\n        const stopIndex: number[] = dataTransfer(DataKeyType.ROLLER_STOP_INDEX_ID)\r\n        this.stopRollerIndex = -1\r\n        if (dataTransfer(DataKeyType.GAME_TYPE) === GameType.MAIN) {\r\n          this.dispatch(updateBalance(dataTransfer(DataKeyType.COINS_AFTER_BETTING)));\r\n        }\r\n        this.rollerMap.forEach((rollerItem, index) => {\r\n          //顺序停止，stopMode=index的时候不使用这种方案，因为一轮可能就会花不少时间，所以最好不用这种\r\n          if (this.comp.props.stopMode === 'jump' && this.comp.props.isSortStop) {\r\n            _taskScheduler.joinqQueue(new Task((done) => {\r\n              this.dispatch(setStopRollAction(index, stopIndex ? stopIndex[index] : 0))\r\n              if (index < 5) {\r\n                const t = window.setInterval(() => {\r\n                  if (this.stopRollerIndex === index) {\r\n                    window.clearInterval(t)\r\n                    done()\r\n                  }\r\n                }, 50)\r\n              } else {\r\n                done()\r\n              }\r\n            }))\r\n          } else {\r\n            this.dispatch(setStopRollAction(index, stopIndex ? stopIndex[index] : 0))\r\n          }\r\n        })\r\n      }\r\n    }, 0)\r\n\r\n    // this.dispatch(changeProfit(dataTransfer(this.viewGameType === GameType.MAIN ? DataKeyType.PROFIT_AMOUNT : DataKeyType.FREE_GAME_AMOUNT)))\r\n    this.dispatch(changeProfit(0))\r\n\r\n    this.comp.scheduleOnce(() => {\r\n      this.dispatch(setWaiting(true))//是否等待人工操作\r\n    }, 1.5)\r\n\r\n    // window.setTimeout(() => {\r\n    //   // console.log(\"this.isWaiting setWaiting\");\r\n    //   this.dispatch(setWaiting(true))//是否等待人工操作\r\n    // }, 1500)\r\n    /**自动运行的函数 */\r\n    footerViewModel.autoLauncherPanel.setLaunchEvent(() => {\r\n      footerViewModel.manualBetHandler()\r\n    })\r\n  }\r\n  /**检查是否要爆奖，爆什么奖 */\r\n  private checkAward(done: Function) {\r\n    /**盈利值 */\r\n    const profitMultiple = dataTransfer(DataKeyType.PROFIT_MULTIPLE);\r\n    const winning = config.winning.find(item => item.minRate <= profitMultiple && profitMultiple <= item.maxRate)//判断使用哪个dialog\r\n    if (winning && this.viewGameType !== GameType.SUBGAME2 && this.gameType !== GameType.SUBGAME2) {\r\n      sendNativeVibrate(200);\r\n      this.isWining = true;\r\n      const winnerDialog = new BaseViewModel<GodWealth_dialogWin, BPIState, BPIProps, BPIEvent>('GodWealth_dialogWin').mountView(sourceManageSeletor()\r\n        .getFile(PrefabPathDefine.DIALOG_WIN).source).appendTo(this.parentNode, { effectType: EffectType.EFFECT1, isModal: true })\r\n        .setProps({ winning, glodAmount: dataTransfer(DataKeyType.PROFIT_AMOUNT) })\r\n        .setEvent({\r\n          killSelfHandler: () => {\r\n            winnerDialog.unMount(EffectType.EFFECT1)\r\n            done()\r\n          }\r\n        })\r\n        getCoin()\r\n    } else {//未爆奖\r\n      done()\r\n    }\r\n  }\r\n\r\n  /**进入小游戏后爆奖 */\r\n  public showSmallWin(done?: Function) {\r\n    sendNativeVibrate(200);\r\n    const winnerDialog = new BaseViewModel<GodWealth_small_win, SWIState, SWIProps, SWIEvent>('GodWealth_small_win').mountView(sourceManageSeletor()\r\n    .getFile(PrefabPathDefine.SMALL_RESULT).source).appendTo(this.parentNode.parent, { effectType: EffectType.EFFECT1, isModal: true })\r\n    .setProps({ spinsNum: dataTransfer(DataKeyType.SUBGAME_TIMES),winNum:dataTransfer(DataKeyType.FREE_GAME_AMOUNT)})\r\n    .setEvent({\r\n      killSelfHandler: () => {\r\n        winnerDialog.unMount(EffectType.EFFECT1).then(() => {          \r\n          gameBoardViewModel.createFlyBg()\r\n        })\r\n        done && done()\r\n      }\r\n    })\r\n    this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE))); //更新用户金币值\r\n    this.comp.scheduleOnce(() => {\r\n      this.dispatch(setWaiting(true))//是否等待人工操作\r\n    }, 3.5)\r\n    // window.setTimeout(() => {\r\n    //   this.dispatch(setWaiting(true))\r\n    // },3500)\r\n\r\n    return winnerDialog\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.taskScheduler.destoryQueue()\r\n    this.comp.rollerViewModelMap.forEach(mv => mv.unMount())\r\n    // this.comp.rollerViewModelMap = []\r\n    this.dispatch(initRollAction([]))\r\n    sktMsgListener.removeById(\"roller\")\r\n    // this.winnerDialog && this.winnerDialog.unMount()\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      this.lastGameType = state.game.lastGameType\r\n      this.gameType = state.game.currGameType\r\n      this.viewGameType = state.game.viewGameType\r\n      this.autoLaunchType = state.game.autoLauncherType\r\n      return {\r\n        rollerMap: state.roller.rollerMap,\r\n        iconEffectData: state.roller.iconEffectData,\r\n        jackpotAmount: state.game.jackpotAmount,\r\n        stopMode: state.game.stopMode,\r\n        isSortStop: state.game.isSortStop,\r\n        iconBaoHeEffectData: state.roller.iconBaoHeEffectData,\r\n        iconFreeGameEffectData: state.roller.iconFreeGameEffectData,\r\n        freeGameRate: state.game.freeGameRate,\r\n        currGameType:state.game.currGameType,\r\n        viewGameType : state.game.viewGameType,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RollerPanelViewModel"]}