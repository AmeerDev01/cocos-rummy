{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/viewModel/BaseBoardViewModel.ts"],"names":["BaseBoardViewModel","Prefab","native","sys","ViewModel","fetcher","sourceManageSeletor","HallPrefabPathDefine","PrefabPathDefine","ToastType","addToastAction","setLoadingAction","setSubGameInfoAction","socketConnect","SKT_MAG_TYPE","removeInstance","sktInstance","sktMsgListener","EffectType","MainPanelViewModel","SubGameRunState","config","deviceInfo","subGameList","ApiUrl","resetMemberInfo","resetWithDrawInfo","lang","NATIVE","BridgeCode","getDeviceUniqueId","LoginPageV2ViewModel","BaseViewModel","constructor","loginPageViewModel","loginPageV2ViewModel","mainPanelViewModel","begin","initInvite","listenerBridge","setProps","toastData","content","type","NORMAL","isLoading","isAllowCloseLoading","setEvent","onGameClose","dispatch","sendSktMessage","GIFT_LIST","toastDone","addOnce","AUTH","GIVE_GLOD","data","getFileAsync","_HELL_WELCOME","then","file","givePanel","mountView","source","appendTo","parentNode","effectType","EFFECT1","isModal","onClosePanel","unMount","EFFECT2","amount","coins","baseBoard","comp","getPropertyNode","props_mainBoard","initLoginPanel","initMainPanel","getFile","MAIN_PANEL","onTouchIntoHandler","gameInfo","connect","logOut","isForce","exit","localStorage","getItem","props","openGameInfo","closeSubGame","removeItem","close","undefined","scheduleOnce","write","k","BaseBoardModule","BaseBoardLogin","placeStr","send","LOGIN_OUT","catch","e","BaseBoardExit","isAutoLogin","_LOGIN_PAGE_V2","onLoginSuccess","isShow","token","gameId","isAllowOpenSubGame","setSubGameGate","hallGameGate","find","i","runState","CANCEL","initProps","inject","state","subGameInfo","viewNode","active","loadPayload","bridge","onNative","arg0","arg1","COPY_CLIPBOARD","UNIQUE_ID","setUniqueId","APP_VERSION","console","log","reqUrl","window","location","href","substring","indexOf","params","split","referer","ap","packageType","getParamValue","param","key","forEach","v","url","httpBaseUrl","INVITE","fetch","response"],"mappings":"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","sourcesContent":["import { Node, Prefab, native, sys } from \"cc\"\r\nimport ViewModel from \"../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { Hall_Baseboard, IProps, IEvent } from \"../components/Hall_Baseboard\"\r\nimport LoginPageViewModel from \"./LoginPageViewModel\"\r\nimport { fetcher, hallAudio, sourceManageSeletor } from \"../index\"\r\nimport { PrefabPathDefine as HallPrefabPathDefine, PrefabPathDefine } from '../../hall/sourceDefine/prefabDefine';\r\nimport { ToastPosition, ToastType, addToastAction, setLoadingAction, setSubGameInfoAction } from \"../store/actions/baseBoard\"\r\nimport socketConnect, { SKT_MAG_TYPE, removeInstance, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { EffectType } from \"../../utils/NodeIOEffect\"\r\nimport MainPanelViewModel from \"./MainPanelViewModel\"\r\nimport { HallGameGateType, SubGameRunState, config, deviceInfo, subGameList } from \"../config\"\r\nimport { ApiUrl } from \"../apiUrl\"\r\nimport { resetMemberInfo } from \"../store/actions/memberInfo\"\r\nimport { resetWithDrawInfo } from \"../store/actions/withdraw\"\r\nimport { lang } from \"../index\"\r\nimport { NATIVE } from \"cc/env\"\r\nimport { BridgeCode, getDeviceUniqueId } from \"../../common/bridge\"\r\nimport LoginPageV2ViewModel from \"./login_v2/LoginPageV2ViewModel\"\r\nimport BaseViewModel from \"./BaseViewModel\"\r\nimport { Hall_GivePanel, IState as GPIState, IProps as GPIProps, IEvent as GPIEvent } from \"../components/Hall_GivePanel\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\n\r\nclass BaseBoardViewModel extends ViewModel<Hall_Baseboard, IProps, IEvent> {\r\n  constructor() {\r\n    super('Hall_Baseboard')\r\n  }\r\n  private loginPageViewModel: LoginPageViewModel\r\n  public loginPageV2ViewModel: LoginPageV2ViewModel\r\n  public mainPanelViewModel: MainPanelViewModel\r\n  // private personCanterMainPanel:\r\n  protected begin() {\r\n    this.initInvite();\r\n    this.listenerBridge();\r\n    getDeviceUniqueId();\r\n\r\n    this.setProps({\r\n      toastData: { content: \"\", type: ToastType.NORMAL },\r\n      isLoading: false,\r\n      isAllowCloseLoading: false\r\n    })\r\n    this.setEvent({\r\n      onGameClose: () => {\r\n        // this.setProps({ openGameInfo: null })\r\n        this.dispatch(setSubGameInfoAction(null))\r\n        //看有没有礼包需要弹出\r\n        sktInstance.sendSktMessage(SKT_MAG_TYPE.GIFT_LIST, {})\r\n      },\r\n      toastDone: () => {\r\n        //这里重置下toast的内容，不然下次其他数据触发更新，会将之前的数据带过去，然后显示旧信息，因为内容为空的时候信息不会显示\r\n        this.dispatch(addToastAction({ content: \"\" }))\r\n      }\r\n    })\r\n\r\n    sktMsgListener.addOnce(SKT_MAG_TYPE.AUTH, \"auth\", () => {\r\n      // this.dispatch(addToastAction({ content: lang.write(k => k.BaseBoardModule.BaseBoardBeat, {}, { placeStr: \"认证成功~\" }) }))\r\n    })\r\n\r\n    sktMsgListener.addOnce(SKT_MAG_TYPE.GIVE_GLOD, \"give\", (data) => {\r\n      sourceManageSeletor().getFileAsync(PrefabPathDefine._HELL_WELCOME, Prefab).then(file => {\r\n        const givePanel = new BaseViewModel<Hall_GivePanel, GPIState, GPIProps, GPIEvent>('Hall_GivePanel').mountView(file.source)\r\n          .appendTo(this.parentNode, { effectType: EffectType.EFFECT1, isModal: true }).setEvent({\r\n            onClosePanel: () => {\r\n              givePanel.unMount(EffectType.EFFECT2)\r\n            }\r\n          }).setProps({ amount: data.coins })\r\n      })\r\n    })\r\n\r\n    const baseBoard = this.comp.getPropertyNode().props_mainBoard as Node\r\n    this.initLoginPanel(baseBoard, true)\r\n    // hallAudio.play(SoundPathDefine.MAIN_BGM, true)\r\n  }\r\n\r\n  private initMainPanel(baseBoard) {\r\n    this.mainPanelViewModel = new MainPanelViewModel().mountView(sourceManageSeletor().getFile(HallPrefabPathDefine.MAIN_PANEL).source).appendTo(baseBoard)\r\n      .setEvent({\r\n        onTouchIntoHandler: (gameInfo: HallGameGateType) => {\r\n          // this.dispatch(setSubGameInfoAction(gameInfo))\r\n          // this.mainPanelViewModel.viewNode.active = false\r\n        }\r\n      }).connect()\r\n    this.mainPanelViewModel.logOut = (isForce: boolean = false) => {\r\n      const exit = () => {\r\n        if (!sys.localStorage.getItem(\"token\")) return\r\n        this.comp.props.openGameInfo && (this.comp.closeSubGame())\r\n        sys.localStorage.removeItem(\"token\")\r\n        // this.comp.getMainBoardNode().destroyAllChildren()\r\n        this.initLoginPanel(baseBoard, false)\r\n        sktInstance.close()\r\n        removeInstance()\r\n        this.dispatch(resetMemberInfo(undefined))\r\n        this.dispatch(resetWithDrawInfo(undefined))\r\n        this.comp.scheduleOnce(() => {\r\n          // 踏马的，这里有点诡异\r\n          this.mainPanelViewModel.unMount().then(() => {\r\n            this.mainPanelViewModel = null\r\n          })\r\n        }, 0.3)\r\n      }\r\n      if (isForce) {\r\n        this.dispatch(addToastAction({ content: lang.write(k => k.BaseBoardModule.BaseBoardLogin, {}, { placeStr: \"抱歉，您的登录信息变更，已自动退出~\" }) }))\r\n        exit()\r\n      } else {\r\n        fetcher.send(ApiUrl.LOGIN_OUT).then((data) => exit()).catch((e) => {\r\n          !isForce && this.dispatch(addToastAction({ content: lang.write(k => k.BaseBoardModule.BaseBoardExit, {}, { placeStr: \"退出失败~\" }) }))\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n  /**\r\n   * 初始化加载框\r\n   * @param baseBoard 加载到的底板\r\n   * @param isAutoLogin 是否自动登录\r\n   */\r\n  private async initLoginPanel(baseBoard: Node, isAutoLogin: boolean = true) {\r\n    // this.loginPageViewModel = new LoginPageViewModel()\r\n    this.loginPageV2ViewModel = new LoginPageV2ViewModel()\r\n      .mountView((await sourceManageSeletor().getFileAsync(HallPrefabPathDefine._LOGIN_PAGE_V2, Prefab)).source).appendTo(baseBoard).setEvent({\r\n        onLoginSuccess: () => {\r\n          this.dispatch(setLoadingAction({ isShow: true }))\r\n          //初始化通信\r\n          socketConnect().then(() => {\r\n            // if (config.appLocalVersion < config.appOnlineVersion) {\r\n            //   //弹出更新提示\r\n            //   this.dispatch(addToastAction({ content: \"请更新App至最新版\" }))\r\n            // } else {\r\n            //   this.loginPageViewModel.unMount(EffectType.EFFECT1)\r\n            //   sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, sys.localStorage.getItem(\"token\"))\r\n            //   // 打开大厅页面\r\n            //   this.initMainPanel(baseBoard)\r\n            // }\r\n            this.loginPageV2ViewModel.unMount(EffectType.EFFECT1)\r\n            sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n              token: sys.localStorage.getItem(\"token\"),\r\n              gameId: 0\r\n            })\r\n            // 打开大厅页面\r\n            this.initMainPanel(baseBoard)\r\n          }).catch(e => {\r\n            sktInstance.close()\r\n            this.dispatch(setLoadingAction({ isShow: false }))\r\n          })\r\n        }\r\n      }).setProps({\r\n        isAutoLogin\r\n      }).connect()\r\n  }\r\n  /**是否允许打开子游戏,一般用于子游戏的第一个首预制体已经加载完毕 */\r\n  public isAllowOpenSubGame(gameId: number) {\r\n    if (this.comp.props.openGameInfo) {\r\n      this.mainPanelViewModel.comp.setSubGameGate(gameId, 0, false)\r\n      return false\r\n    } else {\r\n      //先取得\r\n      //const gateViewModel = this.mainPanelViewModel.comp.gateViewModelList.find(item => item.comp.props.gamesId.indexOf(gameId) !== -1)\r\n      const hallGameGate: HallGameGateType = subGameList.find(i => i.gameId === gameId)\r\n      if (hallGameGate.runState === SubGameRunState.CANCEL) {\r\n        return false\r\n      }\r\n      this.dispatch(setSubGameInfoAction(subGameList.find(i => i.gameId === gameId)))\r\n      return true\r\n    }\r\n  }\r\n\r\n  // public connect(initProps: Partial<IProps> = {}) {\r\n  public connect(initProps: Partial<IProps> = {}) {\r\n    this.inject(initProps, (state: StateType) => {\r\n      // console.log(state.baseBoard.toastData)\r\n      if (state.baseBoard.subGameInfo === null) {\r\n        this.mainPanelViewModel && (this.mainPanelViewModel.viewNode.active = true)\r\n      }\r\n      return {\r\n        toastData: state.baseBoard.toastData,\r\n        isLoading: state.baseBoard.loadPayload.isShow,\r\n        isAllowCloseLoading: state.baseBoard.loadPayload.isAllowCloseLoading,\r\n        openGameInfo: state.baseBoard.subGameInfo\r\n      }\r\n    }, false)\r\n  }\r\n\r\n  /**监听原生发来的数据 */\r\n  private listenerBridge() {\r\n    if (NATIVE) {\r\n      native.bridge.onNative = (arg0: string, arg1: string) => {\r\n        // const bridgeData = JSON.parse(arg1) as BridgeData;\r\n        if (BridgeCode.COPY_CLIPBOARD === arg0) {\r\n          // this.dispatch(addToastAction({ content: lang.write(k => k.HallModule.HallCopy, {}, { placeStr: \"已复制内容到剪切板\" }) }))\r\n        } else if (BridgeCode.UNIQUE_ID === arg0) {\r\n          // deviceInfo.uniqueId = arg1;\r\n          deviceInfo.setUniqueId(arg1);\r\n        } else if (BridgeCode.APP_VERSION === arg0) {\r\n          console.log(arg1)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private initInvite() {\r\n    if (!NATIVE) {\r\n      let reqUrl = window.location.href;\r\n      reqUrl = reqUrl.substring(reqUrl.indexOf(\"?\") + 1)\r\n      const params = reqUrl.split(\"&\");\r\n\r\n      let referer = '';\r\n      let ap = '';\r\n      const packageType = '0';\r\n      const getParamValue = (param: string, key: string) => {\r\n        return param.substring(param.indexOf(\"=\") + 1);\r\n      }\r\n\r\n      if (params) {\r\n        params.forEach(v => {\r\n          if (v.indexOf('referer') !== -1) {\r\n            referer = getParamValue(v, 'referer');\r\n          } else if (v.indexOf('ap') !== -1) {\r\n            ap = getParamValue(v, 'ap');\r\n          }\r\n        })\r\n      }\r\n      if (ap) {\r\n        const url = config.httpBaseUrl + ApiUrl.INVITE + '?referer=' + referer + '&ap=' + ap + '&packageType=' + packageType;\r\n        fetch(url).then((response) => {\r\n        }).catch((e) => {\r\n        })\r\n      } else {\r\n        console.log(\"ap not found\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseBoardViewModel"]}