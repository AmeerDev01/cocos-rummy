{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenix/Slot/Mediator/BgMediator.ts"],"names":["BgMediator","Node","Prefab","sp","Sprite","Label","Button","Toggle","CommandDefine","PrefabDefine","BaseMediator","SubGameType","AutoLaunchType","StopMode","phoenix_DialogWin","phoenix_sgChoose","phoenix_totalBet","BgCommandConst","getBgProxy","getSocketProxy","RollerMediatorConst","AudioManager","SoundList","config","global","UseSetOption","addToastAction","sendNativeVibrate","BgMediatorConst","constructor","mediatorName","viewComponent","buttonThrottling","sourceMap","key","path","SLOT_BG","sourceType","source","FLY_BG","DYNAMIC_NUMBER","DIALOG_WIN","PHOENIX_DIALOGWIN","PHOENIX_TOTALBET","RULE_PANEL","TOAST","RESULT_SMALL","listNotificationConst","name","INIT_MAIN_PANEL","handler","notification","init","pdd","Instance","option","gameSet","phoenix","betTarget","positionId","initUserSwitch","sendNotification","BG","order","UPDATE_BET_AMOUNT","SETGREYOUT","state","getBody","comp","wrapView","getComponent","setGreyOut","CHANGE_BG","gameType","changeBg","START_FLY_BG","cb","done","flyBgNode","getSource","addChild","setSiblingIndex","getChildByName","Skeleton","setCompleteListener","removeChild","AUTO_LAUNCH","window","setTimeout","console","log","getNextGame","THESLOTISHIDDEN","subGameType","SUB_GAME1","UPDATE_NUMBER","UPDATE_AUTO_LAUNCH","setActiveButton","getAutoLaunchType","UPDATE_JACKPOT","UPDATE_GAME_STATUS","setDisable","getDisable","getLastGame","setDis_btn","homeButton","grayscale","UPDATE_BTN_LABEL","btnLabel","getGameCount","getGameTotalNumber","setBtnLabel","UPDATE_USER_GOLD","gold","getTransferGameInfo","getUserGold","setGold","toString","SHOW_DIALOG_WIN","dialogType","amount","keepTime","dialog","type","getShiftAmount","jackpot","showDialog","DISPLAYSTHEINGOTSMULTIPLIER","OtherGameAttributesVo","getOtherGameAttributesVo","yuanBaoSpecialEffect","totalBetComponent","setTotalText","isValid","destroy","PHOENIX_SGCHOOSE","sgChooseComponent","node","children","filter","item","startsWith","forEach","index","once","EventType","TOUCH_END","e","enabled","i","skeleton_in","target","active","setFreeGamePositionId","smallGame","setGameCount","times","setGameTotalNumber","monitorAnimations","entry","sgChooseHide","HANDOFF_JACKPOT","handoffJACKPOT","OPEN_RULE_PANEL","rulePanel","InsufficientBalanceDisplay","bl","Balance_tips","baseBetAmount","lineCount","updateBetAmount","TOGGLETHESTARTBUTTON","checkAutoLaunch","str","isUNLIMT","getAutoLaunchNum","getTotal","setBtnState","UPDATE_CURRENT_SCORE","isInit","clear","currentScore","getCurrentScore","isChange","updateScore","getInstance","playSound","coinCollection","SHOW_TOAST","content","hallDispatch","String","SHOW_SMALL_GAME_RESULT","win","resultSmall","string","Number","formatAmountWithCommas","listenerEvent","autoButtonWrap","autoLaunch","props_toggle_fast","propsToggleFast","isChecked","pressTime","timeLimit","timer","isLongPress","ruleButton","on","buttonClick","startButton","TOUCH_START","getCurrentGame","MAIN","setInterval","clearInterval","presentGame","triggeAutoLaunch","TOUCH_CANCEL","fbp","DISABLE","setAutoLaunchType","sendLaunch","END_ROLL","scheduleOnce","closeMusic","closeSubGame","addBet","add_coin","calculateTheBalanceStatus","subtractBet","reduce_coin","maxBet","child","setStopMode","TOGGLE","toggle","QUEUE_STOP","NORMAL","onEndCall","gameRunner","setBg"],"mappings":"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","sourcesContent":["import { Node, Prefab, sp, Sprite, Color, Component, Label, Button, Toggle } from \"cc\";\r\nimport { INotification } from \"../../Framework/interfaces/INotification\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { PrefabDefine } from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\"\r\nimport { IlistTypeHander } from \"../types/IlistTypeHander\";\r\nimport { ISourceFile } from \"../types/ISourceFile\";\r\nimport { phoenix_SlotBg } from \"../Component/phoenix_SlotBg\";\r\nimport { SubGameType } from \"../Proxy/SocketProxy\";\r\nimport { AutoLaunchType, StopMode } from \"../Repositories/BgRepository\";\r\nimport { phoenix_DialogWin } from \"../Component/phoenix_DialogWin\";\r\nimport { phoenix_sgChoose } from \"../Component/phoenix_sgChoose\";\r\nimport { phoenix_totalBet } from \"../Component/phoenix_totalBet\";\r\nimport { BgCommandConst } from \"../Command/BgCommand\";\r\nimport { getBgProxy, getSocketProxy } from \"../phoenix_utils\";\r\nimport { phoenix_Toast } from \"../Component/phoenix_Toast\";\r\nimport { RollerMediatorConst } from \"./RollerMediator\";\r\nimport { AudioManager, SoundList } from \"../Managr/AudioManager\";\r\nimport config from \"../phoenix_config\";\r\nimport { global } from \"db://assets/script/hall\";\r\nimport UseSetOption from \"db://assets/script/utils/UseSetOption\";\r\nimport { addToastAction } from \"../../../../hall/store/actions/baseBoard\";\r\nimport { sendNativeVibrate } from \"../../../../common/bridge\";\r\n\r\n// export interface IlistNotificationer {\r\n//  name: string\r\n//  isListen?: boolean\r\n//  handler(notification: INotification): void\r\n// }\r\nexport enum BgMediatorConst {\r\n    INIT_MAIN_PANEL = \"initMainPanel\",\r\n    /**开始飞水果 */\r\n    START_FLY_BG = \"startFlyBg\",\r\n    /**更新一些关于数字的界面（弃用） */\r\n    UPDATE_NUMBER = \"updateNumber\",\r\n    /**修改背景图片 */\r\n    CHANGE_BG = \"changeBG\",\r\n    /**更新自动启动按钮面板 */\r\n    UPDATE_AUTO_LAUNCH = \"updateAutoLaunch\",\r\n    /**更新游戏进行状态 */\r\n    UPDATE_GAME_STATUS = \"updateGameStatus\",\r\n    /**展示大奖弹窗 */\r\n    SHOW_DIALOG_WIN = \"showDialogWin\",\r\n    /**展示规则弹窗 */\r\n    OPEN_RULE_PANEL = \"openRulePanel\",\r\n    /**刷新下注信息 */\r\n    UPDATE_BET_AMOUNT = \"updateBetAmount\",\r\n    /**更新当前的奖励 */\r\n    UPDATE_CURRENT_SCORE = \"updateCurrentScore\",\r\n    /**展示toast */\r\n    SHOW_TOAST = \"showToast\",\r\n    /*更换按钮文字*/\r\n    UPDATE_BTN_LABEL = \"updateBtnLabel\",\r\n    /*更新玩家金币*/\r\n    UPDATE_USER_GOLD = \"updateUserGold\",\r\n    UPDATE_JACKPOT = \"UPDATE_JACKPOT\",\r\n    HANDOFF_JACKPOT = 'handoff_jackpot',\r\n    /*更新玩家金币*/\r\n    PHOENIX_SGCHOOSE = 'phoenix_sgchoose',\r\n    /*显示元宝倍数*/\r\n    DISPLAYSTHEINGOTSMULTIPLIER = 'displaystheingotsmultiplier',\r\n    /*切换启动按钮状态*/\r\n    TOGGLETHESTARTBUTTON = 'togglethestartbutton',\r\n    /*显示小游戏结果*/\r\n    SHOW_SMALL_GAME_RESULT = \"showSmallGameResult\",\r\n    InsufficientBalanceDisplay = \"InsufficientBalanceDisplay\",\r\n    /*设置+-按钮置灰*/\r\n    SETGREYOUT = 'SETGREYOUT'\r\n}\r\n\r\nexport default class BgMediator extends BaseMediator {\r\n    buttonThrottling = true\r\n    public sourceMap: Array<ISourceFile> = [\r\n        {\r\n            key: 'fruitsSlot',\r\n            path: PrefabDefine.SLOT_BG,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'flyBg',\r\n            path: PrefabDefine.FLY_BG,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'dynamicNumber',\r\n            path: PrefabDefine.DYNAMIC_NUMBER,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'dialogWin',\r\n            path: PrefabDefine.DIALOG_WIN,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'phoenix_dialogwin',\r\n            path: PrefabDefine.PHOENIX_DIALOGWIN,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'phoenix_totalbet',\r\n            path: PrefabDefine.PHOENIX_TOTALBET,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'rulePanel',\r\n            path: PrefabDefine.RULE_PANEL,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'toast',\r\n            path: PrefabDefine.TOAST,\r\n            sourceType: Prefab,\r\n            source: null\r\n        },\r\n        {\r\n            key: 'resultSmall',\r\n            path: PrefabDefine.RESULT_SMALL,\r\n            sourceType: Prefab,\r\n            source: null\r\n        }\r\n    ]\r\n    protected listNotificationConst: Array<IlistTypeHander<BgMediator>> = [\r\n        {\r\n            name: BgMediatorConst.INIT_MAIN_PANEL,\r\n            handler(notification: INotification) {\r\n                this.init()\r\n                let pdd = UseSetOption.Instance().option.gameSet.phoenix ? UseSetOption.Instance().option.gameSet.phoenix.betTarget.positionId : 1\r\n                getSocketProxy().initUserSwitch(pdd)\r\n                this.sendNotification(CommandDefine.BG, { order: \"curr\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n                // if (UseSetOption.Instance().option.gameSet.phoenix && UseSetOption.Instance().option.gameSet.phoenix.betTarget) {\r\n                //     let pdd = UseSetOption.Instance().option.gameSet.phoenix ? UseSetOption.Instance().option.gameSet.phoenix.betTarget.positionId : 1\r\n                //     getSocketProxy().initUserSwitch(pdd)\r\n                // }\r\n                // this.sendNotification(CommandDefine.BG, { order: \"curr\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.SETGREYOUT,\r\n            handler(notification: INotification) {\r\n              const { state } = notification.getBody(),\r\n                comp = (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg)\r\n              if (state !== 0) {\r\n                comp.setGreyOut('SZX_-', state == 1)\r\n                comp.setGreyOut('SZX_+', state == 2)\r\n              } else {\r\n                comp.setGreyOut('SZX_-', false)\r\n                comp.setGreyOut('SZX_+', false)\r\n              }\r\n      \r\n            }\r\n          },\r\n        {\r\n            name: BgMediatorConst.CHANGE_BG,\r\n            handler(notification: INotification) {\r\n                const { gameType } = notification.getBody() || {}\r\n                this.changeBg(gameType)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.START_FLY_BG,\r\n            handler(notification: INotification) {\r\n                const { cb, done } = notification.getBody() || {};\r\n                const flyBgNode = this.getSource(PrefabDefine.FLY_BG) as Node;\r\n                this.viewComponent.addChild(flyBgNode)\r\n                flyBgNode.setSiblingIndex(1000)\r\n                flyBgNode.getChildByName(\"caishenguochang\").getComponent(sp.Skeleton).setCompleteListener(() => {\r\n                    this.viewComponent.removeChild(flyBgNode)\r\n                    this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                    done && done();\r\n                });\r\n                window.setTimeout(() => {\r\n                    if (cb) {\r\n                        cb();\r\n                    } else {\r\n                        console.log(\"START_FLY_BG settimeout \", getBgProxy().getNextGame());\r\n                        this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType: getBgProxy().getNextGame() })\r\n                        this.sendNotification(RollerMediatorConst.THESLOTISHIDDEN, { subGameType: SubGameType.SUB_GAME1, state: false })\r\n                    }\r\n                }, 500)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.UPDATE_NUMBER,\r\n            handler(notification: INotification) {\r\n                // const { betAmount, score } = notification.getBody();\r\n                // (this.wrapView.getComponent(\"SlotBg\") as SlotBg).updateBetAmount(betAmount);\r\n                // (this.wrapView.getComponent(\"SlotBg\") as SlotBg).updateScore(score);\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.UPDATE_AUTO_LAUNCH,\r\n            handler(notification: INotification) {\r\n                (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\")).setActiveButton(getBgProxy().getAutoLaunchType())\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.UPDATE_JACKPOT,\r\n            handler(notification: INotification) {\r\n                // let { jackPotData } = notification.getBody();\r\n                // (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\")).setJACKPOT(jackPotData)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.UPDATE_GAME_STATUS,\r\n            handler(notification: INotification) {\r\n                const comp = (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\"))\r\n                comp.setDisable(getBgProxy().getDisable())\r\n                if (getBgProxy().getLastGame() != 0) {\r\n                    comp.setDis_btn(true)\r\n                } else {\r\n                    comp.setDis_btn(getBgProxy().getDisable())\r\n                }\r\n                comp.homeButton.getComponent(Sprite).grayscale = getBgProxy().getDisable()\r\n            }\r\n        }, {\r\n            name: BgMediatorConst.UPDATE_BTN_LABEL,\r\n            handler(notification: INotification) {\r\n                const comp = (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\"))\r\n                let { state } = notification.getBody()\r\n\r\n                // const isMainGame = getBgProxy().getGameCount() === 0;\r\n                // comp.setBtnState(isMainGame, isMainGame ? 0 : 1);\r\n                // if (isMainGame) return;\r\n\r\n                let btnLabel\r\n                if (state) {\r\n                    btnLabel = `${getBgProxy().getGameCount() - 1}/${getBgProxy().getGameTotalNumber()}`\r\n                } else {\r\n                    btnLabel = `${getBgProxy().getGameCount()}/${getBgProxy().getGameTotalNumber()}`\r\n                }\r\n                comp.setBtnLabel(btnLabel)\r\n            }\r\n        }, {\r\n            name: BgMediatorConst.UPDATE_USER_GOLD,\r\n            handler(notification: INotification) {\r\n                let { state } = notification.getBody()\r\n                let gold = getSocketProxy().getTransferGameInfo().getUserGold(state)\r\n                const comp = (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\"))\r\n                comp.setGold(gold.toString())\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.SHOW_DIALOG_WIN,\r\n            handler(notification: INotification) {\r\n                const { dialogType, amount, keepTime, done } = notification.getBody()\r\n                const dialog = this.getSource(PrefabDefine.DIALOG_WIN);\r\n                this.viewComponent.addChild(dialog);\r\n                let type = dialogType\r\n                if (dialogType === 'jackpot' && getSocketProxy().getShiftAmount(\"curr\").jackpot == 0) {\r\n                    type = 'superWin'\r\n                }\r\n                sendNativeVibrate(200);\r\n                (dialog.getComponent(phoenix_DialogWin) as phoenix_DialogWin).showDialog(dialogType, amount, keepTime || 2000, () => { done() })\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.DISPLAYSTHEINGOTSMULTIPLIER,\r\n            handler(notification: INotification) {\r\n                const { done } = notification.getBody()\r\n                let OtherGameAttributesVo = getSocketProxy().getTransferGameInfo().getOtherGameAttributesVo()\r\n                if (OtherGameAttributesVo.yuanBaoSpecialEffect) {\r\n                    const dialog = this.getSource(PrefabDefine.PHOENIX_TOTALBET) as Node;\r\n                    this.viewComponent.addChild(dialog);\r\n                    const totalBetComponent = (dialog.getComponent(phoenix_totalBet) as phoenix_totalBet);\r\n                    totalBetComponent.setTotalText(OtherGameAttributesVo)\r\n                    setTimeout(() => {\r\n                        dialog.isValid && dialog.destroy();\r\n                        done()\r\n                    }, 2000)\r\n                } else {\r\n                    done()\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.PHOENIX_SGCHOOSE,\r\n            handler(notification: INotification) {\r\n                getBgProxy().setDisable(true)\r\n                const dialog = this.getSource(PrefabDefine.PHOENIX_DIALOGWIN);\r\n                let sgChooseComponent = dialog.getComponent(phoenix_sgChoose) as phoenix_sgChoose\r\n                // let click = false\r\n                sgChooseComponent.node.children.filter(item => item.name.startsWith(\"props_\")).forEach((item, index) => {\r\n                    item.once(Node.EventType.TOUCH_END, (e) => {\r\n                        item.getComponent(Button).enabled = false;\r\n                        sgChooseComponent.node.children.filter(item => item.name.startsWith(\"props_\")).forEach((item, i) => {\r\n                            if (index !== i) {\r\n                                // 其他node开启灰度\r\n                                item.getComponent(Sprite).grayscale = true\r\n                                item.getComponent(Button).enabled = false;\r\n                            }\r\n                        })\r\n                        let skeleton_in: Node = e.target.getChildByName('skeleton_in')\r\n                        skeleton_in.active = true\r\n                        getBgProxy().setFreeGamePositionId(index + 1)\r\n                        // 设置按钮次数\r\n                        let smallGame = config.smallGame[index]\r\n                        getBgProxy().setGameCount(smallGame.times)\r\n                        getBgProxy().setGameTotalNumber(smallGame.times)\r\n                        this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL, { state: false })\r\n                        // 选择次数之后播放转场动画\r\n                        this.monitorAnimations(skeleton_in.getComponent(sp.Skeleton), (entry) => {\r\n                            getBgProxy().setDisable(false)\r\n                            this.sendNotification(BgMediatorConst.START_FLY_BG)\r\n                            sgChooseComponent.sgChooseHide()\r\n                        })\r\n                    })\r\n                })\r\n                // 选择框\r\n                this.viewComponent.addChild(dialog);\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.HANDOFF_JACKPOT,\r\n            handler(notification: INotification) {\r\n                (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).handoffJACKPOT();\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.OPEN_RULE_PANEL,\r\n            handler(notification: INotification) {\r\n                const rulePanel = this.getSource(PrefabDefine.RULE_PANEL);\r\n                this.viewComponent.addChild(rulePanel)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.InsufficientBalanceDisplay,\r\n            handler(notification: INotification) {\r\n                const { bl } = notification.getBody();\r\n                (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).Balance_tips(bl)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.UPDATE_BET_AMOUNT,\r\n            handler(notification: INotification) {\r\n                const { baseBetAmount, lineCount } = notification.getBody();\r\n               window.setTimeout(()=>{\r\n                (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).updateBetAmount(baseBetAmount, lineCount);\r\n               },300);\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.TOGGLETHESTARTBUTTON,\r\n            handler(notification: INotification) {\r\n                const { state } = notification.getBody();\r\n                if (getBgProxy().getNextGame() == 0) {\r\n                    if (getBgProxy().checkAutoLaunch()) { // 是自动\r\n                        let str = (getBgProxy().isUNLIMT()) ? \"∞\" : getBgProxy().getAutoLaunchNum() + \"/\" + getBgProxy().getTotal();\r\n                        (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).setBtnState(state, 3, str);\r\n                    } else {\r\n                        (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).setBtnState(state);\r\n                    }\r\n                } else { // 小游戏\r\n                    (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).setBtnState(state, 1);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.UPDATE_CURRENT_SCORE,\r\n            handler(notification: INotification) {\r\n                const { order, isInit, clear } = notification.getBody() || {}\r\n                const currentScore = clear ? 0 : getSocketProxy().getTransferGameInfo().getCurrentScore(order || \"auto\");\r\n                // console.log(\"UPDATE_CURRENT_SCORE\", currentScore);\r\n                const isChange = (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).updateScore(currentScore)\r\n                if (currentScore > 0 && !isInit && isChange) {\r\n                    AudioManager.getInstance().playSound(SoundList.coinCollection);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.SHOW_TOAST,\r\n            handler(notification: INotification) {\r\n                const { content } = notification.getBody() || {};\r\n                global.hallDispatch(addToastAction({ content: String(content) }))\r\n                // const toastPanel = this.getSource(PrefabDefine.TOAST)\r\n                // this.viewComponent.addChild(toastPanel);\r\n                // (toastPanel.getComponent(\"phoenix_Toast\") as phoenix_Toast).showContent(content)\r\n            }\r\n        },\r\n        {\r\n            name: BgMediatorConst.SHOW_SMALL_GAME_RESULT,\r\n            handler(notification: INotification) {\r\n                const { win, done } = notification.getBody() || {};\r\n                const resultSmall = this.getSource(PrefabDefine.RESULT_SMALL) as Node;\r\n                this.viewComponent.addChild(resultSmall);\r\n                resultSmall.getChildByName(\"prop_label_result_num\").getComponent(Label).string = Number(win).formatAmountWithCommas();\r\n\r\n                // 展示一段时间消失\r\n                window.setTimeout(() => {\r\n                    resultSmall.isValid && resultSmall.destroy();\r\n                    done && done();\r\n                    // this.sendNotification(BgMediatorConst.START_FLY_BG, {\r\n                    //     cb: () => {\r\n                    //         this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                    //     }\r\n                    // });\r\n                }, 2000);\r\n            }\r\n        }\r\n    ]\r\n\r\n    public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n        super(mediatorName, viewComponent)\r\n    }\r\n\r\n    protected listenerEvent() {\r\n        const comp = (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\"))\r\n        const autoButtonWrap = (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\")).autoLaunch\r\n        const props_toggle_fast = (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\")).propsToggleFast;\r\n        props_toggle_fast.getComponent(Toggle).isChecked = false;\r\n\r\n        let pressTime = 0\r\n        const timeLimit = 500 //按压触发自动面板时间\r\n        let timer = 0\r\n        let isLongPress = false\r\n        comp.ruleButton.on(Node.EventType.TOUCH_END, () => {\r\n            AudioManager.getInstance().playSound(SoundList.buttonClick)\r\n            this.sendNotification(BgMediatorConst.OPEN_RULE_PANEL)\r\n        })\r\n        comp.startButton.on(Node.EventType.TOUCH_START, () => {\r\n            // 小游戏中和已经是自动模式不能长按\r\n            if (getBgProxy().getCurrentGame() !== SubGameType.MAIN || getBgProxy().checkAutoLaunch()) return;\r\n            timer = window.setInterval(() => {\r\n                pressTime += 10\r\n                if (pressTime > timeLimit) {\r\n                    window.clearInterval(timer)\r\n                    const presentGame = getBgProxy().getNextGame()\r\n                    if (presentGame === SubGameType.MAIN) {\r\n                        (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\")).triggeAutoLaunch();\r\n                        isLongPress = true\r\n                    } else {\r\n                        isLongPress = false\r\n                    }\r\n                }\r\n            }, 10);\r\n            AudioManager.getInstance().playSound(SoundList.buttonClick);\r\n            if (getBgProxy().getNextGame() == 0) {\r\n                // 按钮状态\r\n                (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).updateScore(0);\r\n            }\r\n        })\r\n        comp.startButton.on(Node.EventType.TOUCH_CANCEL, () => {\r\n            window.clearInterval(timer);\r\n            if (isLongPress) {\r\n                pressTime = 0\r\n                isLongPress = false\r\n                return\r\n            }\r\n        })\r\n        comp.startButton.on(Node.EventType.TOUCH_END, () => {\r\n            window.clearInterval(timer);\r\n            if (isLongPress) {\r\n                pressTime = 0\r\n                isLongPress = false\r\n                return\r\n            }\r\n            const fbp = getBgProxy()\r\n            if (fbp.getAutoLaunchType() !== AutoLaunchType.DISABLE) {\r\n                fbp.setAutoLaunchType(AutoLaunchType.DISABLE)\r\n                return;\r\n            }\r\n            // 禁用状态不能点击发送下注\r\n            if (!fbp.getDisable()) {\r\n                if (this.buttonThrottling) { // 按钮防抖节流\r\n                    this.buttonThrottling = false\r\n                    setTimeout(() => {\r\n                        this.buttonThrottling = true\r\n                    }, 1000)\r\n                    getSocketProxy().sendLaunch();\r\n                }\r\n            } else if (!fbp.checkAutoLaunch()) {\r\n                this.sendNotification(RollerMediatorConst.END_ROLL)\r\n            }\r\n            (<phoenix_SlotBg>this.wrapView.getComponent(\"phoenix_SlotBg\")).triggeAutoLaunch(false);\r\n            pressTime = 0\r\n        })\r\n        // 点击首页按钮\r\n        comp.homeButton.on(Node.EventType.TOUCH_END, () => {\r\n            AudioManager.getInstance().playSound(SoundList.buttonClick);\r\n            const fbp = getBgProxy()\r\n            if (fbp.getDisable() || getBgProxy().checkAutoLaunch()) {\r\n                return\r\n            }\r\n            comp.scheduleOnce(()=>{\r\n                AudioManager.getInstance().closeMusic(() => {\r\n                  global.closeSubGame()\r\n                });\r\n              },1)\r\n        })\r\n        comp.addBet.on(Node.EventType.TOUCH_END, () => {\r\n            const fbp = getBgProxy()\r\n            if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n                return\r\n            }\r\n            AudioManager.getInstance().playSound(SoundList.add_coin)\r\n            this.sendNotification(CommandDefine.BG, { order: \"add\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n            getSocketProxy().calculateTheBalanceStatus()\r\n        })\r\n        comp.subtractBet.on(Node.EventType.TOUCH_END, () => {\r\n            const fbp = getBgProxy()\r\n            if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n                return\r\n            }\r\n            AudioManager.getInstance().playSound(SoundList.reduce_coin)\r\n            this.sendNotification(CommandDefine.BG, { order: \"subtract\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n            getSocketProxy().calculateTheBalanceStatus()\r\n        })\r\n        comp.maxBet.on(Node.EventType.TOUCH_END, () => {\r\n            const fbp = getBgProxy()\r\n            if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n                return\r\n            }\r\n            AudioManager.getInstance().playSound(SoundList.add_coin)\r\n            this.sendNotification(CommandDefine.BG, { order: \"max\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n            getSocketProxy().calculateTheBalanceStatus()\r\n        })\r\n        autoButtonWrap.on(Node.EventType.TOUCH_END, () => {\r\n            autoButtonWrap.active = false;\r\n        })\r\n        autoButtonWrap.children.forEach((child, index) => {\r\n            child.on(Node.EventType.TOUCH_END, () => {\r\n                const fbp = getBgProxy()\r\n                // 必须处于未开启状态才能修改自动执行\r\n                if (fbp.getAutoLaunchType() === AutoLaunchType.DISABLE) {\r\n                    fbp.setAutoLaunchType(index);\r\n                    this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                }\r\n            })\r\n        })\r\n        this.setStopMode(props_toggle_fast.getComponent(Toggle));\r\n        props_toggle_fast.on(Toggle.EventType.TOGGLE, (toggle: Toggle) => {\r\n            this.setStopMode(toggle);\r\n        })\r\n    }\r\n    private setStopMode(toggle: Toggle) {\r\n        getBgProxy().setStopMode(toggle.isChecked ? StopMode.QUEUE_STOP : StopMode.NORMAL);\r\n    }\r\n    // 动画播放一次\r\n    public monitorAnimations(Skeleton, onEndCall?: (entry: sp.spine.TrackEntry) => void,) {\r\n        Skeleton.setCompleteListener((entry: sp.spine.TrackEntry) => {\r\n            onEndCall(entry)\r\n        })\r\n    }\r\n    private changeBg(gameRunner?: SubGameType) {\r\n        (this.wrapView.getComponent(\"phoenix_SlotBg\") as phoenix_SlotBg).setBg(gameRunner === SubGameType.MAIN ? \"bg_1\" : \"bg_2\")\r\n    }\r\n}\r\n"]}