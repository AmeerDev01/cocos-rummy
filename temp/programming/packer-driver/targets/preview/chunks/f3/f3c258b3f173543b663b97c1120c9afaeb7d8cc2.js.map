{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonTiger/store/actions/game.ts"],"names":["reduxAct","default","initState","onlineNum","myInfo","usersInfo","countDown","newBetData","goldData","allWinUsers","cancelBetData","ActionTypes","setMyInfoAction","createAction","DRAGONTIGER_CHANGE_MY_INFO","setUsersInfoAction","DRAGONTIGER_USERS_INFO","setCountDownAction","DRAGONTIGER_COUNT_DOWN","setNewBetDataAction","DRAGONTIGER_NEW_BET_DATA","changeGoldDataAction","DRAGONTIGER_GOLD_DATA","changeAllWinUsersAction","DRAGONTIGER_ALL_WIN_USER","setOnlineNumber","DRAGONTIGER_CHANGE_ONLINE_NUMBER","changeCancelBetDataAction","DRAGONTGER_CANCEL_BET_DATA","resetStore","DRAGONTGER_RESET_STORE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;;;;;;2BAoBIC,S,GAA2B;AACtCC,QAAAA,SAAS,EAAC,IAD4B;AAEtCC,QAAAA,MAAM,EAAE,IAF8B;AAGtCC,QAAAA,SAAS,EAAC,IAH4B;AAItCC,QAAAA,SAAS,EAAE,IAJ2B;AAKtCC,QAAAA,UAAU,EAAE,IAL0B;AAMtCC,QAAAA,QAAQ,EAAE,IAN4B;AAOtCC,QAAAA,WAAW,EAAE,IAPyB;AAQtCC,QAAAA,aAAa,EAAC;AARwB,O;AAUxC;;;6BACYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAaZ;;;AAgBA;iCACaC,e,GAAkB;AAAA;AAAA,gCAASC,YAAT,CAC3BF,WAAW,CAACG,0BADe,EAE1BV,MAAD,IAA6E;AAC3E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAJ0B,C;AAM7B;;;oCACWW,kB,GAAqB;AAAA;AAAA,gCAASF,YAAT,CAG9BF,WAAW,CAACK,sBAHkB,EAI/BX,SAAD,IAAkF;AAC9E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAN6B,C;AAQhC;;;oCACWY,kB,GAAqB;AAAA;AAAA,gCAASJ,YAAT,CAC9BF,WAAW,CAACO,sBADkB,EAE7BZ,SAAD,IAA0E;AACxE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAJ6B,C;;qCAMrBa,mB,GAAsB;AAAA;AAAA,gCAASN,YAAT,CAAsBF,WAAW,CAACS,wBAAlC,EAC9Bb,UAAD,IAA6E;AAC3E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAHkC,C;;sCAItBc,oB,GAAqB;AAAA;AAAA,gCAASR,YAAT,CAAsBF,WAAW,CAACW,qBAAlC,EAC7Bd,QAAD,IAAoE;AACpE,eAAO;AAACA,UAAAA;AAAD,SAAP;AACH,OAHiC,C;;yCAIrBe,uB,GAAwB;AAAA;AAAA,gCAASV,YAAT,CAAsBF,WAAW,CAACa,wBAAlC,EAChCf,WAAD,IAA6E;AAC7E,eAAO;AAACA,UAAAA;AAAD,SAAP;AACC,OAHgC,C;AAIrC;;;iCACagB,e,GAAkB;AAAA;AAAA,gCAASZ,YAAT,CAC3BF,WAAW,CAACe,gCADe,EAGzBvB,SADF,IAEkE;AAChE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAN0B,C;;2CAQlBwB,yB,GAA4B;AAAA;AAAA,gCAASd,YAAT,CAAsBF,WAAW,CAACiB,0BAAlC,EACtClB,aAAD,IAAkF;AAChF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHsC,C;;4BAK5BmB,U,GAAa;AAAA;AAAA,gCAAShB,YAAT,CAAsBF,WAAW,CAACmB,sBAAlC,EACxB,MAAyD;AACvD,eAAO;AAAE5B,UAAAA;AAAF,SAAP;AACD,OAHuB,C","sourcesContent":["import { default as reduxAct } from \"redux-act\";\r\nimport { BetData, HeadType, MemberInfoVo, WinUser } from \"../../type\";\r\n\r\nexport type InitStateType = {\r\n    /**在线人数 */\r\n    onlineNum: number;\r\n    /**当前用户信息 */\r\n    myInfo: HeadType;\r\n      /** 榜上所有用户 */\r\n    usersInfo: MemberInfoVo[];\r\n      /**倒计时 */\r\n    countDown: number;\r\n      /**最新的下注信息 */\r\n    newBetData: BetData,//===> 获取下注返回\r\n    /**区域总值 */\r\n    goldData: object,\r\n    allWinUsers: WinUser[],\r\n        /**下注失败的金币信息 */\r\n    cancelBetData:BetData\r\n}\r\nexport const initState: InitStateType = {\r\n  onlineNum:null,\r\n  myInfo: null,\r\n  usersInfo:null,\r\n  countDown: null,\r\n  newBetData: null,\r\n  goldData: null,\r\n  allWinUsers: null,\r\n  cancelBetData:null,\r\n}\r\n/**必须大写，不然redux-act要自动加序列号 */\r\nexport enum ActionTypes { \r\n  DRAGONTIGER_CHANGE_MY_INFO = \"DRAGONTIGER_CHANGE_MY_INFO\",\r\n  DRAGONTIGER_USERS_INFO = \"DRAGONTIGER_USERS_INFO\",\r\n  DRAGONTIGER_COUNT_DOWN = \"DRAGONTIGER_COUNT_DOWN\",\r\n  DRAGONTIGER_NEW_BET_DATA = \"DRAGONTIGER_NEW_BET_DATA\", \r\n  DRAGONTIGER_GOLD_DATA = \"DRAGONTIGER_GOLD_DATA\",\r\n  DRAGONTIGER_ALL_WIN_USER = \"DRAGONTIGER_ALL_WIN_USER\",\r\n  DRAGONTIGER_CHANGE_ONLINE_NUMBER = 'DRAGONTIGER_CHANGE_ONLINE_NUMBER',\r\n  DRAGONTGER_CANCEL_BET_DATA=\"DRAGONTGER_CANCEL_BET_DATA\",\r\n  DRAGONTGER_RESET_STORE = \"DRAGONTGER_RESET_STORE\",\r\n  \r\n}\r\n\r\n/**定义action的payLoad类型 */\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.DRAGONTIGER_CHANGE_MY_INFO ? { myInfo: HeadType } \r\n  :A extends ActionTypes.DRAGONTIGER_USERS_INFO ? { usersInfo: MemberInfoVo[] }\r\n  : A extends ActionTypes.DRAGONTIGER_COUNT_DOWN ? { countDown: number } \r\n  :A extends ActionTypes.DRAGONTIGER_NEW_BET_DATA ? {  newBetData: BetData } \r\n  : A extends ActionTypes.DRAGONTIGER_GOLD_DATA ? { goldData: object } \r\n  : A extends ActionTypes.DRAGONTIGER_ALL_WIN_USER ? { allWinUsers: WinUser[] } \r\n  :A extends ActionTypes.DRAGONTGER_CANCEL_BET_DATA ? {cancelBetData:BetData}\r\n  \r\n  : A extends ActionTypes.DRAGONTIGER_CHANGE_ONLINE_NUMBER ? { onlineNum: number } \r\n  \r\n  :A extends ActionTypes.DRAGONTGER_RESET_STORE ? { } \r\n  \r\n  : never;\r\n\r\n/**初始化用户信息 */\r\nexport const setMyInfoAction = reduxAct.createAction(\r\n    ActionTypes.DRAGONTIGER_CHANGE_MY_INFO,\r\n    (myInfo: HeadType): ActionPayLoad<ActionTypes.DRAGONTIGER_CHANGE_MY_INFO> => {\r\n      return { myInfo };\r\n    }\r\n);    \r\n  /**初始化榜上用户信息 */\r\nexport const setUsersInfoAction = reduxAct.createAction(\r\n\r\n  \r\n    ActionTypes.DRAGONTIGER_USERS_INFO,\r\n  (usersInfo: MemberInfoVo[]): ActionPayLoad<ActionTypes.DRAGONTIGER_USERS_INFO> => {\r\n      return { usersInfo };\r\n    }\r\n);\r\n  /**设置倒计时时间 */\r\nexport const setCountDownAction = reduxAct.createAction(\r\n    ActionTypes.DRAGONTIGER_COUNT_DOWN,\r\n    (countDown: number): ActionPayLoad<ActionTypes.DRAGONTIGER_COUNT_DOWN> => {\r\n      return { countDown };\r\n    }\r\n);\r\nexport const setNewBetDataAction = reduxAct.createAction(ActionTypes.DRAGONTIGER_NEW_BET_DATA,\r\n    (newBetData:BetData): ActionPayLoad<ActionTypes.DRAGONTIGER_NEW_BET_DATA> => {\r\n      return { newBetData }\r\n})\r\nexport const changeGoldDataAction=reduxAct.createAction(ActionTypes.DRAGONTIGER_GOLD_DATA,\r\n    (goldData:object):ActionPayLoad<ActionTypes.DRAGONTIGER_GOLD_DATA>=>{\r\n    return {goldData}\r\n})\r\nexport const changeAllWinUsersAction=reduxAct.createAction(ActionTypes.DRAGONTIGER_ALL_WIN_USER,\r\n    (allWinUsers:WinUser[]):ActionPayLoad<ActionTypes.DRAGONTIGER_ALL_WIN_USER>=>{\r\n    return {allWinUsers}\r\n    })\r\n/**设置房间在线人数 */\r\nexport const setOnlineNumber = reduxAct.createAction(\r\n    ActionTypes.DRAGONTIGER_CHANGE_ONLINE_NUMBER,\r\n    (\r\n      onlineNum: number\r\n    ): ActionPayLoad<ActionTypes.DRAGONTIGER_CHANGE_ONLINE_NUMBER> => {\r\n      return { onlineNum };\r\n    }\r\n);\r\nexport const changeCancelBetDataAction = reduxAct.createAction(ActionTypes.DRAGONTGER_CANCEL_BET_DATA,\r\n  (cancelBetData:BetData): ActionPayLoad<ActionTypes.DRAGONTGER_CANCEL_BET_DATA> => {\r\n    return { cancelBetData }\r\n  })\r\n\r\nexport const resetStore = reduxAct.createAction(ActionTypes.DRAGONTGER_RESET_STORE,\r\n  (): ActionPayLoad<ActionTypes.DRAGONTGER_RESET_STORE> => {\r\n    return { initState }\r\n  })"]}