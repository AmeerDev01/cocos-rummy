{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/Crash/manager/Crash_DataManager.ts"],"names":["_decorator","UserInfo","Crash_NetMsgDispatcher","ProtocolCode","ccclass","property","Crash_DataManager","getInstance","instance","constructor","userInfo","numberSpriteFrame","crashStageVo","lotteryData","headSpriteFrame","BettingCondition","currentParameters","console","log","init","regNetCallBack","getCurrentParameters","setCurrentParameters","val","setBettingCondition","bl","getBettingCondition","getUserInfo","getCrashStageVo","setHeadSpriteFrame","data","getHeadSpriteFrame","setCrashStageVo","getLotteryData","setNumberSpriteFrame","getNumberSpriteFrame","regCallBack","RES_ROOM_TOTAL_BETS","bettingSituation","RES_TIME_SYNCHRONIZATION","timeSynchronization","RES_LOTTERY_RETURN","lottery","RES_SETTLEMENT_RETURN","settlement","REFRESH_COINS","refreshCoins","args","setRoomInfoVos","setOddsList","list","undefined","setUserInfo","setGold","remNetCallBacks","removeAllProtocolByObj","destroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node,SpriteFrame } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport UserInfo from \"../entity/Crash_Userinfo\";\r\nimport Crash_NetMsgDispatcher from '../net/Crash_NetMsgDispatcher';\r\nimport {ProtocolCode} from \"../net/protocol/ProtocolDef\";\r\n@ccclass('DataManager')\r\nexport class Crash_DataManager {\r\n    private static instance: Crash_DataManager = null;\r\n    userInfo:UserInfo=null\r\n    numberSpriteFrame:SpriteFrame[]=null\r\n    crashStageVo:{gameType: number,seconds: string}=null\r\n    lotteryData:{drawPrizeNum: number,seconds: number}=null\r\n    headSpriteFrame:[]\r\n    BettingCondition:boolean=false\r\n    currentParameters:number=0\r\n    public static getInstance() {\r\n        if(this.instance == null) {\r\n            this.instance = new Crash_DataManager();\r\n        }\r\n        return this.instance;\r\n    }\r\n    constructor() {\r\n        console.log(\"DataManager New!!!!!!!!!!\");\r\n        this.init();\r\n    }\r\n    public init() {\r\n        this.userInfo = new UserInfo();\r\n        this.regNetCallBack();\r\n    }\r\n    getCurrentParameters(){\r\n        return this.currentParameters\r\n    }\r\n    setCurrentParameters(val){\r\n        this.currentParameters=val\r\n    }\r\n    setBettingCondition(bl){\r\n        this.BettingCondition=bl\r\n    }\r\n    getBettingCondition(bl){\r\n        this.BettingCondition=bl\r\n    }\r\n    getUserInfo(): UserInfo {\r\n        return this.userInfo;\r\n    }\r\n    getCrashStageVo(){\r\n        return this.crashStageVo\r\n    }\r\n    setHeadSpriteFrame(data){\r\n        this.headSpriteFrame=data\r\n    }\r\n    getHeadSpriteFrame(){\r\n        return  this.headSpriteFrame\r\n    }\r\n    setCrashStageVo(data:any){\r\n        this.crashStageVo=data\r\n    }\r\n    getLotteryData(){\r\n        return this.lotteryData\r\n    }\r\n    setNumberSpriteFrame(data:any){\r\n        this.numberSpriteFrame=data\r\n    }\r\n    getNumberSpriteFrame(){\r\n        return  this.numberSpriteFrame\r\n    }\r\n    regNetCallBack(){\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.RES_ROOM_TOTAL_BETS, this, this.bettingSituation);\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.RES_TIME_SYNCHRONIZATION, this, this.timeSynchronization);\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.RES_LOTTERY_RETURN, this, this.lottery);\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.RES_SETTLEMENT_RETURN, this, this.settlement);\r\n        Crash_NetMsgDispatcher.getInstance().regCallBack(ProtocolCode.REFRESH_COINS, this, this.refreshCoins);\r\n    }\r\n    bettingSituation(bl, data, args){\r\n        console.log(data)\r\n        this.getUserInfo().setRoomInfoVos(data.data)\r\n    }\r\n    timeSynchronization(bl, data, args){\r\n       this.crashStageVo=data.crashStageVo\r\n       this.getUserInfo().setOddsList(data.crashStageVo.list)\r\n    }\r\n    lottery(bl, data, args){\r\n        this.lotteryData=data.data\r\n    }\r\n    settlement(bl, data, args){\r\n        if(data.data!==undefined){\r\n            console.log(data.data[0])\r\n            this.getUserInfo().setUserInfo(data.data[0])\r\n        }\r\n    }\r\n    refreshCoins(bl, data, args){\r\n        this.getUserInfo().setGold(data.data)\r\n    }\r\n    private remNetCallBacks() {\r\n        Crash_NetMsgDispatcher.getInstance().removeAllProtocolByObj(this);\r\n    }\r\n    public destroy() {\r\n        if(this.userInfo) {\r\n            this.userInfo = null;\r\n        }\r\n        this.remNetCallBacks();\r\n    }\r\n}\r\n\r\n\r\n"]}