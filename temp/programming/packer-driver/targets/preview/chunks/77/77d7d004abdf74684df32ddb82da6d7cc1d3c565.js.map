{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/socketConnect.ts"],"names":["WebSocketToDo","listenerFactoy","initConfig","subGameList","config","addToastAction","setLoadingAction","getStore","global","lang","SKT_MAG_TYPE","sktMsgListener","sktInstance","dispatch","Promise","resolve","reject","then","gameId","websocketUrl","find","i","init","sktCode","onMessage","code","data","error","dispath","onDataFail","content","write","k","WebSocketModule","socketConnectDateFail","placeStr","isShow","onAnthFail","socketConnectAuthFaild","closeSubGame","confirmContent","onDisconnect","socketConnectDisconnect","onReConnect","times","initSocket","d","catch","e","hallDispatch","InitGameModule","GameBoardInit","removeInstance","window","setTimeout","isPre","ConfigGameFaild","removeAll","close"],"mappings":"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","sourcesContent":["import { default as redux } from \"redux\"\r\nimport WebSocketToDo from \"../../common/WebSocketToDo\"\r\nimport { listenerFactoy } from \"../../common/listenerFactoy\"\r\nimport { initConfig, subGameList } from \"../../hall/config\"\r\nimport config from \"./config\"\r\nimport { ToastType, addToastAction, setLoadingAction } from \"../../hall/store/actions/baseBoard\"\r\nimport store, { getStore } from \"./store\"\r\nimport { global, lang } from \"../../hall\"\r\n\r\nexport enum SKT_MAG_TYPE {\r\n  /**心跳 */\r\n  HEART_BEAT = \"1\",\r\n  /**认证 */\r\n  AUTH = \"2\",\r\n  /**启动下注 */\r\n  LAUNCHER_BET = \"501\",\r\n  /**JACKPOT */\r\n  JACKPOT = \"7\",\r\n  /**更新金币 */\r\n  BALANCE_UPDATE = \"10\"\r\n}\r\n\r\nexport const sktMsgListener = listenerFactoy<SKT_MAG_TYPE>()\r\n\r\nexport let sktInstance: WebSocketToDo<SKT_MAG_TYPE> = null\r\nexport default () => {\r\n  const dispatch = getStore().dispatch\r\n  return new Promise((resolve, reject) => {\r\n    if (sktInstance) {\r\n      resolve(sktInstance)\r\n    } else {\r\n      sktInstance = new WebSocketToDo<SKT_MAG_TYPE>()\r\n      initConfig().then(() => {\r\n        const { gameId, websocketUrl } = subGameList.find(i => i.gameId === config.gameId)\r\n        sktInstance.init(config.sktCode, gameId, websocketUrl, {\r\n          // sktInstance.init(config.sktCode, 10, \"ws://192.168.110.243:18004/ws\", {\r\n          onMessage: (code, data, error) => {\r\n            sktMsgListener.dispath(code, data, error)\r\n          },\r\n          onDataFail: (data: any) => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDateFail, {}, { placeStr: \"连接失败\" }) }))\r\n            dispatch(setLoadingAction({ isShow: false }))\r\n          },\r\n          onAnthFail: () => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectAuthFaild, {}, { placeStr: \"Auth Faild\" }) }))\r\n            global.closeSubGame({\r\n              confirmContent: lang.write(k => k.WebSocketModule.socketConnectAuthFaild)\r\n            });\r\n          },\r\n          onDisconnect: (data: any) => {\r\n            // dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDisconnect, {}, { placeStr: \"socket disconnect\" }),type: ToastType.ERROR }))\r\n            // dispatch(setLoadingAction({ isShow: false }))\r\n            global.closeSubGame({ confirmContent: lang.write(k => k.WebSocketModule.socketConnectDisconnect) })\r\n          },\r\n          onReConnect: (times) => {\r\n            if (times >= 5) {\r\n              \r\n              global.closeSubGame({\r\n                confirmContent: lang.write(k => k.WebSocketModule.socketConnectDisconnect),\r\n              });\r\n              // removeInstance()\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          }\r\n        })\r\n        sktInstance.initSocket().then((d) => {\r\n          \r\n          resolve(sktInstance)\r\n        }).catch(e => {\r\n          global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"游戏初始化失败\" }) }))\r\n          removeInstance()\r\n          window.setTimeout(() => {\r\n            global.closeSubGame({ isPre: true })\r\n          }, 1500)\r\n        })\r\n      }).catch(e => {\r\n        global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"游戏初始化失败\" }) }))\r\n        global.closeSubGame({\r\n          confirmContent: lang.write(k => k.WebSocketModule.ConfigGameFaild)\r\n        } );\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport const removeInstance = () => {\r\n  sktMsgListener.removeAll()\r\n  sktInstance.close()\r\n  sktInstance = null\r\n}"]}