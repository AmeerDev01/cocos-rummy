{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/domino/viewModel/OpponentViewModel.ts"],"names":["ViewModel","StoreInject","getStore","PlayerSatus","OpponentViewModel","constructor","seatIndex","begin","initSeatIndex","index","connect","inject","state","player","deskData","playerMap","deskStatus","statue","currActiveSeatIndex","outCountdown","newCardItem","uid","head","nickName","glodAmount","gameData","WAITING","isMaster","remainCardCount","cardIList","noWayCardNumber","isActive","winloss"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGOA,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AACXC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;AAGHC,MAAAA,iB,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,iBADN;AAAA;AAAA,kCAC2E;AACzEC,QAAAA,WAAW,GAAG;AACZ,gBAAM,iBAAN;AADY,eAKNC,SALM,GAKc,CAAC,CALf;AAEb;;AAESC,QAAAA,KAAK,GAAG,CAAG;;AAEdC,QAAAA,aAAa,CAACC,KAAD,EAAgB;AAClC,eAAKH,SAAL,GAAiBG,KAAjB;AACA,iBAAO,IAAP;AACD;;AAEMC,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,gBAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeC,SAAf,CAAyB,KAAKT,SAA9B,CAAf;AACA,mBAAO;AACLU,cAAAA,UAAU,EAAEJ,KAAK,CAACE,QAAN,CAAeG,MADtB;AAELC,cAAAA,mBAAmB,EAAEN,KAAK,CAACE,QAAN,CAAeI,mBAF/B;AAGLC,cAAAA,YAAY,EAAEP,KAAK,CAACE,QAAN,CAAeK,YAHxB;AAILC,cAAAA,WAAW,EAAER,KAAK,CAACE,QAAN,CAAeM,WAJvB;AAKLC,cAAAA,GAAG,EAAER,MAAM,GAAGA,MAAM,CAACQ,GAAV,GAAgB,EALtB;;AAML;AACAC,cAAAA,IAAI,EAAET,MAAM,GAAGA,MAAM,CAACS,IAAV,GAAiB,CAPxB;AAQLC,cAAAA,QAAQ,EAAEV,MAAM,GAAGA,MAAM,CAACU,QAAV,GAAqB,EARhC;AASLC,cAAAA,UAAU,EAAEX,MAAM,GAAGA,MAAM,CAACW,UAAV,GAAuB,CATpC;;AAUL;AACAZ,cAAAA,KAAK,EAAEC,MAAM,GAAGA,MAAM,CAACY,QAAP,CAAgBb,KAAnB,GAA2B;AAAA;AAAA,8CAAYc,OAX/C;;AAYL;AACAC,cAAAA,QAAQ,EAAEd,MAAM,GAAGA,MAAM,CAACY,QAAP,CAAgBE,QAAnB,GAA8B,KAbzC;;AAcL;AACAC,cAAAA,eAAe,EAAEf,MAAM,GAAGA,MAAM,CAACY,QAAP,CAAgBG,eAAnB,GAAqC,CAfvD;;AAgBL;AACA;;AACA;AACAC,cAAAA,SAAS,EAAEhB,MAAM,GAAGA,MAAM,CAACY,QAAP,CAAgBI,SAAnB,GAA+B,EAnB3C;;AAoBL;AACAC,cAAAA,eAAe,EAAEjB,MAAM,GAAGA,MAAM,CAACY,QAAP,CAAgBK,eAAnB,GAAqC,EArBvD;AAsBLC,cAAAA,QAAQ,EAAE,KAtBL;AAuBLzB,cAAAA,SAAS,EAAE,KAAKA,SAvBX;AAwBL0B,cAAAA,OAAO,EAAEnB,MAAM,GAAGA,MAAM,CAACmB,OAAV,GAAoB;AAxB9B,aAAP;AA0BD,WA5BD;AA6BA,iBAAO,IAAP;AACD;;AA3CwE,O;;yBA8C5D5B,iB","sourcesContent":["import { Node } from \"cc\"\r\nimport { Domino_Opponent, IProps, IEvent } from \"../components/Domino_Opponent\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { getStore } from \"../store\"\r\nimport { PlayerSatus } from \"../type\"\r\n\r\n@StoreInject(getStore())\r\nclass OpponentViewModel extends ViewModel<Domino_Opponent, IProps, IEvent> {\r\n  constructor() {\r\n    super('Domino_Opponent')\r\n  }\r\n\r\n  protected begin() { }\r\n  private seatIndex: number = -1\r\n  public initSeatIndex(index: number) {\r\n    this.seatIndex = index;\r\n    return this;\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      const player = state.deskData.playerMap[this.seatIndex]\r\n      return {\r\n        deskStatus: state.deskData.statue,\r\n        currActiveSeatIndex: state.deskData.currActiveSeatIndex,\r\n        outCountdown: state.deskData.outCountdown,\r\n        newCardItem: state.deskData.newCardItem,\r\n        uid: player ? player.uid : '',\r\n        /**头像序号 */\r\n        head: player ? player.head : 0,\r\n        nickName: player ? player.nickName : '',\r\n        glodAmount: player ? player.glodAmount : 0,\r\n        /**状态 */\r\n        state: player ? player.gameData.state : PlayerSatus.WAITING,\r\n        /**是否是庄家 */\r\n        isMaster: player ? player.gameData.isMaster : false,\r\n        /**剩余牌数量 */\r\n        remainCardCount: player ? player.gameData.remainCardCount : 0,\r\n        /**倒计时 */\r\n        // countDownTime: player ? player.gameData.countDownTime : 0,\r\n        /**手牌组，正常情况下，只有玩家自身才有 */\r\n        cardIList: player ? player.gameData.cardIList : [],\r\n        /**跟不上的牌点数 */\r\n        noWayCardNumber: player ? player.gameData.noWayCardNumber : [],\r\n        isActive: false,\r\n        seatIndex: this.seatIndex,\r\n        winloss: player ? player.winloss : 0,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default OpponentViewModel"]}