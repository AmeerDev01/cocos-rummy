{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandarQiuQiu/store/actions/pokerDetail.ts"],"names":["reduxAct","default","initState","blueCard","redCard","twinNum","winArea","ActionTypes","changeBlueCardAction","createAction","BANDARQIUQIU_BLUE_CARD","changeRedCardAction","BANDARQIUQIU_RED_CARD","changeTwinNumAction","BANDARQIUQIU_TWIN_NUM","changeWinAreaAction","BANDARQIUQIU_WIN_AREA"],"mappings":";;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;;;;;;2BAaIC,S,GAA2B;AACtCC,QAAAA,QAAQ,EAAE,IAD4B;AAEtCC,QAAAA,OAAO,EAAE,IAF6B;AAGtCC,QAAAA,OAAO,EAAC,IAH8B;AAItCC,QAAAA,OAAO,EAAE;AAJ6B,O;AAQxC;;;6BAEYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAQZ;;;AAQA;sCACaC,oB,GAAuB;AAAA;AAAA,gCAASC,YAAT,CAAsBF,WAAW,CAACG,sBAAlC,EACjCP,QAAD,IAA2E;AACzE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHiC,C;AAIpC;;;qCACaQ,mB,GAAsB;AAAA;AAAA,gCAASF,YAAT,CAAsBF,WAAW,CAACK,qBAAlC,EAChCR,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHgC,C;AAIjC;;;qCACWS,mB,GAAsB;AAAA;AAAA,gCAASJ,YAAT,CAAsBF,WAAW,CAACO,qBAAlC,EAChCT,OAAD,IAAwE;AACtE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHgC,C;AAInC;;;qCACaU,mB,GAAsB;AAAA;AAAA,gCAASN,YAAT,CAAsBF,WAAW,CAACS,qBAAlC,EAChCV,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAHkC,C","sourcesContent":["import { default as reduxAct } from \"redux-act\";\r\nimport { TwinNum } from \"../../type\";\r\n\r\n\r\nexport type InitStateType = {\r\n  blueCard: number[],\r\n  redCard: number[],\r\n  /**红蓝方的牌点数*/\r\n  twinNum:TwinNum,\r\n    /**赢的区域 */\r\n  winArea: number[];\r\n};\r\n\r\nexport const initState: InitStateType = {\r\n  blueCard: null,\r\n  redCard: null,\r\n  twinNum:null,\r\n  winArea: null,\r\n    \r\n};\r\n\r\n/**必须大写，不然redux-act要自动加序列号 */\r\n\r\nexport enum ActionTypes {\r\n  BANDARQIUQIU_BLUE_CARD = \"BANDARQIUQIU_BLUE_CARD\",\r\n  BANDARQIUQIU_RED_CARD = \"BANDARQIUQIU_RED_CARD\",\r\n  BANDARQIUQIU_TWIN_NUM = \"BANDARQIUQIU_TWIN_NUM\",\r\n  BANDARQIUQIU_WIN_AREA = \"BANDARQIUQIU_WIN_AREA\",\r\n    \r\n}\r\n\r\n/**定义action的payLoad类型 */\r\n\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.BANDARQIUQIU_BLUE_CARD ? { blueCard: number[] } :\r\n  A extends ActionTypes.BANDARQIUQIU_RED_CARD ? { redCard: number[] } :\r\n  A extends ActionTypes.BANDARQIUQIU_TWIN_NUM ? { twinNum: TwinNum } :\r\n  A extends ActionTypes.BANDARQIUQIU_WIN_AREA ? { winArea: number[] } :never;\r\n\r\n/**改变蓝方的牌 */\r\nexport const changeBlueCardAction = reduxAct.createAction(ActionTypes.BANDARQIUQIU_BLUE_CARD,\r\n  (blueCard: number[]): ActionPayLoad<ActionTypes.BANDARQIUQIU_BLUE_CARD> => {\r\n    return { blueCard }\r\n  })\r\n/**改变红方的牌 */\r\nexport const changeRedCardAction = reduxAct.createAction(ActionTypes.BANDARQIUQIU_RED_CARD,\r\n  (redCard: number[]): ActionPayLoad<ActionTypes.BANDARQIUQIU_RED_CARD> => {\r\n    return { redCard }\r\n  })\r\n  /**改变牌的点数 */\r\nexport const changeTwinNumAction = reduxAct.createAction(ActionTypes.BANDARQIUQIU_TWIN_NUM,\r\n  (twinNum: TwinNum): ActionPayLoad<ActionTypes.BANDARQIUQIU_TWIN_NUM> => {\r\n    return { twinNum }\r\n  })\r\n/**赢的区域 */\r\nexport const changeWinAreaAction = reduxAct.createAction(ActionTypes.BANDARQIUQIU_WIN_AREA,\r\n  (winArea: number[]): ActionPayLoad<ActionTypes.BANDARQIUQIU_WIN_AREA> => {\r\n    return { winArea }\r\n})\r\n\r\n\r\n"]}