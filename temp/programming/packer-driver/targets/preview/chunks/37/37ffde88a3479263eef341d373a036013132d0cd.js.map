{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenixV2/socketConnect.ts"],"names":["WebSocketToDo","listenerFactoy","initConfig","subGameList","config","ToastType","addToastAction","setLoadingAction","getStore","global","lang","SKT_MAG_TYPE","sktMsgListener","sktInstance","dispatch","Promise","resolve","reject","then","gameId","websocketUrl","find","i","init","sktCode","onMessage","code","data","error","dispath","onDataFail","LAUNCH","closeSubGame","confirmContent","write","k","WebSocketModule","socketConnectDateFail","content","placeStr","isShow","onAnthFail","reason","socketConnectAuthFaild","onDisconnect","socketConnectDisconnect","type","ERROR","onReConnect","times","maxReConnectTimes","initSocket","catch","e","hallDispatch","InitGameModule","GameBoardInit","removeInstance","window","setTimeout","isPre","ConfigGameFaild","removeAll","close"],"mappings":"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","sourcesContent":["import { default as redux } from \"redux\"\r\nimport WebSocketToDo from \"../../common/WebSocketToDo\"\r\nimport { listenerFactoy } from \"../../common/listenerFactoy\"\r\nimport { initConfig, subGameList } from \"../../hall/config\"\r\nimport config from \"./config\"\r\nimport { ToastType, addToastAction, setLoadingAction } from \"../../hall/store/actions/baseBoard\"\r\nimport store, { getStore } from \"./store\"\r\nimport { global, lang } from \"../../hall\"\r\n\r\nexport enum SKT_MAG_TYPE {\r\n  /**心跳 */\r\n  HEART_BEAT = \"1\",\r\n  /**认证 */\r\n  AUTH = \"2\",\r\n  /**排行榜 */\r\n  JACKPOT = \"8\",\r\n  /**总数 */\r\n  JACKPOT_TOTAL = \"7\",\r\n  /**退出 */\r\n  EXIT = \"3\",\r\n  /**启动 */\r\n  LAUNCH = \"501\",\r\n  /**通知刷新金币 */\r\n  REFRESHCOINS = \"10\",\r\n  /**清退房间 */\r\n  VACATETHEROOM = \"3\"\r\n}\r\n\r\nexport const sktMsgListener = listenerFactoy<SKT_MAG_TYPE>()\r\n\r\nexport let sktInstance: WebSocketToDo<SKT_MAG_TYPE> = null\r\nexport default () => {\r\n  const dispatch = getStore().dispatch\r\n  return new Promise((resolve, reject) => {\r\n    if (sktInstance) {\r\n      resolve(sktInstance)\r\n    } else {\r\n      sktInstance = new WebSocketToDo<SKT_MAG_TYPE>()\r\n      initConfig().then(() => {\r\n        const { gameId, websocketUrl } = subGameList.find(i => i.gameId === config.gameId)\r\n        sktInstance.init(config.sktCode, gameId, websocketUrl, {\r\n          onMessage: (code, data, error) => {\r\n            sktMsgListener.dispath(code, data, error)\r\n          },\r\n          onDataFail: (code: any) => {\r\n            if (code === SKT_MAG_TYPE.LAUNCH) {\r\n              global.closeSubGame({\r\n                confirmContent: (lang.write(k => k.WebSocketModule.socketConnectDateFail) + '-' + code)\r\n              })\r\n            } else {\r\n              dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDateFail, {}, { placeStr: \"连接失败\" }) + '-' + code }))\r\n              dispatch(setLoadingAction({ isShow: false }))\r\n            }\r\n          },\r\n          onAnthFail: (reason) => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectAuthFaild, {}, { placeStr: \"Auth Faild\" }) }))\r\n            global.closeSubGame({ confirmContent: reason || lang.write(k => k.WebSocketModule.socketConnectAuthFaild) })\r\n          },\r\n          onDisconnect: (data: any) => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDisconnect, {}, { placeStr: \"socket disconnect\" }), type: ToastType.ERROR }))\r\n            dispatch(setLoadingAction({ isShow: false }))\r\n\r\n          },\r\n          onReConnect: (times) => {\r\n            if (times > sktInstance.maxReConnectTimes) {\r\n              return false\r\n            }\r\n            return true\r\n          }\r\n        })\r\n        sktInstance.initSocket().then(() => {\r\n          resolve(sktInstance)\r\n        }).catch(e => {\r\n          global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"游戏初始化失败\" }) }))\r\n          removeInstance()\r\n          window.setTimeout(() => {\r\n            global.closeSubGame({ isPre: true, confirmContent: lang.write(k => k.InitGameModule.GameBoardInit) })\r\n          }, 1500)\r\n        })\r\n      }).catch(e => {\r\n        global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"游戏初始化失败\" }) }))\r\n        global.closeSubGame({\r\n          confirmContent: lang.write(k => k.WebSocketModule.ConfigGameFaild)\r\n        });\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport const removeInstance = () => {\r\n  sktMsgListener.removeAll()\r\n  sktInstance.close()\r\n  sktInstance = null\r\n}"]}