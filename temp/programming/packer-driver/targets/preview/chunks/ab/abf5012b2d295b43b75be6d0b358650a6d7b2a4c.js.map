{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/store/reducer/game.ts"],"names":["instantiate","log","ActionTypes","initState","reduxAct","default","config","copy","createReducer","YXX_INIT_SEATS","state","payload","seats","YXX_CHANGE_ONLINE_NUMBER","onlineNumber","YXX_CHANGE_SEAT","myHead","headType","index","gameOption","seatNumber","userId","YXX_CHANGE_ME_GOLD","gold","YXX_CHANGE_JOIN_GAME","has","YXX_CHANGE_OTHER_JOIN_GAME","YXX_CHANGE_SEAT_BET","forEach","v","betData","betAmount","isMyBet","preBet","YXX_CHANGE_QUIT_GAME","powers","YXX_CHANGE_CLEAR_DATA","winloss","YXX_CHANGE_SEAT_WINLOSS","YXX_UPDATE_POWER","YXX_GAME_CANCEL_BET","cancelAmount"],"mappings":"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","sourcesContent":["import { instantiate, log } from \"cc\";\r\nimport { ActionTypes, ActionPayLoad, InitStateType, initState } from \"../actions/game\";\r\nimport { default as reduxAct } from 'redux-act'\r\nimport config from \"../../config\";\r\nimport { copy } from \"../../../../utils/tool\";\r\n\r\nexport default reduxAct.createReducer<InitStateType>({\r\n  [ActionTypes.YXX_INIT_SEATS]: (state, payload: ActionPayLoad<ActionTypes.YXX_INIT_SEATS>): InitStateType => {\r\n    const seats = payload.seats;\r\n    return {\r\n      ...state,\r\n      seats\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_ONLINE_NUMBER]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_ONLINE_NUMBER>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      onlineNumber: payload.onlineNumber\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_SEAT]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_SEAT>): InitStateType => {\r\n    const seats = copy(state.seats);\r\n    let myHead = copy(state.myHead);\r\n    if (payload.headType.index < config.gameOption.seatNumber) {\r\n      seats[payload.headType.index] = payload.headType;\r\n    }\r\n    if (myHead && myHead.userId === payload.headType.userId) {\r\n      myHead = copy(payload.headType);\r\n    }\r\n    // log(\"YXX_CHANGE_SEAT ,\", payload.headType.index, _state.seats[payload.headType.index].joggle);\r\n    return {\r\n      ...state,\r\n      seats,\r\n      myHead\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_ME_GOLD]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_ME_GOLD>): InitStateType => {\r\n    const myHead = instantiate(state.myHead)\r\n    myHead.gold = payload.gold;\r\n    return {\r\n      ...state,\r\n      myHead\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_JOIN_GAME]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_JOIN_GAME>): InitStateType => {\r\n    const seats = copy(state.seats);\r\n    if (payload.headType.index < config.gameOption.seatNumber) {\r\n      const headType = seats[payload.headType.index];\r\n      if (headType.has) {\r\n        log(` ${headType.userId} 加入 到 ${headType.index} 座位上有人了，之前的人是 ${headType.has}`);\r\n        return { ...state }\r\n      }\r\n      payload.headType.has = true;\r\n      seats[payload.headType.index] = payload.headType;\r\n    }\r\n    const myHead = { ...payload.headType };\r\n    return {\r\n      ...state,\r\n      seats,\r\n      myHead\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_OTHER_JOIN_GAME]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_OTHER_JOIN_GAME>): InitStateType => {\r\n    const seats = copy(state.seats);\r\n    if (payload.headType.index < config.gameOption.seatNumber) {\r\n      const headType = seats[payload.headType.index];\r\n      if (headType.has) {\r\n        log(` ${headType.userId} 加入 到 ${headType.index} 座位上有人了，之前的人是 ${headType.has}`);\r\n        return { ...state }\r\n      }\r\n      payload.headType.has = true;\r\n      seats[payload.headType.index] = payload.headType;\r\n    }\r\n    const onlineNumber = state.onlineNumber + 1;\r\n    return {\r\n      ...state,\r\n      seats,\r\n      onlineNumber\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_SEAT_BET]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_SEAT_BET>): InitStateType => {\r\n    // const _state = instantiate(state)\r\n    const seats = copy(state.seats);\r\n    seats.forEach(v => {\r\n      if (v.userId === payload.betData.userId) {\r\n        v.gold -= payload.betData.betAmount;\r\n        v.betAmount += payload.betData.betAmount;\r\n      }\r\n    })\r\n\r\n    const myHead = copy(state.myHead);\r\n    if (myHead && payload.betData.isMyBet) {\r\n      // 金币变化会通过服务器推送10消息来改变，这里不做处理\r\n      // 2023-11-21 避免感觉卡顿，下注之后等服务器返回数据之后再执行动画，前端先做下注动画，如果下注之后前端再把下注金额加上去\r\n      config.preBet && (myHead.gold -= payload.betData.betAmount);\r\n      myHead.betAmount += payload.betData.betAmount;\r\n    }\r\n\r\n    // console.log('YXX_CHANGE_SEAT_BET', _state.myHead.gold, payload.betData.betAmount)\r\n\r\n    return {\r\n      ...state,\r\n      seats,\r\n      myHead\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_QUIT_GAME]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_QUIT_GAME>): InitStateType => {\r\n    const myHead = null;\r\n    const onlineNumber = 0;\r\n    const powers = [];\r\n    return {\r\n      ...state,\r\n      myHead,\r\n      onlineNumber,\r\n      powers,\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_CLEAR_DATA]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_CLEAR_DATA>): InitStateType => {\r\n    const seats = copy(state.seats);\r\n    seats.forEach(v => {\r\n      v.betAmount = 0;\r\n      v.winloss = 0;\r\n    })\r\n    let myHead;\r\n    if (state.myHead) {\r\n      myHead = copy(state.myHead);\r\n      myHead.winloss = 0;\r\n      myHead.betAmount = 0;\r\n    }\r\n    return {\r\n      ...state,\r\n      seats,\r\n      myHead\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CHANGE_SEAT_WINLOSS]: (state, payload: ActionPayLoad<ActionTypes.YXX_CHANGE_SEAT_WINLOSS>): InitStateType => {\r\n    const seats = copy(state.seats);\r\n    if (payload.index < config.gameOption.seatNumber) {\r\n      seats[payload.index].winloss = payload.winloss;\r\n      seats[payload.index].gold = payload.gold;\r\n    }\r\n    return {\r\n      ...state,\r\n      seats\r\n    }\r\n  },\r\n  [ActionTypes.YXX_UPDATE_POWER]: (state, payload: ActionPayLoad<ActionTypes.YXX_UPDATE_POWER>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      powers: payload.powers\r\n    }\r\n  },\r\n  [ActionTypes.YXX_GAME_CANCEL_BET]: (state, payload: ActionPayLoad<ActionTypes.YXX_GAME_CANCEL_BET>): InitStateType => {\r\n    const seats = copy(state.seats);\r\n    seats.forEach(v => {\r\n      if (state.myHead && v.userId === state.myHead.userId) {\r\n        v.gold += payload.cancelAmount;\r\n        v.betAmount -= payload.cancelAmount;\r\n      }\r\n    })\r\n\r\n    let myHead;\r\n    if (state.myHead) {\r\n      myHead = copy(state.myHead);\r\n      // _state.myHead.gold += payload.cancelAmount;\r\n      myHead.betAmount -= payload.cancelAmount;\r\n    }\r\n    return {\r\n      ...state,\r\n      myHead,\r\n      seats\r\n    }\r\n  },\r\n}, initState);"]}