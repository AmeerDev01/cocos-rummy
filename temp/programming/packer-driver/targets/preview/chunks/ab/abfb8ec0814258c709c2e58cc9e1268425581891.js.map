{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/node_modules/crypt/crypt.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","base64map","crypt","rotl","n","b","rotr","endian","constructor","Number","i","length","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","toString","join","hexToBytes","c","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","replace","imod4","indexOf","pow","_cjsExports"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n (function() {\n   var base64map\n       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n   crypt = {\n     // Bit-wise rotation left\n     rotl: function(n, b) {\n       return (n << b) | (n >>> (32 - b));\n     },\n\n     // Bit-wise rotation right\n     rotr: function(n, b) {\n       return (n << (32 - b)) | (n >>> b);\n     },\n\n     // Swap big-endian to little-endian and vice versa\n     endian: function(n) {\n       // If number given, swap endian\n       if (n.constructor == Number) {\n         return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n       }\n\n       // Else, assume array and swap all items\n       for (var i = 0; i < n.length; i++)\n         n[i] = crypt.endian(n[i]);\n       return n;\n     },\n\n     // Generate an array of any length of random bytes\n     randomBytes: function(n) {\n       for (var bytes = []; n > 0; n--)\n         bytes.push(Math.floor(Math.random() * 256));\n       return bytes;\n     },\n\n     // Convert a byte array to big-endian 32-bit words\n     bytesToWords: function(bytes) {\n       for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n         words[b >>> 5] |= bytes[i] << (24 - b % 32);\n       return words;\n     },\n\n     // Convert big-endian 32-bit words to a byte array\n     wordsToBytes: function(words) {\n       for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n         bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n       return bytes;\n     },\n\n     // Convert a byte array to a hex string\n     bytesToHex: function(bytes) {\n       for (var hex = [], i = 0; i < bytes.length; i++) {\n         hex.push((bytes[i] >>> 4).toString(16));\n         hex.push((bytes[i] & 0xF).toString(16));\n       }\n       return hex.join('');\n     },\n\n     // Convert a hex string to a byte array\n     hexToBytes: function(hex) {\n       for (var bytes = [], c = 0; c < hex.length; c += 2)\n         bytes.push(parseInt(hex.substr(c, 2), 16));\n       return bytes;\n     },\n\n     // Convert a byte array to a base-64 string\n     bytesToBase64: function(bytes) {\n       for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n         var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n         for (var j = 0; j < 4; j++)\n           if (i * 8 + j * 6 <= bytes.length * 8)\n             base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n           else\n             base64.push('=');\n       }\n       return base64.join('');\n     },\n\n     // Convert a base-64 string to a byte array\n     base64ToBytes: function(base64) {\n       // Remove non-base-64 characters\n       base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n       for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n           imod4 = ++i % 4) {\n         if (imod4 == 0) continue;\n         bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n             & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n             | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n       }\n       return bytes;\n     }\n   };\n\n   module.exports = crypt;\n })();\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}