{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth/Slot/Mediator/RollerMediator.ts"],"names":["RollerMediator","find","Node","Prefab","CommandDefine","PrefabDefine","BaseMediator","BgMediatorConst","BgCommandConst","getBgProxy","getSocketProxy","goldState","config","ApplicationGlobal","TaskScheduler","Task","ROLL_TIME","RollerMediatorConst","constructor","mediatorName","viewComponent","taskScheduler","sourceMap","key","path","SLOT_PANEL","sourceType","source","stopRollHandle","stopTimeId","listNotificationConst","name","INIT_ROLLER_PANEL","handler","notification","init","window","setTimeout","sendNotification","BG","AUTO_LAUNCH","REMOVE_THECHEST_LAYER","iconStay","getBody","rollerComp","wrapView","getChildByName","getComponent","togglesALLLayer","INITDOCKIOCN","dockIocn","iconDock","BEGIN_ROLL","stopIndex","targetList","startAllRoll","isSpeed","setDisable","stopQueue","clearStatus","console","log","i","flickerFn","forEach","item","iconFlicker","length","done","flashLine","res","index","task","joinqQueue","order","SHOW_DIALOG_WIN","NUMBEROFDISPLAYS","keepTime","getIsChangeGameRunning","GAME_TYPE_CHANGE","TOGGLETHESTARTBUTTON","state","autoLaunch","getTransferGameInfo","getIconStay","isManualStop","undefined","stopAllRoll","UPDATE_USER_GOLD","OLD_GOLD","UPDATE_BTN_LABEL","frequency","getNumberOfRounds","UPDATE_CURRENT_SCORE","END_ROLL","clearTimeout","UPDATE_JACKPOT","baseBetAmount","lineCount","components","slotPanel","setWinningMultiplier","mini","winning","maxRate","major","setGod_MAJOR","UPDATE_JACKPOT_TOTAL","total","set_jack_total","UNINSTALL_ROLLER_PANEL","uninstall","mainPrefabSource","isFlickerDone","getSource","mainPanel","addChild","listenerEvent","btn_jackPot","on","EventType","TOUCH_END","HANDOFF_JACKPOT","fbp"],"mappings":"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","sourcesContent":["import {find, Node, Prefab} from \"cc\";\r\nimport {INotification} from \"../../Framework/interfaces/INotification\";\r\nimport {CommandDefine} from \"../Const/CommandDefine\";\r\nimport {PrefabDefine} from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\";\r\nimport {IlistTypeHander} from \"../types/IlistTypeHander\";\r\nimport {ISourceFile} from \"../types/ISourceFile\";\r\nimport {GodWealth_RollerPanel} from \"../Component/GodWealth_RollerPanel\";\r\nimport {GodWealth_SlotPanel} from \"../Component/GodWealth_SlotPanel\";\r\nimport {BgMediatorConst} from \"./BgMediator\";\r\nimport {BgCommandConst} from \"../Command/BgCommand\";\r\nimport {getBgProxy, getSocketProxy} from \"../GodWealth_utils\";\r\nimport {goldState} from \"../Proxy/SocketProxy\";\r\nimport config from \"../GodWealth_config\";\r\nimport {ApplicationGlobal} from \"../Const/ApplicationGlobal\";\r\nimport {AudioManager, SoundList} from \"../Managr/AudioManager\";\r\nimport TaskScheduler, {Task} from \"../../../../utils/TaskScheduler\";\r\nimport { AutoLaunchType } from \"../Repositories/BgRepository\";\r\nimport { ROLL_TIME } from \"../../../../utils/SlotSpeedConfig\";\r\nimport { log } from \"../../../../common/fish/CalculteRule\";\r\nexport enum RollerMediatorConst {\r\n    /**初始化滑槽面板 */\r\n    INIT_ROLLER_PANEL = \"initRollerPanel\",\r\n    /**卸载滑槽游戏面板 */\r\n    UNINSTALL_ROLLER_PANEL = \"uninstallRollerPanel\",\r\n    /**开始滑动 */\r\n    BEGIN_ROLL = \"beginRoll\",\r\n    /**结束滑动 */\r\n    END_ROLL = \"endRoll\",\r\n    /* 闪动停止*/\r\n    FORCE_STOP = 'forceStop',\r\n    /*更新状态游戏*/\r\n    REMOVE_THECHEST_LAYER = 'removeThechestLayer',\r\n    /*更新mj*/\r\n    UPDATE_JACKPOT = 'update_jackpot',\r\n    UPDATE_JACKPOT_TOTAL = \"UPDATE_JACKPOT_TOTAL\",\r\n    /*初始化宝盆*/\r\n    INITDOCKIOCN = \"initdockiocn\"\r\n}\r\nexport default class RollerMediator extends BaseMediator {\r\n    public taskScheduler: TaskScheduler = new TaskScheduler()\r\n    public sourceMap: Array<ISourceFile> = [\r\n        {\r\n            key: 'slotPanel',\r\n            path: PrefabDefine.SLOT_PANEL,\r\n            sourceType: Prefab,\r\n            source: null\r\n        }\r\n    ]\r\n    private stopRollHandle;\r\n    private stopTimeId;\r\n    protected listNotificationConst: Array<IlistTypeHander<RollerMediator>> = [\r\n        {\r\n            name: RollerMediatorConst.INIT_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                this.init();\r\n                //getBgProxy().setDisable(false)\r\n                window.setTimeout(() => {\r\n                    // 可能有动画\r\n                    this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                }, 2500)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.REMOVE_THECHEST_LAYER,\r\n            handler(notification: INotification) {\r\n                let {iconStay} = notification.getBody()\r\n                const rollerComp = (<GodWealth_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"GodWealth_RollerPanel\"));\r\n                rollerComp.togglesALLLayer(iconStay === 1)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.INITDOCKIOCN,\r\n            handler(notification: INotification) {\r\n                const {dockIocn} = notification.getBody();\r\n                const rollerComp = (<GodWealth_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"GodWealth_RollerPanel\"));\r\n                rollerComp.iconDock('coord', dockIocn)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.BEGIN_ROLL,\r\n            handler(notification: INotification) {\r\n                const {stopIndex, targetList, dockIocn} = notification.getBody();\r\n                const rollerComp = (<GodWealth_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"GodWealth_RollerPanel\"));\r\n                rollerComp.startAllRoll(stopIndex, getBgProxy().isSpeed());\r\n                getBgProxy().setDisable(true)\r\n                this.taskScheduler.stopQueue(false)\r\n                rollerComp.clearStatus()\r\n                console.log(targetList)\r\n                //闪动图标\r\n                let i = 0\r\n                const flickerFn = () => {\r\n                    targetList.forEach(item => {\r\n                        rollerComp.iconFlicker('coord', item, true, () => {\r\n                            i++\r\n                            if (i === targetList.length) { //全部闪动完成\r\n                                rollerComp.clearStatus()\r\n                                setTimeout(() => {\r\n                                    done()\r\n                                    flashLine()\r\n                                }, 500)\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n                // let timer: number | undefined;\r\n                const flashLine = () => {\r\n                    targetList.forEach((res,index)=>{\r\n                        const task = new Task((done) => {\r\n                            rollerComp.iconFlicker('coord', targetList[index], false)\r\n                            //闪烁2秒钟就结束\r\n                            window.setTimeout(() => done(), 1000)\r\n                        })\r\n                        this.taskScheduler.joinqQueue(task, false)\r\n                    })\r\n                }\r\n                const done = () => {\r\n                    this.taskScheduler.joinqQueue(new Task((done)=>{\r\n                        this.sendNotification(CommandDefine.BG, {order: \"curr\",done}, BgMediatorConst.SHOW_DIALOG_WIN)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        //dialogType, amount, keepTime, done\r\n                        this.sendNotification(BgMediatorConst.NUMBEROFDISPLAYS,{keepTime:2000,done},)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        if(getBgProxy().getIsChangeGameRunning()!==-1){\r\n                            this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                        }else {\r\n                            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON,{state:true})\r\n                            this.autoLaunch()\r\n                            getBgProxy().setDisable(false)\r\n                        }\r\n                        this.sendNotification(RollerMediatorConst.REMOVE_THECHEST_LAYER,{iconStay:getSocketProxy().getTransferGameInfo().getIconStay()})\r\n                        done()\r\n                    }))\r\n                }\r\n                this.stopRollHandle = (isManualStop: boolean=false) => {\r\n                    this.stopRollHandle = undefined;\r\n                    this.stopTimeId = undefined;\r\n                    rollerComp && rollerComp.stopAllRoll(isManualStop, () => {\r\n                        this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD, {state: goldState.OLD_GOLD})\r\n                        this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL,{frequency:getSocketProxy().getTransferGameInfo().getNumberOfRounds()})\r\n                        //更新游戏奖励\r\n                        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n                        rollerComp.iconDock('coord', dockIocn)\r\n                        // // 开始轮流闪动图标\r\n                        rollerComp.clearStatus()\r\n                        if (!targetList.length) {\r\n                            done()\r\n                        } else {\r\n                            flickerFn()\r\n                        }\r\n                    })\r\n                }\r\n                // 多少秒钟后开始停止转动\r\n                this.stopTimeId = window.setTimeout(this.stopRollHandle, ROLL_TIME)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.END_ROLL,\r\n            handler(notification: INotification) {\r\n                this.stopTimeId && window.clearTimeout(this.stopTimeId)\r\n                this.stopRollHandle && this.stopRollHandle(true);\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UPDATE_JACKPOT,\r\n            handler(notification: INotification) {\r\n                const {baseBetAmount, lineCount} = notification.getBody();\r\n                if(this.wrapView&&this.wrapView.components){\r\n                    const slotPanel = (<GodWealth_SlotPanel>this.wrapView?.getComponent(\"GodWealth_SlotPanel\"))\r\n                    if (slotPanel) {\r\n                        getBgProxy().setWinningMultiplier({mini:config.winning[1].maxRate * baseBetAmount,major:config.winning[2].maxRate * baseBetAmount})\r\n                        slotPanel.setGod_MAJOR(config.winning[1].maxRate * baseBetAmount, config.winning[2].maxRate * baseBetAmount)\r\n                    }\r\n                }\r\n               \r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UPDATE_JACKPOT_TOTAL,\r\n            handler(notification: INotification) {\r\n                const {total} = notification.getBody();\r\n                if(this.wrapView&&this.wrapView.components){\r\n                    const slotPanel = (<GodWealth_SlotPanel>this.wrapView?.getComponent(\"GodWealth_SlotPanel\"))\r\n                    slotPanel&&slotPanel.set_jack_total(total)\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UNINSTALL_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                // console.log(\"卸载滑槽游戏\")\r\n                const rollerComp = (<GodWealth_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"GodWealth_RollerPanel\"));\r\n                rollerComp.uninstall()\r\n            }\r\n        },\r\n    ]\r\n    protected mainPrefabSource = {\r\n        key: 'slotPanel',\r\n        path: PrefabDefine.SLOT_PANEL,\r\n        sourceType: Prefab,\r\n        source: null\r\n    }\r\n    private isFlickerDone: boolean = true\r\n\r\n    public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n        super(mediatorName, viewComponent)\r\n    }\r\n\r\n    protected init(): void {\r\n        //this.viewComponent.addChild(this.getSource(PrefabDefine.SLOT_PANEL))\r\n        this.wrapView = this.getSource(this.sourceMap[0].path)\r\n        // this.viewComponent.getChildByName(\"gameArea\").addChild(this.wrapView);\r\n        find(\"slotBg/gameArea\", ApplicationGlobal.mainPanel).addChild(this.wrapView)\r\n        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n        this.listenerEvent()\r\n    }\r\n\r\n    protected listenerEvent() {\r\n        const slotPanel = (<GodWealth_SlotPanel>this.wrapView?.getComponent(\"GodWealth_SlotPanel\"))\r\n        slotPanel.btn_jackPot.on(Node.EventType.TOUCH_END, () => {\r\n            this.sendNotification(BgMediatorConst.HANDOFF_JACKPOT)\r\n        }, this)\r\n    }\r\n\r\n    private autoLaunch() {\r\n        const fbp = getBgProxy();\r\n        // if (fbp.getIsChangeGameRunning() === -1) {\r\n            // 没有跳转游戏才自动发\r\n        const rollerComp = (<GodWealth_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"GodWealth_RollerPanel\"));\r\n        rollerComp.clearStatus()\r\n        this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n        }\r\n    // }\r\n}\r\n"]}