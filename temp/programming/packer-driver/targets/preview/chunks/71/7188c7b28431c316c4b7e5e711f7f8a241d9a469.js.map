{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandarQiuQiu/SkeletonPlay.ts"],"names":["_decorator","ccclass","property","SkeletonAnimationPlayer","constructor","skeleton","animationName","loop","onAnimationComplete","playAnimation","setCompleteListener","trackEntry","animation","name","setAnimation","console","error","stopAnimation","clearTracks","changeAnimation","isLoop"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;yBAGTG,uB,GADpBF,O,UAAD,MACqBE,uBADrB,CAC6C;AAMzCC,QAAAA,WAAW,CACPC,QADO,EAEPC,aAFO,EAGPC,IAHO,EAIPC,mBAJO,EAKT;AAAA,cAFED,IAEF;AAFEA,YAAAA,IAEF,GAFkB,KAElB;AAAA;;AAAA,eAVMF,QAUN,GAVqC,IAUrC;AAAA,eATMC,aASN,GAT8B,EAS9B;AAAA,eARMC,IAQN,GARsB,KAQtB;AAAA,eAPMC,mBAON,GAPiD,IAOjD;AACE,eAAKH,QAAL,GAAgBA,QAAhB;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKC,IAAL,GAAYA,IAAZ;AACA,eAAKC,mBAAL,GAA2BA,mBAAmB,IAAI,IAAlD,CAJF,CAI0D;AAC3D;;AAEDC,QAAAA,aAAa,GAAG;AACZ,cAAI,KAAKJ,QAAL,IAAiB,KAAKC,aAA1B,EAAyC;AACrC;AACA,iBAAKD,QAAL,IAAe,KAAKA,QAAL,CAAcK,mBAAd,CAAmCC,UAAD,IAAgB;AAC7D,kBAAIA,UAAU,CAACC,SAAX,CAAqBC,IAArB,KAA8B,KAAKP,aAAnC,IAAoD,KAAKE,mBAA7D,EAAkF;AAC9E,qBAAKA,mBAAL;AACH;AACJ,aAJc,CAAf,CAFqC,CAQrC;;AACA,iBAAKH,QAAL,CAAcS,YAAd,CAA2B,CAA3B,EAA8B,KAAKR,aAAnC,EAAkD,KAAKC,IAAvD;AACH,WAVD,MAUO;AACHQ,YAAAA,OAAO,CAACC,KAAR,CAAc,0CAAd;AACH;AACJ;;AAEDC,QAAAA,aAAa,GAAG;AACZ,cAAI,KAAKZ,QAAT,EAAmB;AACf,iBAAKA,QAAL,CAAca,WAAd;AACH;AACJ,SAtCwC,CAwCzC;;;AACAC,QAAAA,eAAe,CAACb,aAAD,EAAuBc,MAAvB,EAAoCZ,mBAApC,EAA8D;AAAA,cAAvCY,MAAuC;AAAvCA,YAAAA,MAAuC,GAAhC,KAAgC;AAAA;;AAAA,cAA1BZ,mBAA0B;AAA1BA,YAAAA,mBAA0B,GAAN,IAAM;AAAA;;AACzE,eAAKF,aAAL,GAAqBA,aAArB;AACA,eAAKC,IAAL,GAAYa,MAAZ;AACA,eAAKZ,mBAAL,GAA2BA,mBAA3B;AACA,eAAKC,aAAL;AACH;;AA9CwC,O","sourcesContent":["import { _decorator, Component, CCInteger,SpriteFrame,sp} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class SkeletonAnimationPlayer {\r\n    private skeleton: sp.Skeleton | null = null;\r\n    private animationName: string = \"\";\r\n    private loop: boolean = false;\r\n    private onAnimationComplete: (() => void) | null = null;\r\n\r\n    constructor(\r\n        skeleton: sp.Skeleton,\r\n        animationName: string,\r\n        loop: boolean = false,\r\n        onAnimationComplete?: () => void // 将回调参数设为可选\r\n    ) {\r\n        this.skeleton = skeleton;\r\n        this.animationName = animationName;\r\n        this.loop = loop;\r\n        this.onAnimationComplete = onAnimationComplete || null; // 使用默认值为 null\r\n    }\r\n\r\n    playAnimation() {\r\n        if (this.skeleton && this.animationName) {\r\n            // 监听动画播放完成事件\r\n            this.skeleton&&this.skeleton.setCompleteListener((trackEntry) => {\r\n                if (trackEntry.animation.name === this.animationName && this.onAnimationComplete) {\r\n                    this.onAnimationComplete();\r\n                }\r\n            });\r\n\r\n            // 设置循环\r\n            this.skeleton.setAnimation(0, this.animationName, this.loop);\r\n        } else {\r\n            console.error(\"Skeleton or animation name not assigned.\");\r\n        }\r\n    }\r\n\r\n    stopAnimation() {\r\n        if (this.skeleton) {\r\n            this.skeleton.clearTracks();\r\n        }\r\n    }\r\n\r\n    // 切换到不同的动画\r\n    changeAnimation(animationName: string,isLoop=false,onAnimationComplete=null) {\r\n        this.animationName = animationName;\r\n        this.loop = isLoop;\r\n        this.onAnimationComplete = onAnimationComplete;\r\n        this.playAnimation();\r\n    }\r\n}"]}