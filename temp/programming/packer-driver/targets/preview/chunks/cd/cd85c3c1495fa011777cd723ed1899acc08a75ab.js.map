{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/thor/dataTransfer.ts"],"names":["DataKeyType","useMock","mockData","dataCache","dl","si","setData","key","value","refreshData","data","dataKey","console","error","ROLLER_STOP_INDEX_ID","rollerId","ICON_EFFECT_DATA","wp","otherGameAttributesVo","singleResults","result","push","RATES","rates","ITEMTOTALMULTIPLIER","itemTotalMultiplier","COINSAFTERBETTING","coinsAfterBetting","BALANCE","balanceAfterSettlement","PROFIT_MULTIPLE","magnification","GAME_TYPE","indexGameType","NEXTGAME_TYPE","nextGameType","AWARD_INFO","winningAmount","SUBGAME_TIMES","freeCount","INDEXADDFREECOUNT","indexAddFreeCount","PROFIT_AMOUNT","totalRewards","FREE_GAME_AMOUNT","freeGameAmount","GAMEFREEGAMETOTALMULTIPLIER","gameFreeGametotalMultiplier"],"mappings":"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","sourcesContent":["import { log } from \"cc\"\r\n\r\nexport enum DataKeyType {\r\n  /**5条滚轴对应的道具ID【上升或下降前】 */\r\n  ROLLER_STOP_INDEX_ID = \"ROLLER_STOP_INDEX_ID\",\r\n  /**扣除余额 */\r\n  COINSAFTERBETTING = \"coinsAfterBetting\",\r\n  /**余额 */\r\n  BALANCE = \"BALANCE\",\r\n  /**获取闪动数据 */\r\n  ICON_EFFECT_DATA = \"ICON_EFFECT_DATA\",\r\n  /**获取盈利倍数信息，用于显示爆奖效果 */\r\n  PROFIT_MULTIPLE = \"PROFIT_MULTIPLE\",\r\n  /**游戏类型 */\r\n  GAME_TYPE = \"GAME_TYPE\",\r\n  /**下一把游戏类型 */\r\n  NEXTGAME_TYPE = \"NEXTGAME_TYPE\",\r\n  /**开宝箱的中奖信息 */\r\n  AWARD_INFO = \"AWARD_INFO\",\r\n  /**小游戏剩余次数 */\r\n  SUBGAME_TIMES = \"SUBGAME_TIMES\",\r\n  /**获取盈利 */\r\n  PROFIT_AMOUNT = \"PROFIT_AMOUNT\",\r\n  /**小游戏盈亏 */\r\n  FREE_GAME_AMOUNT = \"FREE_GAME_AMOUNT\",\r\n  /**图标倍数 */\r\n  RATES = \"RATES\",\r\n  /**图标总倍数 */\r\n  ITEMTOTALMULTIPLIER = \"ITEMTOTALMULTIPLIER\",\r\n  /** 单次次数*/\r\n  INDEXADDFREECOUNT = \"INDEXADDFREECOUNT\",\r\n  /**小游戏总倍数*/\r\n  GAMEFREEGAMETOTALMULTIPLIER = \"GAMEFREEGAMETOTALMULTIPLIER\",\r\n}\r\nexport const useMock: boolean = false\r\n\r\nconst mockData: any = {\r\n  // dl: {\r\n  //   si: [{\r\n  //     bl: 99975,\r\n  //     blab: 99975,\r\n  //     blb: 100000,\r\n  //     bubble: 0,\r\n  //     cs: 0,\r\n  //     ctw: 0,\r\n  //     fireRingSwitch: 0,\r\n  //     freeCount: 0,\r\n  //     freeGameAmount: 0,\r\n  //     gameType: 0,\r\n  //     iconStay: 0,\r\n  //     indexGameType: 0,\r\n  //     lw: {},\r\n  //     magnification: 0,\r\n  //     np: 0,\r\n  //     rl: [[7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1]],\r\n  //     rollerId: [64, 3, 7, 45, 26],\r\n  //     sc: 0,\r\n  //     sgb: 0,\r\n  //     tb: 1,\r\n  //     tbb: 25,\r\n  //     tw: 0,\r\n  //     wp: {}\r\n  //   }]\r\n  // }\r\n\r\n  \"dl\": {\r\n    \"si\": [\r\n      {\r\n        \"balanceAfterSettlement\": 106580,\r\n        \"bettingGoldCoins\": 20,\r\n        \"change\": {},\r\n        \"coinsAfterBetting\": 106580,\r\n        \"coinsBeforeBetting\": 106600,\r\n        \"freeCount\": 0,\r\n        \"freeGame\": {},\r\n        \"freeGameAmount\": 0,\r\n        \"freeGameItemCount\": 0,\r\n        \"indexAddFreeCount\": 0,\r\n        \"indexGameType\": 0,\r\n        \"magnification\": 0,\r\n        \"nextGameType\": 0,\r\n        \"otherGameAttributesVo\": {\r\n          \"freeGametotalMultiplier\": 0,\r\n          \"gameFreeGametotalMultiplier\": 0,\r\n          \"gameTotalMultiplier\": 0,\r\n          \"itemTotalMultiplier\": 0,\r\n          \"rates\": [],\r\n          \"singleResults\": [\r\n            {\r\n              \"gameWinningVos\": [],\r\n              \"rollerIcon\": [[2, 3, 2, 5, 3], [6, 1, 7, 2, 4], [2, 2, 1, 2, 7], [5, 9, 3, 1, 6], [4, 1, 2, 9, 4], [6, 3, 8, 7, 6]],\r\n              \"totalMultiple\": 0,\r\n              \"winningPosition\": {}\r\n            }\r\n          ]\r\n        },\r\n        \"rollerId\": [66, 88, 63, 37, 68, 98],\r\n        \"totalRewards\": 0,\r\n        \"whetherFreeGame\": 0,\r\n        \"winningAmount\": {},\r\n        \"winningPosition\": {}\r\n      }\r\n    ]\r\n  }\r\n}\r\n/**此数据用于缓存，正常情况下，游戏初始化、或skt返回数据之后就应该更新这个值，在下一次更新之前，此值不应该变化\r\n * \r\n * 为什么不用store呢，因为store的值一般和界面关联，数据一变更就有视图变化，但缓存数据没有，主要考虑到有特效缓动，要延迟更新\r\n */\r\nlet dataCache: MockDataType = {\r\n  dl: {\r\n    si: [{\r\n      \"balanceAfterSettlement\": 106580,\r\n      \"bettingGoldCoins\": 20,\r\n      \"change\": {},\r\n      \"coinsAfterBetting\": 106580,\r\n      \"coinsBeforeBetting\": 106600,\r\n      \"freeCount\": 0,\r\n      \"freeGame\": {},\r\n      \"freeGameAmount\": 0,\r\n      \"freeGameItemCount\": 0,\r\n      \"indexAddFreeCount\": 0,\r\n      \"indexGameType\": 0,\r\n      \"magnification\": 0,\r\n      \"nextGameType\": 0,\r\n      \"otherGameAttributesVo\": {\r\n        \"freeGametotalMultiplier\": 0,\r\n        \"gameFreeGametotalMultiplier\": 0,\r\n        \"gameTotalMultiplier\": 0,\r\n        \"itemTotalMultiplier\": 0,\r\n        \"rates\": [],\r\n        \"singleResults\": [\r\n          {\r\n            \"gameWinningVos\": [],\r\n            \"rollerIcon\": [[2, 3, 2, 5, 3], [6, 1, 7, 2, 4], [2, 2, 1, 2, 7], [5, 9, 3, 1, 6], [4, 1, 2, 9, 4], [6, 3, 8, 7, 6]],\r\n            \"totalMultiple\": 0,\r\n            \"winningPosition\": {}\r\n          }\r\n        ]\r\n      },\r\n      \"rollerId\": [66, 88, 63, 37, 68, 98],\r\n      \"totalRewards\": 0,\r\n      \"whetherFreeGame\": 0,\r\n      \"winningAmount\": {},\r\n      \"winningPosition\": {}\r\n    }]\r\n  }\r\n}\r\n\r\n/**用于手动更新某个值，一般用于初始化游戏时候局部变量更新 */\r\nexport const setData = (key: string, value: any) => {\r\n  // console.log(key, value)\r\n  if (useMock) { return }\r\n  const si = (useMock ? mockData : dataCache).dl.si[0]\r\n  si[key] = value\r\n}\r\n\r\n/**刷新缓存数据 */\r\nexport const refreshData = (data: MockDataType) => {\r\n  if (!useMock) {\r\n    (dataCache = data)\r\n  }\r\n  // console.log('dataCache', dataCache.dl.si[0])\r\n}\r\n\r\nexport default (dataKey: DataKeyType): any => {\r\n  if (!dataCache) {\r\n    console.error(\"dataCache is null\")\r\n    return\r\n  }\r\n\r\n  const si = (useMock ? mockData : dataCache).dl.si[0]\r\n  // console.log('gameType', si.indexGameType)\r\n  switch (dataKey) {\r\n    case DataKeyType.ROLLER_STOP_INDEX_ID:\r\n      // console.log(si.rollerId);\r\n      return si.rollerId\r\n    case DataKeyType.ICON_EFFECT_DATA:\r\n      const wp = si.otherGameAttributesVo.singleResults\r\n      const result: number[][] = []\r\n      for (let key in wp) {\r\n        result.push(wp[key])\r\n      }\r\n      return result\r\n    case DataKeyType.RATES:\r\n      return si.otherGameAttributesVo.rates\r\n    case DataKeyType.ITEMTOTALMULTIPLIER:\r\n      return si.otherGameAttributesVo.itemTotalMultiplier\r\n    case DataKeyType.COINSAFTERBETTING:\r\n      return si.coinsAfterBetting\r\n    case DataKeyType.BALANCE:\r\n      return si.balanceAfterSettlement\r\n    case DataKeyType.PROFIT_MULTIPLE:\r\n      return si.magnification\r\n    case DataKeyType.GAME_TYPE:\r\n      return si.indexGameType\r\n    case DataKeyType.NEXTGAME_TYPE:\r\n      return si.nextGameType\r\n    case DataKeyType.AWARD_INFO:\r\n      return si.winningAmount\r\n    case DataKeyType.SUBGAME_TIMES:\r\n      return si.freeCount\r\n    case DataKeyType.INDEXADDFREECOUNT:\r\n      return si.indexAddFreeCount\r\n    case DataKeyType.PROFIT_AMOUNT:\r\n      return si.totalRewards\r\n    case DataKeyType.FREE_GAME_AMOUNT:\r\n      return si.freeGameAmount\r\n    case DataKeyType.GAMEFREEGAMETOTALMULTIPLIER:\r\n      return si.otherGameAttributesVo.gameFreeGametotalMultiplier\r\n  }\r\n\r\n  // if (dataKey === DataKeyType.ROLLER_STOP_INDEX_ID) {\r\n  //   return si.rollerId\r\n  // }\r\n  // if (dataKey === DataKeyType.ICON_EFFECT_DATA) {\r\n  //   const wp = si.wp\r\n  //   const result: number[][] = []\r\n  //   for (let key in wp) {\r\n  //     result.push(wp[key])\r\n  //   }\r\n  //   return result\r\n  // }\r\n  // if (dataKey === DataKeyType.PROFIT_MULTIPLE) {\r\n\r\n  // }\r\n}\r\ntype MockDataType = {\r\n  dl: {\r\n    si: [\r\n      {\r\n        balanceAfterSettlement: number,\r\n        bettingGoldCoins: number,\r\n        change: {},\r\n        coinsAfterBetting: number,\r\n        coinsBeforeBetting: number,\r\n        freeCount: number,\r\n        freeGame: {},\r\n        freeGameAmount: number,\r\n        freeGameItemCount: number,\r\n        indexAddFreeCount: number,\r\n        indexGameType: number,\r\n        magnification: number,\r\n        nextGameType: number,\r\n        otherGameAttributesVo: {}\r\n        /**倍率  图标数量X图标倍率 */\r\n        rollerId: number[],//[64, 3, 7, 45, 26],\r\n        totalRewards: number,\r\n        whetherFreeGame: number,\r\n        winningAmount: {},\r\n        winningPosition: {},\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n"]}