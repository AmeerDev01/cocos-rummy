{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/viewModel/BetAreaViewModel.ts"],"names":["ViewModel","StoreInject","global","config","convertBetData","convertToServerBetType","gameCacheData","SKT_MAG_TYPE","sktInstance","getStore","clearBet","seatBet","changeSeatBet","BetAreaViewModel","constructor","begin","setEvent","myBet","betData","isTest","dispatch","preBet","sendBet","roomId","memberId","comp","props","myHead","userId","memberName","name","gold","betAmount","betType","betId","sendSktMessage","LAUNCHER_BET","openShop","sendGameShowEvent","GAME_SHOW","connect","inject","state","newBetData","bet","selectChip","game","gameStatus","gameFlow","newResult","animationStatus","powers","cancelBetData","initBetData","memberBetDetail","seats","forEach","v","seat","find","index","gameOption","lookOnIndex","isMyBet","isFly"],"mappings":"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","sourcesContent":["import { log } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { global } from \"../../../hall\"\r\nimport { IEvent, IProps, Yxx_BetArea } from \"../components/Yxx_BetArea\"\r\nimport config from \"../config\"\r\nimport { MebmerBet, SendBet, convertBetData, convertToServerBetType, gameCacheData } from \"../serverType\"\r\nimport { SKT_MAG_TYPE, sktInstance } from \"../socketConnect\"\r\nimport { getStore } from \"../store\"\r\nimport { clearBet, seatBet } from \"../store/actions/bet\"\r\nimport { changeSeatBet } from \"../store/actions/game\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { Bet, BetData, HeadType } from \"../type\"\r\n\r\n@StoreInject(getStore())\r\nclass BetAreaViewModel extends ViewModel<Yxx_BetArea, IProps, IEvent> {\r\n  constructor() {\r\n    super('Yxx_BetArea')\r\n  }\r\n\r\n  protected begin() {\r\n    this.setEvent({\r\n      /** 自己下注，FooterViewModel 也有相同代码 */\r\n      myBet: (betData: BetData) => {\r\n        if (config.isTest) {\r\n          this.dispatch(seatBet(betData));\r\n          this.dispatch(changeSeatBet(betData));\r\n        } else {\r\n          if (config.preBet) {\r\n            this.dispatch(seatBet(betData));\r\n            this.dispatch(changeSeatBet(betData));\r\n          }\r\n          const sendBet: SendBet = {\r\n            roomId: gameCacheData.roomId,\r\n            memberId: this.comp.props.myHead.userId,\r\n            memberName: this.comp.props.myHead.name,\r\n            gold: betData.betAmount,\r\n            betType: convertToServerBetType(betData.betType),\r\n            betId: betData.betId,\r\n          }\r\n\r\n          // 下注信息发送给服务器\r\n          sktInstance.sendSktMessage(SKT_MAG_TYPE.LAUNCHER_BET, sendBet);\r\n        }\r\n\r\n      },\r\n      clearBet: () => {\r\n        this.dispatch(clearBet(false));\r\n      },\r\n      openShop: () => {\r\n        global.openShop();\r\n      },\r\n      sendGameShowEvent: () => {\r\n        sktInstance.sendSktMessage(SKT_MAG_TYPE.GAME_SHOW, { roomId: gameCacheData.roomId });\r\n      }\r\n    })\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        newBetData: state.bet.newBetData,\r\n        selectChip: state.bet.selectChip,\r\n        myHead: state.game.myHead,\r\n        gameStatus: state.gameFlow.gameStatus,\r\n        newResult: state.gameFlow.newResult,\r\n        animationStatus: state.gameFlow.animationStatus,\r\n        powers: state.game.powers,\r\n        cancelBetData: state.bet.cancelBetData,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * 初始化下注\r\n   * @param memberBetDetail \r\n   * @param seats \r\n   */\r\n  public initBetData(memberBetDetail: MebmerBet[], seats: HeadType[]): void {\r\n    if (!memberBetDetail) return;\r\n    memberBetDetail.forEach(v => {\r\n      const seat = seats.find(seat => seat.userId === v.memberId);\r\n      const index = seat ? seat.index : config.gameOption.lookOnIndex;\r\n      const betData = convertBetData(v, index);\r\n      betData.isMyBet = gameCacheData.memberId === betData.userId;\r\n      betData.isFly = false;\r\n\r\n      this.dispatch(seatBet(betData));\r\n      this.dispatch(changeSeatBet(betData));\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport default BetAreaViewModel"]}