{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/domino/store/action/game.ts"],"names":["reduxAct","default","DeskStatus","initState","statue","WAITING","playerMap","noShowCardNumber","outCardItem","leftOutCardItem","rightOutCardItem","newCardItem","lastActiveSeatIndex","currActiveSeatIndex","outCountdown","intendOutCard","quitRoomAction","readyCountdown","gold","balanceOdds","ActionTypes","initSelfSeat","createAction","DOMINO_INIT_SELF_SEAT","player","joinSeat","DOMINO_JOIN_SEAT","seatPostion","changePlayerStatus","DOMINO_UPDATE_PLAYER_GAME_DATA","palyerId","playGame","changeDeskStatus","DOMINO_CHANGE_DESK_STATUS","status","countdown","updateNoShowCardNumber","DOMINO_UPDATE_NO_SHOW_CARD","showOutCard","DOMINO_SHOW_OUT_CARD","getCard","DOMINO_GET_CARD","playerId","card","deal","DOMINO_DEAL","cardItems","changeOutCardPlayer","DOMINO_CHANGE_OUT_CARD_PLAYER","seatIndex","DOMINO_OUT_COUTNDOWN","clearRoomData","DOMINO_CLEAR_ROOM_DATA","quitRoom","DOMINO_QUIT_ROOM","setDeskCardOutline","DOMINO_SET_DESK_CARD_OUTLINE","setWinlossType","DOMINO_GAME_IN_WINLOSS","winlossType","quitSeat","DOMINO_QUIT_SEAT","updatePlayerLewat","DOMINO_UPDATE_LEWAT","lewatPokers","sendBalance","DOMINO_BALANCE","balances","updateGold","DOMINO_UPDATE_GOLD"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;AACoCC,MAAAA,U,iBAAAA,U;;;;;;;2BAkChCC,S,GAA2B;AACtCC,QAAAA,MAAM,EAAE;AAAA;AAAA,sCAAWC,OADmB;AAEtCC,QAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAF2B;AAGtCC,QAAAA,gBAAgB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAHoB;AAItCC,QAAAA,WAAW,EAAE,EAJyB;AAKtCC,QAAAA,eAAe,EAAE,EALqB;AAMtCC,QAAAA,gBAAgB,EAAE,EANoB;AAOtCC,QAAAA,WAAW,EAAE,IAPyB;AAQtCC,QAAAA,mBAAmB,EAAE,CAAC,CARgB;AAStCC,QAAAA,mBAAmB,EAAE,CAAC,CATgB;AAUtCC,QAAAA,YAAY,EAAE,IAVwB;AAWtCC,QAAAA,aAAa,EAAE,IAXuB;AAYtCC,QAAAA,cAAc,EAAE,CAZsB;AAatCC,QAAAA,cAAc,EAAE,IAbsB;AActCC,QAAAA,IAAI,EAAE,CAdgC;AAetCC,QAAAA,WAAW,EAAE;AAfyB,O;AAiBxC;;;6BACYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAgCZ;;;AAuBA;8BACaC,Y,GAAe;AAAA;AAAA,gCAASC,YAAT,CAAsBF,WAAW,CAACG,qBAAlC,EACzBC,MAAD,IAAsE;AACpE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHyB,C;AAI5B;;;0BACaC,Q,GAAW;AAAA;AAAA,gCAASH,YAAT,CAAsBF,WAAW,CAACM,gBAAlC,EACtB,CAACC,WAAD,EAA4BH,MAA5B,KAA4F;AAC1F,eAAO;AAAEG,UAAAA,WAAF;AAAeH,UAAAA;AAAf,SAAP;AACD,OAHqB,C;AAIxB;;;oCACaI,kB,GAAqB;AAAA;AAAA,gCAASN,YAAT,CAAsBF,WAAW,CAACS,8BAAlC,EAChC,CAACC,QAAD,EAAmBC,QAAnB,KAA2G;AACzG,eAAO;AAAED,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAP;AACD,OAH+B,C;AAIlC;;;kCACaC,gB,GAAmB;AAAA;AAAA,gCAASV,YAAT,CAAsBF,WAAW,CAACa,yBAAlC,EAC9B,CAACC,MAAD,EAAqBC,SAArB,KAAoG;AAClG,eAAO;AAAED,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAP;AACD,OAH6B,C;AAIhC;;;wCACaC,sB,GAAyB;AAAA;AAAA,gCAASd,YAAT,CAAsBF,WAAW,CAACiB,0BAAlC,EACnC9B,gBAAD,IAAuF;AACrF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHmC,C;AAItC;;;6BACa+B,W,GAAc;AAAA;AAAA,gCAAShB,YAAT,CAAsBF,WAAW,CAACmB,oBAAlC,EACxBD,WAAD,IAA4E;AAC1E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHwB,C;AAI3B;;;yBACaE,O,GAAU;AAAA;AAAA,gCAASlB,YAAT,CAAsBF,WAAW,CAACqB,eAAlC,EACrB,CAACC,QAAD,EAAmBC,IAAnB,KAAmF;AACjF,eAAO;AAAED,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAP;AACD,OAHoB,C;AAIvB;;;sBACaC,I,GAAO;AAAA;AAAA,gCAAStB,YAAT,CAAsBF,WAAW,CAACyB,WAAlC,EACjBC,SAAD,IAAmE;AACjE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHiB,C;AAIpB;;;qCACaC,mB,GAAsB;AAAA;AAAA,gCAASzB,YAAT,CAAsBF,WAAW,CAAC4B,6BAAlC,EAChCC,SAAD,IAAiF;AAC/E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHgC,C;AAInC;;;8BACanC,Y,GAAe;AAAA;AAAA,gCAASQ,YAAT,CAAsBF,WAAW,CAAC8B,oBAAlC,EACzBpC,YAAD,IAA8E;AAC5E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHyB,C;;+BAIfqC,a,GAAgB;AAAA;AAAA,gCAAS7B,YAAT,CAAsBF,WAAW,CAACgC,sBAAlC,EAC3B,MAAyD;AACvD,eAAO,EAAP;AACD,OAH0B,C;;0BAIhBC,Q,GAAW;AAAA;AAAA,gCAAS/B,YAAT,CAAsBF,WAAW,CAACkC,gBAAlC,EACtB,MAAmD;AACjD,eAAO,EAAP;AACD,OAHqB,C;;oCAIXC,kB,GAAqB;AAAA;AAAA,gCAASjC,YAAT,CAAsBF,WAAW,CAACoC,4BAAlC,EAC/BzC,aAAD,IAAsF;AACpF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAH+B,C;;gCAIrB0C,c,GAAiB;AAAA;AAAA,gCAASnC,YAAT,CAAsBF,WAAW,CAACsC,sBAAlC,EAC3BC,WAAD,IAAiF;AAC/E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAH2B,C;;0BAIjBC,Q,GAAW;AAAA;AAAA,gCAAStC,YAAT,CAAsBF,WAAW,CAACyC,gBAAlC,EACrBnB,QAAD,IAAmE;AACjE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHqB,C;;mCAIXoB,iB,GAAoB;AAAA;AAAA,gCAASxC,YAAT,CAAsBF,WAAW,CAAC2C,mBAAlC,EAC/B,CAACrB,QAAD,EAAmBsB,WAAnB,KAA6F;AAC3F,eAAO;AAAEtB,UAAAA,QAAF;AAAYsB,UAAAA;AAAZ,SAAP;AACD,OAH8B,C;;6BAIpBC,W,GAAc;AAAA;AAAA,gCAAS3C,YAAT,CAAsBF,WAAW,CAAC8C,cAAlC,EACxBC,QAAD,IAA0E;AACxE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHwB,C;;4BAIdC,U,GAAa;AAAA;AAAA,gCAAS9C,YAAT,CAAsBF,WAAW,CAACiD,kBAAlC,EACvBnD,IAAD,IAAiE;AAC/D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAHuB,C","sourcesContent":["import { default as reduxAct } from 'redux-act'\r\nimport { BalancePlayer, CardItem, Countdown, DeskStatus, Player, PlayerGameData, PlayerSatus, SeatPosition, WinlossType } from '../../type'\r\n\r\n\r\nexport type InitStateType = {\r\n  statue: DeskStatus\r\n  /**玩家，0号为自己，顺序隐射为顺时针 */\r\n  playerMap: Player[]\r\n  /**还未显示的牌点 */\r\n  noShowCardNumber: number[]\r\n  /**已经在桌面打出的牌组 */\r\n  outCardItem: CardItem[]\r\n  /**左边出牌 */\r\n  leftOutCardItem: CardItem[],\r\n  /**右边出牌 */\r\n  rightOutCardItem: CardItem[],\r\n  /**最新出的牌 */\r\n  newCardItem: CardItem,\r\n  /**上一个激活的用户 */\r\n  lastActiveSeatIndex: number\r\n  /**当前正激活等待的用户 */\r\n  currActiveSeatIndex: number,\r\n  /**出牌倒计时 */\r\n  outCountdown: Countdown,\r\n  /**准备出的牌 */\r\n  intendOutCard: CardItem,\r\n  /**退出房间动作 */\r\n  quitRoomAction: number,\r\n  /**准备倒计时 */\r\n  readyCountdown: Countdown,\r\n  /**余额 */\r\n  gold: number,\r\n  /**结算倍数 */\r\n  balanceOdds: number,\r\n}\r\nexport const initState: InitStateType = {\r\n  statue: DeskStatus.WAITING,\r\n  playerMap: [null, null, null, null],\r\n  noShowCardNumber: [0, 0, 0, 0, 0, 0, 0],\r\n  outCardItem: [],\r\n  leftOutCardItem: [],\r\n  rightOutCardItem: [],\r\n  newCardItem: null,\r\n  lastActiveSeatIndex: -1,\r\n  currActiveSeatIndex: -1,\r\n  outCountdown: null,\r\n  intendOutCard: null,\r\n  quitRoomAction: 0,\r\n  readyCountdown: null,\r\n  gold: 0,\r\n  balanceOdds: 0,\r\n}\r\n/**必须大写，不然redux-act这货要自动加序列号 */\r\nexport enum ActionTypes {\r\n  DOMINO_INIT_SELF_SEAT = 'DOMINO_INIT_SELF_SEAT',\r\n  DOMINO_JOIN_SEAT = 'DOMINO_JOIN_SEAT',\r\n  DOMINO_CHANGE_DESK_STATUS = 'DOMINO_CHANGE_DESK_STATUS',\r\n  DOMINO_UPDATE_PLAYER_GAME_DATA = 'DOMINO_UPDATE_PLAYER_GAME_DATA',\r\n  DOMINO_UPDATE_NO_SHOW_CARD = 'DOMINO_UPDATE_NO_SHOW_CARD',\r\n  DOMINO_SHOW_OUT_CARD = \"DOMINO_SHOW_OUT_CARD\",\r\n  DOMINO_GET_CARD = \"DOMINO_GET_CARD\",\r\n  DOMINO_QUIT_SEAT = \"DOMINO_QUIT_SEAT\",\r\n  DOMINO_DEAL = \"DOMINO_DEAL\",\r\n  /**切换出牌用户 */\r\n  DOMINO_CHANGE_OUT_CARD_PLAYER = \"DOMINO_CHANGE_OUT_CARD_PLAYER\",\r\n  /**退出游戏 */\r\n  DOMINO_QUIT_GAME = \"DOMINO_QUIT_GAME\",\r\n  /**退出房间 */\r\n  DOMINO_CLEAR_ROOM_DATA = \"DOMINO_CLEAR_ROOM_DATA\",\r\n  /**出牌倒计时 */\r\n  DOMINO_OUT_COUTNDOWN = \"DOMINO_OUT_COUTNDOWN\",\r\n  /**设置桌面轮廓 */\r\n  DOMINO_SET_DESK_CARD_OUTLINE = \"DOMINO_SET_DESK_CARD_OUTLINE\",\r\n  /**退出房间 */\r\n  DOMINO_QUIT_ROOM = \"DOMINO_QUIT_ROOM\",\r\n  /**游戏中的输赢 */\r\n  DOMINO_GAME_IN_WINLOSS = \"DOMINO_GAME_IN_WINLOSS\",\r\n  /**更新用户缺点 */\r\n  DOMINO_UPDATE_LEWAT = \"DOMINO_UPDATE_LEWAT\",\r\n  /**结算 */\r\n  DOMINO_BALANCE = \"DOMINO_BALANCE\",\r\n  /**修改余额 */\r\n  DOMINO_UPDATE_GOLD = \"DOMINO_UPDATE_GOLD\",\r\n}\r\n\r\n/**定义action的payLoad类型 */\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.DOMINO_INIT_SELF_SEAT ? { player: Player } :\r\n  A extends ActionTypes.DOMINO_JOIN_SEAT ? { seatPostion: SeatPosition, player: Player } :\r\n  A extends ActionTypes.DOMINO_CHANGE_DESK_STATUS ? { status: DeskStatus, countdown: Countdown } :\r\n  A extends ActionTypes.DOMINO_UPDATE_PLAYER_GAME_DATA ? { palyerId: string, playGame: PlayerGameData } :\r\n  A extends ActionTypes.DOMINO_UPDATE_NO_SHOW_CARD ? { noShowCardNumber: number[] } :\r\n  A extends ActionTypes.DOMINO_SHOW_OUT_CARD ? { showOutCard: CardItem } :\r\n  A extends ActionTypes.DOMINO_GET_CARD ? { playerId: string, card?: CardItem } :\r\n  A extends ActionTypes.DOMINO_GET_CARD ? { playerId: string } :\r\n  A extends ActionTypes.DOMINO_DEAL ? { cardItems: CardItem[] } :\r\n  A extends ActionTypes.DOMINO_CHANGE_OUT_CARD_PLAYER ? { seatIndex: number } :\r\n  A extends ActionTypes.DOMINO_OUT_COUTNDOWN ? { outCountdown: Countdown } :\r\n  A extends ActionTypes.DOMINO_CLEAR_ROOM_DATA ? {} :\r\n  A extends ActionTypes.DOMINO_SET_DESK_CARD_OUTLINE ? { intendOutCard: CardItem } :\r\n  A extends ActionTypes.DOMINO_QUIT_ROOM ? {} :\r\n  A extends ActionTypes.DOMINO_GAME_IN_WINLOSS ? { winlossType: WinlossType } :\r\n  A extends ActionTypes.DOMINO_QUIT_SEAT ? { playerId: string } :\r\n  A extends ActionTypes.DOMINO_UPDATE_LEWAT ? { playerId: string, lewatPokers: number[] } :\r\n  A extends ActionTypes.DOMINO_BALANCE ? { balances: BalancePlayer[] } :\r\n  A extends ActionTypes.DOMINO_UPDATE_GOLD ? { gold: number } :\r\n  never;\r\n\r\n/**初始化玩家座位 */\r\nexport const initSelfSeat = reduxAct.createAction(ActionTypes.DOMINO_INIT_SELF_SEAT,\r\n  (player: Player): ActionPayLoad<ActionTypes.DOMINO_INIT_SELF_SEAT> => {\r\n    return { player }\r\n  })\r\n/**其他对手入座 */\r\nexport const joinSeat = reduxAct.createAction(ActionTypes.DOMINO_JOIN_SEAT,\r\n  (seatPostion: SeatPosition, player: Player): ActionPayLoad<ActionTypes.DOMINO_JOIN_SEAT> => {\r\n    return { seatPostion, player }\r\n  })\r\n/**改变玩家准备状态 */\r\nexport const changePlayerStatus = reduxAct.createAction(ActionTypes.DOMINO_UPDATE_PLAYER_GAME_DATA,\r\n  (palyerId: string, playGame: PlayerGameData): ActionPayLoad<ActionTypes.DOMINO_UPDATE_PLAYER_GAME_DATA> => {\r\n    return { palyerId, playGame }\r\n  })\r\n/**改变牌桌状态 */\r\nexport const changeDeskStatus = reduxAct.createAction(ActionTypes.DOMINO_CHANGE_DESK_STATUS,\r\n  (status: DeskStatus, countdown: Countdown): ActionPayLoad<ActionTypes.DOMINO_CHANGE_DESK_STATUS> => {\r\n    return { status, countdown }\r\n  })\r\n/**刷新未显示牌的记录 */\r\nexport const updateNoShowCardNumber = reduxAct.createAction(ActionTypes.DOMINO_UPDATE_NO_SHOW_CARD,\r\n  (noShowCardNumber: number[]): ActionPayLoad<ActionTypes.DOMINO_UPDATE_NO_SHOW_CARD> => {\r\n    return { noShowCardNumber }\r\n  })\r\n/**出牌 */\r\nexport const showOutCard = reduxAct.createAction(ActionTypes.DOMINO_SHOW_OUT_CARD,\r\n  (showOutCard: CardItem): ActionPayLoad<ActionTypes.DOMINO_SHOW_OUT_CARD> => {\r\n    return { showOutCard }\r\n  })\r\n/**获取牌型 */\r\nexport const getCard = reduxAct.createAction(ActionTypes.DOMINO_GET_CARD,\r\n  (playerId: string, card?: CardItem): ActionPayLoad<ActionTypes.DOMINO_GET_CARD> => {\r\n    return { playerId, card }\r\n  })\r\n/**发牌 */\r\nexport const deal = reduxAct.createAction(ActionTypes.DOMINO_DEAL,\r\n  (cardItems: CardItem[]): ActionPayLoad<ActionTypes.DOMINO_DEAL> => {\r\n    return { cardItems }\r\n  })\r\n/**切换出牌用户 */\r\nexport const changeOutCardPlayer = reduxAct.createAction(ActionTypes.DOMINO_CHANGE_OUT_CARD_PLAYER,\r\n  (seatIndex: number): ActionPayLoad<ActionTypes.DOMINO_CHANGE_OUT_CARD_PLAYER> => {\r\n    return { seatIndex }\r\n  })\r\n/**切换出牌用户 */\r\nexport const outCountdown = reduxAct.createAction(ActionTypes.DOMINO_OUT_COUTNDOWN,\r\n  (outCountdown: Countdown): ActionPayLoad<ActionTypes.DOMINO_OUT_COUTNDOWN> => {\r\n    return { outCountdown }\r\n  })\r\nexport const clearRoomData = reduxAct.createAction(ActionTypes.DOMINO_CLEAR_ROOM_DATA,\r\n  (): ActionPayLoad<ActionTypes.DOMINO_CLEAR_ROOM_DATA> => {\r\n    return {}\r\n  })\r\nexport const quitRoom = reduxAct.createAction(ActionTypes.DOMINO_QUIT_ROOM,\r\n  (): ActionPayLoad<ActionTypes.DOMINO_QUIT_ROOM> => {\r\n    return {}\r\n  })\r\nexport const setDeskCardOutline = reduxAct.createAction(ActionTypes.DOMINO_SET_DESK_CARD_OUTLINE,\r\n  (intendOutCard: CardItem): ActionPayLoad<ActionTypes.DOMINO_SET_DESK_CARD_OUTLINE> => {\r\n    return { intendOutCard }\r\n  })\r\nexport const setWinlossType = reduxAct.createAction(ActionTypes.DOMINO_GAME_IN_WINLOSS,\r\n  (winlossType: WinlossType): ActionPayLoad<ActionTypes.DOMINO_GAME_IN_WINLOSS> => {\r\n    return { winlossType }\r\n  })\r\nexport const quitSeat = reduxAct.createAction(ActionTypes.DOMINO_QUIT_SEAT,\r\n  (playerId: string): ActionPayLoad<ActionTypes.DOMINO_QUIT_SEAT> => {\r\n    return { playerId }\r\n  })\r\nexport const updatePlayerLewat = reduxAct.createAction(ActionTypes.DOMINO_UPDATE_LEWAT,\r\n  (playerId: string, lewatPokers: number[]): ActionPayLoad<ActionTypes.DOMINO_UPDATE_LEWAT> => {\r\n    return { playerId, lewatPokers }\r\n  })\r\nexport const sendBalance = reduxAct.createAction(ActionTypes.DOMINO_BALANCE,\r\n  (balances: BalancePlayer[]): ActionPayLoad<ActionTypes.DOMINO_BALANCE> => {\r\n    return { balances }\r\n  })\r\nexport const updateGold = reduxAct.createAction(ActionTypes.DOMINO_UPDATE_GOLD,\r\n  (gold: number): ActionPayLoad<ActionTypes.DOMINO_UPDATE_GOLD> => {\r\n    return { gold }\r\n  })"]}