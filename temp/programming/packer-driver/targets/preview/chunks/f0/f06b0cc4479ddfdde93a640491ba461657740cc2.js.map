{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fruit777/components/Fruit777_RollerPanel.ts"],"names":["_decorator","Label","Node","BaseComponent","GameType","IconEffectType","RollerViewModel","footerViewModel","fruit777_Audio","gameBoardViewModel","sourceManageSeletor","PrefabPathDefine","dataTransfer","DataKeyType","SoundPathDefine","TaskScheduler","Task","StepNumber","config","ccclass","property","Fruit777_RollerPanel","rollerViewModelMap","taskScheduler","stepNumber","propertyNode","props_spr_roller_list","props_Label_jackpot_num","props","rollerMap","iconEffectData","iconEffect","NONE","coord","jackpotAmount","isSortStop","stopMode","events","allRollStop","panelRollEnd","rollerIndex","start","initState","bindEvent","useProps","key","value","length","initRollerList","forEach","roller","index","iconEffectArr","filter","i","map","setProps","comp","getPositionData","linesQueueNum","joinqQueue","done","stop","pre","cur","num","string","formatAmountWithCommas","dataItem","rollerViewModel","mountView","getFile","ROLLER","source","appendTo","rollerType","setEvent","rollEnd","isAllStop","some","item","getRoundEnd","connect","push","gameType","GAME_TYPE","play","MAIN","BG_MUSIC_MAIN","BG_MUSIC_2","doJectpot","labelNum","replace","winning","find","name","minRate","_labelNum","currentGameViewModel","toFixed","e","console","log","destroyCallBack","destoryQueue","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Layout, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nconst { ccclass, property } = _decorator;\r\nimport { DirectionType, GameType, IconEffectType, RollerType } from '../type';\r\nimport RollerViewModel from '../viewModel/RollerViewModel';\r\nimport { footerViewModel, fruit777_Audio, gameBoardViewModel, sourceManageSeletor } from '../index';\r\nimport { PrefabPathDefine } from '../sourceDefine/prefabDefine';\r\nimport { setRollRoundEnd } from '../store/actions/roller';\r\nimport dataTransfer, { DataKeyType } from '../dataTransfer';\r\nimport { SoundPathDefine } from '../sourceDefine/soundDefine';\r\nimport TaskScheduler, { Task } from '../../../utils/TaskScheduler';\r\nimport StepNumber from '../../../utils/StepNumber';\r\nimport config from '../config';\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\trollerMap: RollerType[]\r\n\ticonEffectData?: {\r\n\t\ticonEffect: IconEffectType,\r\n\t\tcoord: number[][]\r\n\t},\r\n\tjackpotAmount?: number,\r\n\tstopMode: 'index' | 'jump',\r\n\t/**是否步停（顺序停止） */\r\n\tisSortStop: boolean\r\n}\r\nexport interface IEvent {\r\n\t/**全部滚动已经停止 */\r\n\tallRollStop: () => void,\r\n\tpanelRollEnd: (rollerIndex: number) => void\r\n}\r\n\r\n@ccclass('Fruit777_RollerPanel')\r\nexport class Fruit777_RollerPanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() { }\r\n\r\n\tpublic rollerViewModelMap: RollerViewModel[] = []\r\n\tprivate taskScheduler: TaskScheduler = new TaskScheduler()\r\n\tprivate stepNumber: StepNumber\r\n\tprotected propertyNode = {\r\n\t\t/**滑槽主板 */\r\n\t\tprops_spr_roller_list: new Node(),\r\n\t\t/**jackpot的额度 */\r\n\t\tprops_Label_jackpot_num: new Label()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\trollerMap: [],\r\n\t\ticonEffectData: {\r\n\t\t\ticonEffect: IconEffectType.NONE,\r\n\t\t\tcoord: []\r\n\t\t},\r\n\t\tjackpotAmount: 0,\r\n\t\tisSortStop: false,\r\n\t\tstopMode: 'index'\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tallRollStop: () => { },\r\n\t\tpanelRollEnd: (rollerIndex: number) => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === \"rollerMap\") {\r\n\t\t\tif (!this.rollerViewModelMap.length) {\r\n\t\t\t\tthis.initRollerList()\r\n\t\t\t} else {\r\n\t\t\t\t// roller组件自己去订阅store的数据，就不从这里更新了\r\n\t\t\t\t// this.rollerViewModelMap.forEach((roller, index) => {\r\n\t\t\t\t// \troller.setProps({ rollerType: this.props.rollerMap[index] })\r\n\t\t\t\t// })\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (key === \"iconEffectData\") {\r\n\t\t\tthis.rollerViewModelMap.forEach((roller, index) => {\r\n\t\t\t\t//index=0情况下=>[0,0][0,2],...=> 获取到一个这种数组:[0,2],描述第几条数组要闪动的图标序号\r\n\t\t\t\tconst iconEffectArr = this.props.iconEffectData.coord.filter(i => i[0] === index).map(i => i[1])\r\n\t\t\t\tif (iconEffectArr.length) {\r\n\t\t\t\t\t//分配到各个滑槽\r\n\t\t\t\t\troller.setProps({\r\n\t\t\t\t\t\ticonEffectData: {\r\n\t\t\t\t\t\t\ticonEffectArr,\r\n\t\t\t\t\t\t\ticonEffect: this.props.iconEffectData.iconEffect\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\troller.setProps({\r\n\t\t\t\t\t\ticonEffectData: {\r\n\t\t\t\t\t\t\ticonEffectArr: [],\r\n\t\t\t\t\t\t\ticonEffect: IconEffectType.NONE\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (key === \"jackpotAmount\") {\r\n\t\t\tif (footerViewModel.comp.getPositionData().value * config.linesQueueNum <= 1000) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.taskScheduler.joinqQueue(new Task((done) => {\r\n\t\t\t\tthis.stepNumber && this.stepNumber.stop()\r\n\t\t\t\tthis.stepNumber = new StepNumber(value.pre, value.cur, (num) => {\r\n\t\t\t\t\t// this.propertyNode && this.propertyNode.props_Label_up_goldNum && (this.propertyNode.props_Label_up_goldNum.string = (+num.toFixed(0)).formatAmountWithCommas())\r\n\t\t\t\t\tthis.propertyNode && this.propertyNode.props_Label_jackpot_num && (this.propertyNode.props_Label_jackpot_num.string = num.formatAmountWithCommas())\r\n\t\t\t\t}, () => done())\r\n\t\t\t\tthis.stepNumber.start()\r\n\t\t\t}))\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initRollerList() {\r\n\t\tthis.props.rollerMap.forEach((dataItem, index) => {\r\n\t\t\tconst rollerViewModel = new RollerViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.ROLLER).source).appendTo(this.propertyNode.props_spr_roller_list).setProps({\r\n\t\t\t\trollerType: dataItem\r\n\t\t\t}).setEvent({\r\n\t\t\t\trollEnd: (rollerIndex) => {\r\n\t\t\t\t\tthis.events.panelRollEnd(rollerIndex)\r\n\t\t\t\t\tlet isAllStop = !this.rollerViewModelMap.some(item => !item.comp.getRoundEnd())\r\n\t\t\t\t\tisAllStop && this.events.allRollStop()\r\n\t\t\t\t}\r\n\t\t\t}).connect()\r\n\t\t\tthis.rollerViewModelMap.push(rollerViewModel)\r\n\t\t})\r\n\t\tconst gameType = dataTransfer(DataKeyType.GAME_TYPE)\r\n\t\tfruit777_Audio.stop()\r\n\t\tfruit777_Audio.play(gameType === GameType.MAIN ? SoundPathDefine.BG_MUSIC_MAIN : SoundPathDefine.BG_MUSIC_2, true)\r\n\t}\r\n\r\n\tpublic doJectpot() {\r\n\t\t// 处理jeckpot的情况\r\n\t\ttry {\r\n\t\t\tif (footerViewModel.comp.getPositionData().value * config.linesQueueNum <= 1000) {\r\n\t\t\t\tif (this.propertyNode) {\r\n\t\t\t\t\tconst labelNum = (this.propertyNode.props_Label_jackpot_num as Label)\r\n\t\t\t\t\t/**可能是直接打开宝箱游戏，不会初始化主页 */\r\n\t\t\t\t\tif (labelNum) {\r\n\t\t\t\t\t\tconst pre = labelNum.string.replace(/,/g, '')\r\n\t\t\t\t\t\tconst cur = (footerViewModel.comp.getPositionData().value * config.linesQueueNum * config.winning.find(i => i.name === 'jackpot').minRate)\r\n\t\t\t\t\t\tthis.taskScheduler.joinqQueue(new Task((done) => {\r\n\t\t\t\t\t\t\tthis.stepNumber && this.stepNumber.stop()\r\n\t\t\t\t\t\t\tthis.stepNumber = new StepNumber(+pre, cur, (num) => {\r\n\t\t\t\t\t\t\t\tif (this.propertyNode) {\r\n\t\t\t\t\t\t\t\t\tconst _labelNum = this.propertyNode.props_Label_jackpot_num\r\n\t\t\t\t\t\t\t\t\t_labelNum && gameBoardViewModel && gameBoardViewModel.currentGameViewModel && (_labelNum.string = (+num.toFixed(0)).formatAmountWithCommas())\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, () => done())\r\n\t\t\t\t\t\t\tthis.stepNumber.start()\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t}\r\n\r\n\tprotected destroyCallBack(): void {\r\n\t\tthis.taskScheduler.destoryQueue()\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.doJectpot()\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n"]}