{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/egypt/controller/BaseViewLayer.ts"],"names":["bindNode","path","type","obj","name","_bindNode","Button","Component","_decorator","find","ccclass","property","BaseViewLayer","layerName","msgList","_onFlush","getViewNode","node","start","registerEvents","searchNode","root","child","getChildByName","childList","children","k","length","searchCompontent","tempNode","getComponent","console","error","addTouchEndEventListener","btn","customData","clickEvents","clickEventHandler","EventHandler","target","handler","customEventData","push","autoAddButtonListener","btns","getComponentsInChildren","forEach","unRegisterEvents","onDestroy","onButtonTouchEnd","event","onLoad","startInterval","dt","setInterval","onFlush","forOnce","evtName","timeout","Promise","callback","scheduleOnce","off","once","delay","interval","data","key","item","res","addComponent"],"mappings":"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","sourcesContent":["/**视图基类 slot内存占用小 释放资源暂未实现 */\r\n\r\nimport { Node, Button, Component, _decorator, __private, find } from \"cc\";\r\n// import EventManager from \"../manager/EventManager\";\r\n// import { Tools } from \"../tools/Tools\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass\r\nexport default class BaseViewLayer extends Component {\r\n    public layerName = \"\";\r\n\r\n    protected msgList = {};\r\n\r\n    public getViewNode(): Node {\r\n        return this.node;\r\n    }\r\n\r\n    protected start(): void {\r\n        // Log.w(\"BaseViewLayer ===============>  start \")\r\n        this.registerEvents();\r\n    }\r\n\r\n    /**查找子节点  */\r\n    protected searchNode(name: string, root: Node): Node {\r\n        if (name == root.name) return root;\r\n\r\n        let child: any = root.getChildByName(name);\r\n        if (child) return child;\r\n        // let childList: Array<any> = root.children;\r\n        let childList: ReadonlyArray<Node> = root.children;\r\n        for (let k = 0; k < childList.length; ++k) {\r\n            let node: any = childList[k];\r\n            child = this.searchNode(name, node);\r\n            if (child) {\r\n                return child;\r\n            }\r\n        }\r\n        return child;\r\n    }\r\n\r\n    /**查找子节点上特定组件 */\r\n    protected searchCompontent<T extends Component>(name: string, root: Node, type: __private._types_globals__Constructor<T> | __private._types_globals__AbstractedConstructor<T>): T {\r\n        let tempNode = this.searchNode(name, root);\r\n        if (tempNode) {\r\n            return tempNode.getComponent(type);\r\n        }\r\n        console.error(\"当前node没有该组件\", name);\r\n        return null;\r\n    }\r\n\r\n    /**统一按钮回调*/\r\n    protected addTouchEndEventListener(btn: Button, customData: string = \"\"): void {\r\n        if (btn.clickEvents.length > 0) return;\r\n\r\n        var clickEventHandler = new Component.EventHandler();\r\n        clickEventHandler.target = this.node;\r\n        // let scriptName = Tools.getScriptName(this.node.getComponent(BaseViewLayer).name);\r\n        // clickEventHandler.component = scriptName;\r\n        clickEventHandler.handler = \"onButtonTouchEnd\";\r\n        clickEventHandler.customEventData = customData;\r\n\r\n        btn.clickEvents.push(clickEventHandler);\r\n    }\r\n\r\n    protected autoAddButtonListener(): void {\r\n        let btns = this.node.getComponentsInChildren(Button);\r\n        btns.forEach(btn => {\r\n            this.addTouchEndEventListener(btn);\r\n        })\r\n    }\r\n\r\n    protected registerEvents(): void {\r\n        // EventManager.getInstance().addEvents(this.msgList, this);\r\n    }\r\n\r\n    protected unRegisterEvents(): void {\r\n        // EventManager.getInstance().removeEvents(this.msgList, this);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.unRegisterEvents();\r\n    }\r\n\r\n    protected onButtonTouchEnd(event, customData): void {\r\n\r\n    }\r\n\r\n    onLoad(){\r\n        BaseViewLayer.bindNode(this)\r\n    }\r\n\r\n    //定时器\r\n    protected _onFlush: any = null\r\n\r\n    protected startInterval(dt: number = 1000 / 60) {\r\n        //定时器\r\n        this._onFlush = setInterval(() => {\r\n            this.onFlush(dt)\r\n        }, dt)\r\n    }\r\n\r\n    protected onFlush(dt?: number) { }\r\n\r\n    /* 异步函数，一旦事件触发 */\r\n    forOnce(target: any, evtName: string, timeout?: number) {\r\n        return new Promise((callback) => {\r\n            if (timeout) {\r\n                this.scheduleOnce(callback, timeout)\r\n            }\r\n            target.off(evtName, callback, this)\r\n            target.once(evtName, callback, this)\r\n        })\r\n    }\r\n\r\n    /* 异步函数，延迟调用 */\r\n    delay(interval: number) {\r\n        return new Promise((callback) => {\r\n            this.scheduleOnce(callback, interval)\r\n        })\r\n    }\r\n\r\n    static bindNode(obj: any) {\r\n        const data: bindInfo = obj._bindNode\r\n        for (const key in data) {\r\n            const item = data[key]\r\n            const res: Node =\r\n                item.path == \"/\" ? obj.node : find(item.path, obj.node)!\r\n\r\n            if (!res) {\r\n                // Log.e(\"res>>>>>>\", item.path, obj.node)\r\n            }\r\n            if (item.type) {\r\n                obj[key] =\r\n                    res.getComponent(item.type) || res.addComponent(item.type)\r\n            } else {\r\n                obj[key] = res\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 绑定节点或组件到变量\r\n * @param path 节点路径，如果为/指根节点\r\n * @param type 组件类型，为空代表绑定节点。如果有值且节点没有对应组件，会创建组件绑定到节点\r\n * @returns\r\n */\r\nexport function bindNode<T extends Component>(\r\n    path: string = \"\",\r\n    type?: new () => T\r\n) {\r\n    return (obj: any, name: string) => {\r\n        if (!(\"_bindNode\" in obj)) {\r\n            obj._bindNode = {}\r\n        }\r\n        obj._bindNode[name] = {\r\n            path: path || name,\r\n            type,\r\n        }\r\n    }\r\n}\r\n\r\nexport type bindInfo = {\r\n    [key: string]: { path: string; type?: new () => Component }\r\n}"]}