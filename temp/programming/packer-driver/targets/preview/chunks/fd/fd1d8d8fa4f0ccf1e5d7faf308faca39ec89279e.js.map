{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenix/Slot/Component/phoenix_SlotPanel.ts"],"names":["_decorator","Label","Node","tween","UIOpacity","phoenix_BaseComponent","NumberRoller","getSocketProxy","ccclass","property","phoenix_SlotPanel","majorNumberRoller","miniNumberRoller","jackTotalNumberRoller","start","bindUI","showSlot","getTransferGameInfo","gameType","bindEvent","jackIsShow","isBgShow","state","lostHidden","setLost","total","node","getChildByName","getComponent","string","hideSlot","isMain","isSlow","done","slotListPanelNode","upBgNode","slotBgNode","getSlotBgNode","active","to","opacity","call","isValid","_nodes","set_jack_total","num","setGod_MAJOR","mini","major","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Label, Node, tween, UIOpacity } from 'cc';\r\nimport phoenix_BaseComponent from \"./phoenix_BaseComponent\";\r\nimport { NumberRoller } from '../utils/NumberRoller'\r\nimport { getSocketProxy } from \"../phoenix_utils\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('phoenix_SlotPanel')\r\nexport class phoenix_SlotPanel extends phoenix_BaseComponent {\r\n    @property(Label)\r\n    majorLabel: Label = null\r\n    @property(Label)\r\n    miniLabel: Label = null\r\n    @property(Label)\r\n    jackTotal: Label = null\r\n    @property(Node)\r\n    btn_jackPot: Node = null\r\n    private majorNumberRoller: NumberRoller = new NumberRoller();\r\n    private miniNumberRoller: NumberRoller = new NumberRoller();\r\n    private jackTotalNumberRoller: NumberRoller = new NumberRoller();\r\n\r\n    start() {\r\n        // this.btn_jackPot.on(Node.EventType.TOUCH_END, this.jackIsShow, this)\r\n    }\r\n\r\n    protected bindUI(): void {\r\n        // this.isBgShow(getSocketProxy().getTransferGameInfo().gameType(0) == 0)\r\n\r\n        this.showSlot(getSocketProxy().getTransferGameInfo().gameType(0) == 0, false, null);\r\n\r\n    }\r\n\r\n    protected bindEvent(): void {\r\n\r\n    }\r\n\r\n    public jackIsShow() {\r\n\r\n    }\r\n    public isBgShow(state) {\r\n        // this._nodes['spr_phoenix_sgBg'].active = state\r\n        // this._nodes['spr_smallGame_multipleBg'].active = !state\r\n    }\r\n    public lostHidden(state) {\r\n        // this._nodes['slotListPanel'].active = state\r\n    }\r\n    public setLost(total) {\r\n        let node = this.node.getChildByName('spr_smallGame_multipleBg').getChildByName('Label_smallGame_multiple').getComponent(Label)\r\n        total > 0 ? node.string = 'X' + total : node.string = ''\r\n    }\r\n\r\n    /**\r\n     * 隐藏插槽\r\n     * @param isSlow 是否缓动\r\n     * @param done 完成函数\r\n     */\r\n    public hideSlot(isMain: boolean, isSlow: boolean, done) {\r\n        const slotListPanelNode = this.node.getChildByName(\"slotListPanel\");\r\n        const upBgNode = this.node.getChildByName(\"spr_phoenix_upBg\");\r\n        const slotBgNode = this.getSlotBgNode(isMain);\r\n\r\n        this.node.getChildByName(\"spr_smallGame_multipleBg\").active = false;\r\n        if (isSlow) {\r\n            tween(slotBgNode.getComponent(UIOpacity)).to(0.3, { opacity: 0 }).start();\r\n            tween(slotListPanelNode.getComponent(UIOpacity)).to(0.3, { opacity: 0 }).start();\r\n            tween(upBgNode.getComponent(UIOpacity)).to(0.3, { opacity: 0 }).call(() => {\r\n                if (!this.node.isValid) return;\r\n                done && done();\r\n                slotBgNode.active = false;\r\n                slotListPanelNode.active = false;\r\n                upBgNode.active = false;\r\n            }).start();\r\n        } else {\r\n            slotBgNode.active = false;\r\n            slotListPanelNode.active = false;\r\n            upBgNode.active = false;\r\n            done && done();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示插槽\r\n     * @param isMain \r\n     * @param isSlow \r\n     * @param done \r\n     */\r\n    public showSlot(isMain: boolean, isSlow: boolean, done) {\r\n        const slotBgNode = this.getSlotBgNode(isMain);\r\n        slotBgNode.active = true;\r\n        slotBgNode.getComponent(UIOpacity).opacity = 255;\r\n        \r\n        const slotListPanelNode = this.node.getChildByName(\"slotListPanel\");\r\n        const upBgNode = this.node.getChildByName(\"spr_phoenix_upBg\");\r\n        slotListPanelNode.active = true;\r\n        upBgNode.active = true;\r\n        slotListPanelNode.getComponent(UIOpacity).opacity = 255;\r\n        upBgNode.getComponent(UIOpacity).opacity = 255;\r\n\r\n        // 倍数气泡\r\n        this._nodes['spr_smallGame_multipleBg'].active = !isMain;\r\n\r\n        done && done();\r\n    }\r\n\r\n    private getSlotBgNode(isMain: boolean) {\r\n        // 获得背景的同时，把另外一个背景隐藏了\r\n        this.node.getChildByName(!isMain ? 'spr_phoenix_bg' : 'spr_phoenix_sgBg').active = false;\r\n        return this.node.getChildByName(isMain ? 'spr_phoenix_bg' : 'spr_phoenix_sgBg');\r\n    }\r\n\r\n    public set_jack_total(num) {\r\n        // let startNumberMajor = parseInt(this.jackTotal.string.replace(/,/g, \"\"));\r\n        // this.jackTotalNumberRoller.startRolling(startNumberMajor, num, 500, this.jackTotal)\r\n    }\r\n\r\n    public setGod_MAJOR(mini: number, major: number) {\r\n        // let startNumberMini = parseInt(this.miniLabel.string.replace(/,/g, \"\"));\r\n        // let startNumberMajor = parseInt(this.majorLabel.string.replace(/,/g, \"\"));\r\n        // this.majorNumberRoller.startRolling(startNumberMini, mini, 500, this.miniLabel)\r\n        // this.miniNumberRoller.startRolling(startNumberMajor, major, 500, this.majorLabel);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        // this.majorNumberRoller.update(deltaTime); // 手动触发滚动逻辑\r\n        // this.miniNumberRoller.update(deltaTime); // 手动触发滚动逻辑\r\n        // this.jackTotalNumberRoller.update(deltaTime); // 手动触发滚动逻辑\r\n    }\r\n}\r\n\r\n"]}