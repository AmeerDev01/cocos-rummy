{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenix/Slot/Mediator/RollerMediator.ts"],"names":["RollerMediator","find","Prefab","CommandDefine","PrefabDefine","BaseMediator","BgMediatorConst","BgCommandConst","getBgProxy","getSocketProxy","goldState","config","ApplicationGlobal","AudioManager","SceneBgMusic","TaskScheduler","Task","SubGameType","ROLL_TIME","RollerMediatorConst","constructor","mediatorName","viewComponent","taskScheduler","sourceMap","key","path","SLOT_PANEL","sourceType","source","stopRollHandle","stopTimeId","listNotificationConst","name","INIT_ROLLER_PANEL","handler","notification","gameType","freeGameCount","getBody","_gameRunner","getTransferGameInfo","init","sendNotification","THESLOTISHIDDEN","subGameType","MAIN","state","PHOENIX_SGCHOOSE","CHANGE_BG","getInstance","playMusic","gameBg","mainBg","REMOVE_THECHEST_LAYER","iconStay","rollerComp","wrapView","getChildByName","getComponent","togglesALLLayer","REPLACETHESLOTBACKGROUND","slotPanel","isBgShow","done","isSlow","hideSlot","showSlot","BEGIN_ROLL","stopIndex","targetList","dockIocn","startAllRoll","isSpeed","iconDock","setDisable","stopQueue","i","finalEnd","fbp","nextGame","getIsChangeGameRunning","win","getFreeGameAmount","joinqQueue","SHOW_SMALL_GAME_RESULT","BG","GAME_TYPE_CHANGE","TOGGLETHESTARTBUTTON","autoLaunch","flickerFn","forEach","item","iconFlicker","length","clearStatus","setTimeout","flashLine","res","index","task","window","cb","order","SHOW_DIALOG_WIN","DISPLAYSTHEINGOTSMULTIPLIER","OtherGameAttributesVo","getOtherGameAttributesVo","yuanBaoSpecialEffect","playTheIngotsIconAnimation","yuanBaoPosition","getLastGame","SUB_GAME1","setLost","phoenixMagnification","getNumberOfRounds","setGameCount","setGameTotalNumber","totalFreeGameCount","UPDATE_BTN_LABEL","isManualStop","undefined","stopAllRoll","UPDATE_USER_GOLD","OLD_GOLD","getIconStay","UPDATE_CURRENT_SCORE","console","log","END_ROLL","clearTimeout","UPDATE_JACKPOT","baseBetAmount","lineCount","setGod_MAJOR","winning","maxRate","UPDATE_JACKPOT_TOTAL","UNINSTALL_ROLLER_PANEL","uninstall","mainPrefabSource","isFlickerDone","getSource","mainPanel","addChild","isInit","listenerEvent","AUTO_LAUNCH"],"mappings":"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","sourcesContent":["import { find, Node, Prefab } from \"cc\";\r\nimport { INotification } from \"../../Framework/interfaces/INotification\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { PrefabDefine } from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\";\r\nimport { IlistTypeHander } from \"../types/IlistTypeHander\";\r\nimport { ISourceFile } from \"../types/ISourceFile\";\r\nimport { phoenix_RollerPanel } from \"../Component/phoenix_RollerPanel\";\r\nimport { phoenix_SlotPanel } from \"../Component/phoenix_SlotPanel\";\r\nimport { BgMediatorConst } from \"./BgMediator\";\r\nimport { BgCommandConst } from \"../Command/BgCommand\";\r\nimport { getBgProxy, getSlotProxy, getSocketProxy } from \"../phoenix_utils\";\r\nimport { goldState } from \"../Proxy/SocketProxy\";\r\nimport config from \"../phoenix_config\";\r\nimport { ApplicationGlobal } from \"../Const/ApplicationGlobal\";\r\nimport { AudioManager, SceneBgMusic, SoundList } from \"../Managr/AudioManager\";\r\nimport TaskScheduler, { Task } from \"../../../../utils/TaskScheduler\";\r\nimport { SubGameType } from \"../Proxy/SocketProxy\";\r\nimport { AutoLaunchType } from \"../Repositories/BgRepository\";\r\nimport { ROLL_TIME } from \"../../../../utils/SlotSpeedConfig\";\r\nexport enum RollerMediatorConst {\r\n    /**初始化滑槽面板 */\r\n    INIT_ROLLER_PANEL = \"initRollerPanel\",\r\n    /**卸载滑槽游戏面板 */\r\n    UNINSTALL_ROLLER_PANEL = \"uninstallRollerPanel\",\r\n    /**开始滑动 */\r\n    BEGIN_ROLL = \"beginRoll\",\r\n    /**结束滑动 */\r\n    END_ROLL = \"endRoll\",\r\n    /* 闪动停止*/\r\n    FORCE_STOP = 'forceStop',\r\n    /*更新状态游戏*/\r\n    REMOVE_THECHEST_LAYER = 'removeThechestLayer',\r\n    /*更新mj*/\r\n    UPDATE_JACKPOT = 'update_jackpot',\r\n    UPDATE_JACKPOT_TOTAL = \"UPDATE_JACKPOT_TOTAL\",\r\n    // 更换插槽图片\r\n    REPLACETHESLOTBACKGROUND = 'replacetheslotbackground',\r\n    // 隐藏插槽\r\n    THESLOTISHIDDEN = 'theslotishidden',\r\n}\r\n\r\nexport default class RollerMediator extends BaseMediator {\r\n    public taskScheduler: TaskScheduler = new TaskScheduler()\r\n    public sourceMap: Array<ISourceFile> = [\r\n        {\r\n            key: 'slotPanel',\r\n            path: PrefabDefine.SLOT_PANEL,\r\n            sourceType: Prefab,\r\n            source: null\r\n        }\r\n    ]\r\n    private stopRollHandle;\r\n    private stopTimeId;\r\n    protected listNotificationConst: Array<IlistTypeHander<RollerMediator>> = [\r\n        {\r\n            name: RollerMediatorConst.INIT_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                const { gameType, freeGameCount } = notification.getBody() || {}\r\n                //在初始化界面之前要初始化数据 'iconRollerQueue' | 'largeIconRollerQueue'\r\n                const _gameRunner: SubGameType = gameType || getSocketProxy().getTransferGameInfo().gameType()\r\n                this.init();\r\n                //getBgProxy().setDisable(false)\r\n                // window.setTimeout(() => {\r\n                //     // 可能有动画\r\n                //     this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                // }, 2500)\r\n\r\n                if (gameType === 1) {\r\n                    if (freeGameCount === 0) {\r\n                        this.sendNotification(RollerMediatorConst.THESLOTISHIDDEN, { subGameType: SubGameType.MAIN, state: true })\r\n                        this.sendNotification(BgMediatorConst.PHOENIX_SGCHOOSE)\r\n                        this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType: SubGameType.MAIN })\r\n                    } else {\r\n                        this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType: _gameRunner })\r\n                    }\r\n                    AudioManager.getInstance().playMusic(SceneBgMusic.gameBg, true);\r\n                } else {\r\n                    AudioManager.getInstance().playMusic(SceneBgMusic.mainBg, true);\r\n                    this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType: _gameRunner })\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.REMOVE_THECHEST_LAYER,\r\n            handler(notification: INotification) {\r\n                let { iconStay } = notification.getBody()\r\n                const rollerComp = (<phoenix_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"phoenix_RollerPanel\"));\r\n                rollerComp.togglesALLLayer(iconStay === 1)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.REPLACETHESLOTBACKGROUND,\r\n            handler(notification: INotification) {\r\n                let { state } = notification.getBody()\r\n                const slotPanel = (<phoenix_SlotPanel>this.wrapView?.getComponent(\"phoenix_SlotPanel\"))\r\n                slotPanel.isBgShow(state)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.THESLOTISHIDDEN,\r\n            handler(notification: INotification) {\r\n                let { subGameType, state, done, isSlow } = notification.getBody()\r\n                const slotPanel = (<phoenix_SlotPanel>this.wrapView.getComponent(\"phoenix_SlotPanel\"))\r\n                // slotPanel.lostHidden(state)\r\n                if (state) {\r\n                    slotPanel.hideSlot(subGameType === SubGameType.MAIN, isSlow, done);\r\n                } else {\r\n                    slotPanel.showSlot(subGameType === SubGameType.MAIN, isSlow, done);\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.BEGIN_ROLL,\r\n            handler(notification: INotification) {\r\n                const { stopIndex, targetList, dockIocn } = notification.getBody();\r\n                // console.log('BEGIN_ROLL',notification.getBody())\r\n                const rollerComp = (<phoenix_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"phoenix_RollerPanel\"));\r\n                rollerComp.startAllRoll(stopIndex, getBgProxy().isSpeed());\r\n                rollerComp.iconDock('coord', dockIocn)\r\n                getBgProxy().setDisable(true)\r\n                this.taskScheduler.stopQueue(false)\r\n                //闪动图标\r\n                let i = 0\r\n\r\n                const finalEnd = () => {\r\n                    // 最后闪动完成之后执行下一步的动作\r\n                    const fbp = getBgProxy();\r\n                    const nextGame = fbp.getIsChangeGameRunning();\r\n                    const win = getSocketProxy().getTransferGameInfo().getFreeGameAmount()\r\n\r\n                    // 如果是从小游戏切换到主游戏就展示结算面板\r\n                    if (nextGame !== -1 && nextGame === SubGameType.MAIN) {\r\n                        this.taskScheduler.joinqQueue(new Task(done => {\r\n                            this.sendNotification(BgMediatorConst.SHOW_SMALL_GAME_RESULT, { win, done });\r\n                        })).joinqQueue(new Task(done => {\r\n                            this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                            this.sendNotification(RollerMediatorConst.THESLOTISHIDDEN, { subGameType: SubGameType.MAIN, state: false, done })\r\n                            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true });\r\n                            this.autoLaunch();\r\n                        }));\r\n                    } else {\r\n                        this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                        this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true });\r\n                        if (nextGame === -1) {\r\n                            this.autoLaunch();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const flickerFn = () => {\r\n                    targetList.forEach(item => {\r\n                        rollerComp.iconFlicker('coord', item, true, () => {\r\n                            i++\r\n                            if (i === targetList.length) { //全部闪动完成\r\n                                done(() => {\r\n                                    rollerComp.clearStatus()\r\n                                    setTimeout(() => {\r\n                                        flashLine()\r\n                                        getBgProxy().setDisable(false)\r\n                                        finalEnd();\r\n                                    }, 1000)\r\n                                })\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n                // let timer: number | undefined;\r\n                const flashLine = () => {\r\n                    targetList.forEach((res, index) => {\r\n                        const task = new Task((done) => {\r\n                            rollerComp.iconFlicker('coord', targetList[index], false)\r\n                            //闪烁2秒钟就结束\r\n                            window.setTimeout(() => done(), 2000)\r\n                        })\r\n                        this.taskScheduler.joinqQueue(task, false)\r\n                    })\r\n                }\r\n                const done = (cb?) => {\r\n                    this.taskScheduler.joinqQueue(new Task((done) => {\r\n                        this.sendNotification(CommandDefine.BG, { order: \"curr\", done }, BgMediatorConst.SHOW_DIALOG_WIN)\r\n                    })).joinqQueue(new Task((done) => {\r\n                        // 元宝播放大奖\r\n                        // 是否播放元宝动画\r\n                        this.sendNotification(BgMediatorConst.DISPLAYSTHEINGOTSMULTIPLIER, { done })\r\n                        let OtherGameAttributesVo = getSocketProxy().getTransferGameInfo().getOtherGameAttributesVo()\r\n                        if (OtherGameAttributesVo.yuanBaoSpecialEffect) { // 闪动元宝\r\n                            const rollerComp = (<phoenix_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"phoenix_RollerPanel\"));\r\n                            rollerComp.playTheIngotsIconAnimation(OtherGameAttributesVo.yuanBaoPosition)\r\n                        }\r\n                        const fbp = getBgProxy();\r\n                        if (fbp.getLastGame() == SubGameType.SUB_GAME1) {\r\n                            const slotPanel = (<phoenix_SlotPanel>this.wrapView.getComponent(\"phoenix_SlotPanel\"))\r\n                            slotPanel.setLost(OtherGameAttributesVo.phoenixMagnification)\r\n                            let getNumberOfRounds = getSocketProxy().getTransferGameInfo().getNumberOfRounds()\r\n                            getBgProxy().setGameCount(getNumberOfRounds)\r\n                            getBgProxy().setGameTotalNumber(OtherGameAttributesVo.totalFreeGameCount)\r\n                            this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL, { state: false })\r\n                        } else {\r\n                            // done()\r\n                            // this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true })\r\n                        }\r\n                        // if (fbp.getNextGame) {\r\n                        done()\r\n                        // this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true });\r\n                        // }\r\n                    })).joinqQueue(new Task((done) => {\r\n                        cb && cb()\r\n                        done()\r\n                    }))\r\n                }\r\n                this.stopRollHandle = (isManualStop: boolean=false) => {\r\n                    this.stopRollHandle = undefined;\r\n                    this.stopTimeId = undefined;\r\n                    rollerComp && rollerComp.stopAllRoll(isManualStop, () => {\r\n                        this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD, { state: goldState.OLD_GOLD })\r\n                        //更新游戏奖励\r\n                        this.sendNotification(RollerMediatorConst.REMOVE_THECHEST_LAYER, { iconStay: getSocketProxy().getTransferGameInfo().getIconStay() })\r\n                        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n                        // // 开始轮流闪动图标\r\n                        rollerComp.clearStatus()\r\n                        console.log('BEGIN_ROLL_______',targetList)\r\n                        if (!targetList||!targetList.length) {\r\n                            done(() => {\r\n                                const yuanBaoSpecialEffect = getSocketProxy().getTransferGameInfo().getOtherGameAttributesVo().yuanBaoSpecialEffect\r\n                                yuanBaoSpecialEffect ? window.setTimeout(() => finalEnd(), 500) : finalEnd();\r\n                            })\r\n                            getBgProxy().setDisable(false)\r\n                        } else {\r\n                            flickerFn()\r\n                        }\r\n                    })\r\n                }\r\n                // 多少秒钟后开始停止转动\r\n                this.stopTimeId = window.setTimeout(this.stopRollHandle, ROLL_TIME)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.END_ROLL,\r\n            handler(notification: INotification) {\r\n                this.stopTimeId && window.clearTimeout(this.stopTimeId)\r\n                this.stopRollHandle && this.stopRollHandle(true);\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UPDATE_JACKPOT,\r\n            handler(notification: INotification) {\r\n                const { baseBetAmount, lineCount } = notification.getBody();\r\n                const slotPanel = (<phoenix_SlotPanel>this.wrapView?.getComponent(\"phoenix_SlotPanel\"))\r\n                if (slotPanel) {\r\n                    slotPanel.setGod_MAJOR(config.winning[0].maxRate * baseBetAmount, config.winning[1].maxRate * baseBetAmount)\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UPDATE_JACKPOT_TOTAL,\r\n            handler(notification: INotification) {\r\n                // const { total } = notification.getBody();\r\n                // const slotPanel = (<phoenix_SlotPanel>this.wrapView?.getComponent(\"phoenix_SlotPanel\"))\r\n                // if (slotPanel) {\r\n                //     slotPanel.set_jack_total(total)\r\n                // }\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UNINSTALL_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                // console.log(\"卸载滑槽游戏\")\r\n                const rollerComp = (<phoenix_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"phoenix_RollerPanel\"));\r\n                rollerComp.uninstall()\r\n            }\r\n        },\r\n    ]\r\n    protected mainPrefabSource = {\r\n        key: 'slotPanel',\r\n        path: PrefabDefine.SLOT_PANEL,\r\n        sourceType: Prefab,\r\n        source: null\r\n    }\r\n    private isFlickerDone: boolean = true\r\n\r\n    public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n        super(mediatorName, viewComponent)\r\n    }\r\n\r\n    protected init(): void {\r\n        //this.viewComponent.addChild(this.getSource(PrefabDefine.SLOT_PANEL))\r\n        this.wrapView = this.getSource(this.sourceMap[0].path)\r\n        // this.viewComponent.getChildByName(\"gameArea\").addChild(this.wrapView);\r\n        find(\"slotBg/gameArea\", ApplicationGlobal.mainPanel).addChild(this.wrapView)\r\n        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE, { isInit: true })\r\n        this.listenerEvent()\r\n    }\r\n\r\n    protected listenerEvent() {\r\n        const slotPanel = (<phoenix_SlotPanel>this.wrapView?.getComponent(\"phoenix_SlotPanel\"))\r\n        // slotPanel.btn_jackPot.on(Node.EventType.TOUCH_END, () => {\r\n        //     this.sendNotification(BgMediatorConst.HANDOFF_JACKPOT)\r\n        // }, this)\r\n    }\r\n\r\n    private autoLaunch() {\r\n        const fbp = getBgProxy();\r\n        // if (fbp.getIsChangeGameRunning() === -1) {\r\n        // 没有跳转游戏才自动发\r\n        this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n        // }\r\n    }\r\n}\r\n"]}