{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fruit777/viewModel/GameBoardViewModel.ts"],"names":["instantiate","sys","ViewModel","StoreInject","SKT_MAG_TYPE","sktInstance","sktMsgListener","GameType","RollerPanelViewModel","NORMAL_MAG_TYPE","fruit777_Audio","msgListener","sourceManageSeletor","PrefabPathDefine","changeGame","changeProfit","changeViewGame","resetStore","setSubGameTimes","updateBalance","updateJackpotAmount","updateSubGameTimes","getStore","BoxPanelViewModel","dataTransfer","DataKeyType","resetData","setData","TaskScheduler","Task","EffectType","setRollRoundEnd","SoundPathDefine","global","lang","config","GameBoardViewModel","constructor","currentGameViewModel","changeGameTypeTask","flyFruitNode","currGameType","NONE","taskScheduler","begin","addOnce","AUTH","data","dispatch","gameType","bl","freeGameCount","freeGameAmount","BALANCE","SUBGAME_TIMES","dispath","CHANGE_GAME","MAIN","FREE_GAME_AMOUNT","localStorage","setItem","JSON","stringify","e","closeSubGame","confirmContent","write","k","InitGameModule","GameBoardInit","sendSktMessage","token","getItem","gameId","isReSend","add","JACKPOT","BALANCE_UPDATE","VACATETHEROOM","UpdateModule","GameNotice","placeStr","LAUNCHER_BET","error","GAME_TYPE","setEvent","changeGameHandler","lastGameType","console","log","done","playOneShot","TRANSFER","getFile","FLY_FRUITS","source","viewNode","addChild","comp","scheduleOnce","unMount","EFFECT1","then","subscribeDone","getPropertyNode","mountView","MAIN_GAME","appendTo","getGameNode","effectType","EFFECT_FADE","effectDone","connect","SUBGAME1","BOX_GAME","SUBGAME2","destroy","joinqQueue","unMountCallBack","inject","state","game"],"mappings":"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","sourcesContent":["import { Game, Node, instantiate, sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { Fruit777_GameBoard, IProps, IEvent } from \"../components/Fruit777_GameBoard\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { GameType } from \"../type\"\r\nimport RollerPanelViewModel from \"./RollerPanelViewModel\"\r\nimport { NORMAL_MAG_TYPE, fruit777_Audio, msgListener, sourceManageSeletor } from \"../index\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { changeGame, changeProfit, changeViewGame, resetStore, setSubGameTimes, updateBalance, updateJackpotAmount, updateSubGameTimes } from \"../store/actions/game\"\r\nimport { getStore } from \"../store\"\r\nimport BoxPanelViewModel from \"./BoxPanelViewModel\"\r\nimport dataTransfer, { DataKeyType, resetData, setData } from \"../dataTransfer\"\r\nimport TaskScheduler, { Task, TaskSchedulerDefault } from \"../../../utils/TaskScheduler\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { setRollRoundEnd } from \"../store/actions/roller\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport config from \"../config\"\r\n\r\ntype anthInfoType = {\r\n  bl: number\r\n  freeGameCount: number\r\n  freeGameAmount: number,\r\n  gameType: GameType\r\n  iconStay: number\r\n  lv: number\r\n  memberId: string\r\n  tableId: string\r\n}\r\n\r\n\r\n@StoreInject(getStore())\r\nclass GameBoardViewModel extends ViewModel<Fruit777_GameBoard, IProps, IEvent> {\r\n  constructor() {\r\n    super('Fruit777_GameBoard')\r\n  }\r\n  public currentGameViewModel: ViewModel<any, any, any> = null\r\n  public changeGameTypeTask: Task\r\n  public flyFruitNode: Node\r\n  private currGameType: GameType = GameType.NONE\r\n  public taskScheduler: TaskScheduler = new TaskScheduler()\r\n  protected begin() {\r\n    sktMsgListener.addOnce(SKT_MAG_TYPE.AUTH, \"board\", (data: anthInfoType) => {\r\n      try {\r\n        this.dispatch(changeGame(data.gameType))\r\n        // this.dispatch(changeGame(GameType.SUBGAME1))\r\n        /**刚刚初始化游戏，需要带入必要的游戏状态 */\r\n        setData(\"bl\", data.bl)\r\n        setData(\"gameType\", data.gameType)\r\n        setData(\"freeCount\", data.freeGameCount)\r\n        setData(\"freeGameAmount\", data.freeGameAmount)\r\n        this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE)))\r\n        this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n        this.dispatch(changeViewGame(data.gameType))\r\n        this.dispatch(updateSubGameTimes(data.freeGameCount))\r\n        msgListener.dispath(NORMAL_MAG_TYPE.CHANGE_GAME, { currGameType: data.gameType })\r\n        if (data.gameType !== GameType.MAIN) {\r\n          //非小游戏需要读取盈利状态\r\n          this.dispatch(changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)))\r\n        }\r\n        sys.localStorage.setItem(\"fruit777\", JSON.stringify(data))\r\n      } catch (e) {\r\n        global.closeSubGame({ confirmContent: lang.write(k => k.InitGameModule.GameBoardInit) })\r\n      }\r\n      // this.dispatch(changeGame(GameType.MAIN))\r\n    })\r\n    sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n      token: sys.localStorage.getItem(\"token\"),\r\n      gameId: config.gameId\r\n    }, {\r\n      isReSend: true\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.JACKPOT, \"board\", (data) => {\r\n      this.dispatch(updateJackpotAmount(data))\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.BALANCE_UPDATE, \"board\", (data) => {\r\n      // this.dispatch(updateBalance(data))\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.VACATETHEROOM, \"board\", (data) => {\r\n      global.closeSubGame({ confirmContent: lang.write(k => k.UpdateModule.GameNotice, {}, { placeStr: \"对不起，系统维护中，请稍后再尝试登录\" }) })\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET, \"board\", (data, error) => {\r\n      // console.log('curGame', dataTransfer(DataKeyType.GAME_TYPE))\r\n      if (this.currGameType !== dataTransfer(DataKeyType.GAME_TYPE)) {\r\n        this.currGameType = dataTransfer(DataKeyType.GAME_TYPE)\r\n        this.dispatch(changeGame(dataTransfer(DataKeyType.GAME_TYPE)))\r\n      }\r\n    }, 100)\r\n\r\n\r\n    this.setEvent({\r\n      changeGameHandler: (lastGameType, currGameType) => {\r\n        console.log(lastGameType, currGameType)\r\n        this.changeGameTypeTask = new Task((done) => {\r\n          try {\r\n            if (this.currentGameViewModel) {\r\n              fruit777_Audio.playOneShot(SoundPathDefine.TRANSFER)\r\n              this.flyFruitNode = instantiate(sourceManageSeletor().getFile(PrefabPathDefine.FLY_FRUITS).source)\r\n              this.viewNode.addChild(this.flyFruitNode)\r\n              this.comp.scheduleOnce(() => {\r\n                //卸载当前\r\n                this.currentGameViewModel.unMount(EffectType.EFFECT1).then(() => {\r\n                  done()\r\n                })\r\n              }, 1)\r\n            } else {\r\n              done()\r\n            }\r\n          } catch (e) {\r\n            done()\r\n            console.log('err', e)\r\n          }\r\n        }).subscribeDone('change', () => {\r\n          if (!this.comp.getPropertyNode()) return\r\n          this.dispatch(changeViewGame(currGameType))\r\n          if (currGameType === GameType.MAIN) {\r\n            this.currentGameViewModel = new RollerPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_GAME).source).appendTo(this.comp.getGameNode(), {\r\n              effectType: EffectType.EFFECT_FADE, effectDone: () => {\r\n                this.dispatch(setRollRoundEnd(true))\r\n              }\r\n            }).connect()\r\n          } else if (currGameType === GameType.SUBGAME1) {\r\n            this.currentGameViewModel = new BoxPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.BOX_GAME).source).appendTo(this.comp.getGameNode(), {\r\n              effectType: EffectType.EFFECT_FADE, effectDone: () => {\r\n                this.dispatch(setRollRoundEnd(true))\r\n              }\r\n            }).connect()\r\n          } else if (currGameType === GameType.SUBGAME2) {\r\n            this.currentGameViewModel = new RollerPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_GAME).source).appendTo(this.comp.getGameNode(), {\r\n              effectType: EffectType.EFFECT_FADE, effectDone: () => {\r\n                this.dispatch(setRollRoundEnd(true))\r\n              }\r\n            }).connect()\r\n          }\r\n          msgListener.dispath(NORMAL_MAG_TYPE.CHANGE_GAME, { currGameType })\r\n          this.comp.scheduleOnce(() => {\r\n            this.flyFruitNode && this.flyFruitNode.destroy()\r\n          }, 1.5)\r\n        })\r\n        if (!this.currentGameViewModel) {\r\n          //初始化的时候才直接执行\r\n          this.taskScheduler.joinqQueue(this.changeGameTypeTask, true)\r\n        }\r\n      }\r\n    })\r\n    resetData()\r\n    this.dispatch(resetStore(''))\r\n  }\r\n  protected unMountCallBack(): void {\r\n    // fruit777WebSocketDriver.sktMsgListener.removeById(\"fruit777_board\")\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        gameType: state.game.currGameType\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default GameBoardViewModel\r\n"]}