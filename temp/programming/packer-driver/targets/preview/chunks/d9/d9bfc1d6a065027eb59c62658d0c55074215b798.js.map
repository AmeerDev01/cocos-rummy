{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth/Framework/care/Facade.ts"],"names":["Facade","Notification","Controller","Model","View","constructor","model","view","controller","_instance","initializeFacade","Instance","initializeModel","initializeController","initializeView","registerCommand","notificationName","commandClassRef","removeCommand","hasCommand","registerProxy","proxy","retrieveProxy","proxyName","removeProxy","hasProxy","registerMediator","mediator","retrieveMediator","mediatorName","removeMediator","hasMediator","notifyObservers","notification","sendNotification","name","body","type"],"mappings":"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","sourcesContent":["import { IController } from \"../interfaces/IController\";\r\nimport { IFacade } from \"../interfaces/IFacade\";\r\nimport { IMediator } from \"../interfaces/IMediator\";\r\nimport { IModel } from \"../interfaces/IModel\";\r\nimport { INotification } from \"../interfaces/INotification\";\r\nimport { IProxy } from \"../interfaces/IProxy\";\r\nimport { IView } from \"../interfaces/IView\";\r\nimport Notification from \"../patterns/observer/Notification\";\r\nimport Controller from \"./Controller\";\r\nimport Model from \"./Model\";\r\nimport View from \"./view\";\r\n\r\nexport default class Facade implements IFacade {\r\n\r\n    protected static _instance: IFacade;\r\n\r\n    protected model: IModel = null;\r\n    protected view: IView = null;\r\n    protected controller: IController = null;\r\n\r\n    constructor() {\r\n        // if (Facade._instance) throw Error(\"Facade singleton already constructed!\");\r\n        Facade._instance = this;\r\n        this.initializeFacade();\r\n    }\r\n\r\n    public static get Instance(): IFacade {\r\n        if (!Facade._instance)\r\n            Facade._instance = new Facade();\r\n        return Facade._instance;\r\n    }\r\n\r\n    protected initializeFacade(): void {\r\n        this.initializeModel();\r\n        this.initializeController();\r\n        this.initializeView();\r\n    }\r\n\r\n    protected initializeModel(): void {\r\n        if (!this.model) {\r\n            this.model = Model.Instance;\r\n        }\r\n    }\r\n\r\n    protected initializeController(): void {\r\n        if (!this.controller) {\r\n            this.controller = Controller.Instance;\r\n        }\r\n    }\r\n\r\n    protected initializeView(): void {\r\n        if (!this.view) {\r\n            this.view = View.Instance;\r\n        }\r\n    }\r\n\r\n    public registerCommand(notificationName: string, commandClassRef: Function): void {\r\n        this.controller.registerCommand(notificationName, commandClassRef);\r\n    }\r\n\r\n    public removeCommand(notificationName: string): void {\r\n        this.controller.removeCommand(notificationName);\r\n    }\r\n\r\n    public hasCommand(notificationName: string): boolean {\r\n        return this.controller.hasCommand(notificationName);\r\n    }\r\n\r\n    public registerProxy(proxy: IProxy): void {\r\n        this.model.registerProxy(proxy);\r\n    }\r\n\r\n    public retrieveProxy(proxyName: string): IProxy {\r\n        return this.model.retrieveProxy(proxyName);\r\n    }\r\n\r\n    public removeProxy(proxyName: string): IProxy {\r\n        let proxy: IProxy;\r\n        if (this.model) {\r\n            proxy = this.model.removeProxy(proxyName);\r\n        }\r\n        return proxy\r\n    }\r\n\r\n    public hasProxy(proxyName: string): boolean {\r\n        return this.model.hasProxy(proxyName);\r\n    }\r\n\r\n    public registerMediator(mediator: IMediator): void {\r\n        if (this.view) {\r\n            this.view.registerMediator(mediator);\r\n        }\r\n    }\r\n\r\n    public retrieveMediator(mediatorName: string): IMediator {\r\n        return this.view.retrieveMediator(mediatorName);\r\n    }\r\n\r\n    public removeMediator(mediatorName: string): IMediator {\r\n        let mediator: IMediator;\r\n        if (this.view) {\r\n            mediator = this.view.removeMediator(mediatorName);\r\n        }\r\n        return mediator;\r\n    }\r\n\r\n    public hasMediator(mediatorName: string): boolean {\r\n        return this.view.hasMediator(mediatorName);\r\n    }\r\n\r\n    public notifyObservers(notification: INotification): void {\r\n        if (this.view) {\r\n            this.view.notifyObservers(notification);\r\n        }\r\n    }\r\n\r\n    public sendNotification(name: string, body: any = null, type: string = null): void {\r\n        this.notifyObservers(new Notification(name, body, type));\r\n    }\r\n\r\n}"]}