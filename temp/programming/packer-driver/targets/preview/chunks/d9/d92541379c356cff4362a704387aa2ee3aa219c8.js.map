{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/dataTransfer.ts"],"names":["DataKeyType","useMock","mockData","dataCache","dl","si","balanceAfterSettlement","blab","blb","bubble","cs","ctw","fireRingSwitch","freeCount","freeGame","freeGameAmount","gameType","iconStay","indexGameType","lw","magnification","np","otherGameAttributesVo","rollerIcon","rollerId","sc","sgb","tb","tbb","totalRewards","winningPosition","setData","key","value","refreshData","data","dataKey","console","error","ROLLER_STOP_INDEX_ID","ICON_EFFECT_DATA","wp","result","push","BALANCE","COINS_AFTER_BETTING","coinsAfterBetting","PROFIT_MULTIPLE","GAME_TYPE","AWARD_INFO","SUBGAME_TIMES","PROFIT_AMOUNT","FREE_GAME_AMOUNT","ICON_YUANBAO_EFFECT_DATA","FREE_GAME_POSITION","fg","result1"],"mappings":"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","sourcesContent":["export enum DataKeyType {\r\n  /**5条滚轴对应的道具ID【上升或下降前】 */\r\n  ROLLER_STOP_INDEX_ID = \"ROLLER_STOP_INDEX_ID\",\r\n  /**余额 */\r\n  BALANCE = \"BALANCE\",\r\n  /**余额 */\r\n  COINS_AFTER_BETTING = \"COINS_AFTER_BETTING\",\r\n  /**获取闪动数据 */\r\n  ICON_EFFECT_DATA = \"ICON_EFFECT_DATA\",\r\n  /**获取元宝闪动数据 */\r\n  ICON_YUANBAO_EFFECT_DATA = \"ICON_YUANBAO_EFFECT_DATA\",\r\n  /**获取盈利倍数信息，用于显示爆奖效果 */\r\n  PROFIT_MULTIPLE = \"PROFIT_MULTIPLE\",\r\n  /**游戏类型 */\r\n  GAME_TYPE = \"GAME_TYPE\",\r\n  /**开宝箱的中奖信息 */\r\n  AWARD_INFO = \"AWARD_INFO\",\r\n  /**小游戏剩余次数 */\r\n  SUBGAME_TIMES = \"SUBGAME_TIMES\",\r\n  /**获取盈利 */\r\n  PROFIT_AMOUNT = \"PROFIT_AMOUNT\",\r\n  /**小游戏盈亏 */\r\n  FREE_GAME_AMOUNT = \"FREE_GAME_AMOUNT\",\r\n  /**小游戏转轴位置 */\r\n  FREE_GAME_POSITION = \"FREE_GAME_POSITION\",\r\n  \r\n}\r\nexport const useMock: boolean = false\r\n\r\nconst mockData: any = {\r\n  \"dl\": {\r\n    \"si\":\r\n      [{\r\n        \"balanceAfterSettlement\": 731736667.00,\r\n        \"blab\": 731736647.00,\r\n        \"blb\": 731736697.00,\r\n        \"bubble\": 0.00,\r\n        \"change\": {}, \"cs\": 0.00, \"ctw\": 0.00, \"esb\": {},\r\n        \"fireRingSwitch\": 0,\r\n        \"fixedChessboardIcon\": [],\r\n        \"freeCount\": 0,\r\n        \"freeGameAmount\": 0.00,\r\n        \"freegame\": {},\r\n        \"gameType\": 0,\r\n        \"iconStay\": 0,\r\n        \"indexGameType\": 0,\r\n        \"lw\": { \"13\": 20 },\r\n        \"magnification\": 10.00,\r\n        \"np\": 0.00,\r\n        \"rollerIcon\": [[5, 11, 12], [3, 1, 10], [1, 5, 10], [10, 1, 3], [2, 2, 12]],\r\n        \"rollerId\": [41, 25, 6, 29, 42],\r\n        \"sc\": 0,\r\n        \"sgb\": 0,\r\n        \"tb\": 2,\r\n        \"tbb\": 50,\r\n        \"totalRewards\": 20.00,\r\n        \"wp\": { \"13\": [[0, 0], [1, 2], [2, 2]] }\r\n      }]\r\n  }\r\n\r\n  // \"dl\": {\r\n  //   \"si\": [\r\n  //     {\r\n  //       \"bl\": 2310,\r\n  //       \"blab\": 2310,\r\n  //       \"blb\": 2310,\r\n  //       \"bubble\": 0,\r\n  //       \"cs\": 0,\r\n  //       \"ctw\": 0,\r\n  //       \"fireRingSwitch\": 0,\r\n  //       \"fixedChessboardIcon\": [],\r\n  //       \"freeCount\": 6,\r\n  //       \"freeGameAmount\": 1830,\r\n  //       \"gameType\": 2,\r\n  //       \"iconStay\": 0,\r\n  //       \"indexGameType\": 0,\r\n  //       \"lw\": {\r\n  //         \"6\": 0,\r\n  //         \"BONUS\": 1500\r\n  //       },\r\n  //       \"magnification\": 0,\r\n  //       \"np\": 0,\r\n  //       \"sc\": 1,\r\n  //       \"sgb\": 0,\r\n  //       \"tb\": 0,\r\n  //       \"tbb\": 0,\r\n  //       \"tw\": 1500\r\n  //     }\r\n  //   ]\r\n  // }\r\n}\r\n/**此数据用于缓存，正常情况下，游戏初始化、或skt返回数据之后就应该更新这个值，在下一次更新之前，此值不应该变化\r\n * \r\n * 为什么不用store呢，因为store的值一般和界面关联，数据一变更就有视图变化，但缓存数据没有，主要考虑到有特效缓动，要延迟更新\r\n */\r\nlet dataCache: MockDataType = {\r\n  dl: {\r\n    si: [{\r\n      balanceAfterSettlement: 0,\r\n      blab: 99975,\r\n      blb: 100000,\r\n      bubble: 0,\r\n      cs: 0,\r\n      ctw: 0,\r\n      fireRingSwitch: 0,\r\n      freeCount: 0,\r\n      freeGame:{},\r\n      freeGameAmount: 0,\r\n      gameType: 0,\r\n      iconStay: 0,\r\n      indexGameType: 0,\r\n      lw: {},\r\n      magnification: 0,\r\n      np: 0,\r\n      otherGameAttributesVo:{},\r\n      rollerIcon: [[1, 8, 8], [1, 11, 1], [1, 12, 5], [7, 11, 1], [9, 1, 1]],\r\n      rollerId: [1, 27, 41, 20, 30],\r\n      sc: 0,\r\n      sgb: 0,\r\n      tb: 1,\r\n      tbb: 25,\r\n      totalRewards: 0,\r\n      winningPosition: {}\r\n    }]\r\n  }\r\n}\r\n\r\n/**用于手动更新某个值，一般用于初始化游戏时候局部变量更新 */\r\nexport const setData = (key: string, value: any) => {\r\n  // console.log(key, value)\r\n  if (useMock) { return }\r\n  const si = (useMock ? mockData : dataCache).dl.si[0]\r\n  si[key] = value\r\n}\r\n\r\n/**刷新缓存数据 */\r\nexport const refreshData = (data: MockDataType) => {\r\n  if (!useMock) {\r\n    (dataCache = data)\r\n  }\r\n}\r\n\r\nexport default (dataKey: DataKeyType): any => {\r\n  if (!dataCache) {\r\n    console.error(\"dataCache is null\")\r\n    return\r\n  }\r\n  const si = (useMock ? mockData : dataCache).dl.si[0]\r\n  // console.log(dataKey, si)\r\n  // console.log('gameType', si.gameType)\r\n  switch (dataKey) {\r\n    case DataKeyType.ROLLER_STOP_INDEX_ID:\r\n      return si.rollerId\r\n    case DataKeyType.ICON_EFFECT_DATA:\r\n      const wp = si.winningPosition\r\n      const result: number[][] = []\r\n      for (let key in wp) {\r\n        result.push(wp[key])\r\n      }\r\n      return result\r\n    case DataKeyType.BALANCE:\r\n      return si.balanceAfterSettlement\r\n    case DataKeyType.COINS_AFTER_BETTING:\r\n      return si.coinsAfterBetting\r\n    case DataKeyType.PROFIT_MULTIPLE:\r\n      return si.magnification\r\n    case DataKeyType.GAME_TYPE:\r\n      return si.gameType\r\n    case DataKeyType.AWARD_INFO:\r\n      return si.lw\r\n    case DataKeyType.SUBGAME_TIMES:\r\n      return si.freeCount\r\n    case DataKeyType.PROFIT_AMOUNT:\r\n      return si.totalRewards\r\n    case DataKeyType.FREE_GAME_AMOUNT:\r\n      return si.freeGameAmount\r\n    case DataKeyType.ICON_YUANBAO_EFFECT_DATA:\r\n      return si.otherGameAttributesVo\r\n    case DataKeyType.FREE_GAME_POSITION:\r\n      const fg = si.freeGame\r\n      const result1: number[][] = []\r\n      for (let key in fg) {\r\n        result1.push(fg[key])\r\n      }\r\n      return result1\r\n  }\r\n\r\n  // if (dataKey === DataKeyType.ROLLER_STOP_INDEX_ID) {\r\n  //   return si.rollerId\r\n  // }\r\n  // if (dataKey === DataKeyType.ICON_EFFECT_DATA) {\r\n  //   const wp = si.wp\r\n  //   const result: number[][] = []\r\n  //   for (let key in wp) {\r\n  //     result.push(wp[key])\r\n  //   }\r\n  //   return result\r\n  // }\r\n  // if (dataKey === DataKeyType.PROFIT_MULTIPLE) {\r\n\r\n  // }\r\n}\r\n\r\ntype MockDataType = {\r\n  dl: {\r\n    si: [\r\n      {\r\n        balanceAfterSettlement: number,\r\n        blab: number,\r\n        blb: number,\r\n        bubble: number,\r\n        cs: number,\r\n        ctw: number,\r\n        fireRingSwitch: number,\r\n        freeCount: number,\r\n        freeGame:object,\r\n        freeGameAmount: number,\r\n        gameType: number,\r\n        iconStay: number,\r\n        indexGameType: number,\r\n        lw: object,\r\n        /**倍率  图标数量X图标倍率 */\r\n        magnification: number,\r\n        np: number,\r\n        otherGameAttributesVo:object,\r\n        rollerIcon: number[][],//[[7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1]],\r\n        rollerId: number[],//[64, 3, 7, 45, 26],\r\n        sc: number,\r\n        sgb: number,\r\n        tb: number,\r\n        tbb: number,\r\n        totalRewards: number,\r\n        winningPosition: object\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n"]}