{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/store/reducer/baseBoard.ts"],"names":["instantiate","ActionTypes","initState","reduxAct","default","createReducer","ADD_TOAST","state","payload","toastData","SET_LOADING","loadPayload","Object","assign","isLoadPayload","isAllowCloseLoading","SET_ACTIVE_SUBGAME","subGameInfo","SET_SUBGAME_STATE","_state","runState","subGameRunState","CHANGE_WEB_VIEW","isShowWebView","value","LOAD_RECOMMEND_DATA","isLoadRecommendData","Date","parse","toString","APP_DOWNLOAD_GUIDE","appDownLoadGuide","SOCKET_CONNECT","retryConnectTimes","undefined","isConnect","connectData","RESET_DATA_BOARD"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;AAA2CC,MAAAA,S,iBAAAA,S;;AAChCC,MAAAA,Q,aAAXC,O;;;;;;;;;yBAEM;AAAA;AAAA,gCAASC,aAAT,CAAsC;AACnD,SAAC;AAAA;AAAA,wCAAYC,SAAb,GAAyB,CAACC,KAAD,EAAQC,OAAR,KAAyE;AAChG,8BACKD,KADL;AAEEE,YAAAA,SAAS,EAAED,OAAO,CAACC;AAFrB,aADgG,CAKhG;AACA;AAEA;AACA;AACA;AACA;AACD,SAbkD;AAcnD,SAAC;AAAA;AAAA,wCAAYC,WAAb,GAA2B,CAACH,KAAD,EAAQC,OAAR,KAA2E;AACpG,8BACKD,KADL;AAEEI,YAAAA,WAAW,EAAEC,MAAM,CAACC,MAAP,CAAc;AAAEC,cAAAA,aAAa,EAAE,KAAjB;AAAwBC,cAAAA,mBAAmB,EAAE;AAA7C,aAAd,EAAoEP,OAAO,CAACM,aAA5E;AAFf;AAID,SAnBkD;AAoBnD,SAAC;AAAA;AAAA,wCAAYE,kBAAb,GAAkC,CAACT,KAAD,EAAQC,OAAR,KAAkF;AAClH,8BACKD,KADL;AAEEU,YAAAA,WAAW,EAAET,OAAO,CAACS;AAFvB;AAID,SAzBkD;AA0BnD,SAAC;AAAA;AAAA,wCAAYC,iBAAb,GAAiC,CAACX,KAAD,EAAQC,OAAR,KAAiF;AAChH,cAAMW,MAAM,GAAGnB,WAAW,CAACO,KAAD,CAA1B;;AACAY,UAAAA,MAAM,CAACF,WAAP,KAAuBE,MAAM,CAACF,WAAP,CAAmBG,QAAnB,GAA8BZ,OAAO,CAACa,eAA7D;AACA,iBAAOF,MAAP;AACD,SA9BkD;AA+BnD,SAAC;AAAA;AAAA,wCAAYG,eAAb,GAA+B,CAACf,KAAD,EAAQC,OAAR,KAA+E;AAC5G,8BACKD,KADL;AAEEgB,YAAAA,aAAa,EAAEf,OAAO,CAACgB;AAFzB;AAID,SApCkD;AAqCnD,SAAC;AAAA;AAAA,wCAAYC,mBAAb,GAAmC,CAAClB,KAAD,EAAQC,OAAR,KAAmF;AACpH,8BACKD,KADL;AAEEmB,YAAAA,mBAAmB,EAAEC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,GAAWE,QAAX,EAAX,EAAkCA,QAAlC;AAFvB;AAID,SA1CkD;AA2CnD,SAAC;AAAA;AAAA,wCAAYC,kBAAb,GAAkC,CAACvB,KAAD,EAAQC,OAAR,KAAkF;AAClH,8BACKD,KADL;AAEEwB,YAAAA,gBAAgB,EAAEvB,OAAO,CAACuB;AAF5B;AAID,SAhDkD;AAiDnD,SAAC;AAAA;AAAA,wCAAYC,cAAb,GAA8B,CAACzB,KAAD,EAAQC,OAAR,KAA8E;AAC1G,cAAID,KAAK,CAAC0B,iBAAN,KAA4BC,SAAhC,EAA2C,CAE1C;;AACD,8BACK3B,KADL;AAEE4B,YAAAA,SAAS,EAAE3B,OAAO,CAAC4B,WAAR,CAAoBD,SAFjC;AAGEF,YAAAA,iBAAiB,EAAGzB,OAAO,CAAC4B,WAAR,CAAoBH,iBAApB,KAA0CC,SAA1C,GAAuD3B,KAAK,CAAC0B,iBAAN,GAA0B,CAAjF,GAAsFzB,OAAO,CAAC4B,WAAR,CAAoBH;AAHhI;AAKD,SA1DkD;AA2DnD,SAAC;AAAA;AAAA,wCAAYI,gBAAb,GAAgC,MAAqBrC,WAAW;AAAA;AAAA;AA3Db,OAAtC;AAAA;AAAA,iC","sourcesContent":["import { instantiate } from \"cc\";\r\nimport { ActionTypes, ActionPayLoad, InitStateType, initState } from \"../actions/baseBoard\";\r\nimport { default as reduxAct } from 'redux-act'\r\n\r\nexport default reduxAct.createReducer<InitStateType>({\r\n  [ActionTypes.ADD_TOAST]: (state, payload: ActionPayLoad<ActionTypes.ADD_TOAST>): InitStateType => {\r\n    return ({\r\n      ...state,\r\n      toastData: payload.toastData\r\n    })\r\n    // state.toastData = { content: \"\", type: state.toastData.type }\r\n    // return result\r\n\r\n    // const _state = instantiate(state)\r\n    // _state.toastData = { ...payload.toastData }\r\n    // console.log('reducer',_state)\r\n    // return _state\r\n  },\r\n  [ActionTypes.SET_LOADING]: (state, payload: ActionPayLoad<ActionTypes.SET_LOADING>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      loadPayload: Object.assign({ isLoadPayload: false, isAllowCloseLoading: false }, payload.isLoadPayload),\r\n    }\r\n  },\r\n  [ActionTypes.SET_ACTIVE_SUBGAME]: (state, payload: ActionPayLoad<ActionTypes.SET_ACTIVE_SUBGAME>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      subGameInfo: payload.subGameInfo\r\n    }\r\n  },\r\n  [ActionTypes.SET_SUBGAME_STATE]: (state, payload: ActionPayLoad<ActionTypes.SET_SUBGAME_STATE>): InitStateType => {\r\n    const _state = instantiate(state)\r\n    _state.subGameInfo && (_state.subGameInfo.runState = payload.subGameRunState)\r\n    return _state\r\n  },\r\n  [ActionTypes.CHANGE_WEB_VIEW]: (state, payload: ActionPayLoad<ActionTypes.CHANGE_WEB_VIEW>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      isShowWebView: payload.value\r\n    }\r\n  },\r\n  [ActionTypes.LOAD_RECOMMEND_DATA]: (state, payload: ActionPayLoad<ActionTypes.LOAD_RECOMMEND_DATA>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      isLoadRecommendData: Date.parse(new Date().toString()).toString()\r\n    }\r\n  },\r\n  [ActionTypes.APP_DOWNLOAD_GUIDE]: (state, payload: ActionPayLoad<ActionTypes.APP_DOWNLOAD_GUIDE>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      appDownLoadGuide: payload.appDownLoadGuide\r\n    }\r\n  },\r\n  [ActionTypes.SOCKET_CONNECT]: (state, payload: ActionPayLoad<ActionTypes.SOCKET_CONNECT>): InitStateType => {\r\n    if (state.retryConnectTimes === undefined) {\r\n\r\n    }\r\n    return {\r\n      ...state,\r\n      isConnect: payload.connectData.isConnect,\r\n      retryConnectTimes: (payload.connectData.retryConnectTimes === undefined ? (state.retryConnectTimes + 1) : payload.connectData.retryConnectTimes)\r\n    }\r\n  },\r\n  [ActionTypes.RESET_DATA_BOARD]: (): InitStateType => instantiate(initState)\r\n}, initState);"]}