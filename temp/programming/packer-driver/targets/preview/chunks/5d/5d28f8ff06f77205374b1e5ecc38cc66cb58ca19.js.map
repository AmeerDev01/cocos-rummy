{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/viewModel/GameBoardViewModel.ts"],"names":["instantiate","sp","sys","ViewModel","StoreInject","SKT_MAG_TYPE","sktInstance","sktMsgListener","config","AutoLauncherType","GameType","NORMAL_MAG_TYPE","msgListener","sourceManageSeletor","gameBoardViewModel","PrefabPathDefine","changeAutoLauncherType","changeGame","changeProfit","changeViewGame","setAutoLaunchedTimes","setFreeGameId","setSubGameTimes","updateBalance","updateJackpotAmount","updateSubGameTimes","getStore","dataTransfer","DataKeyType","setData","Task","TaskSchedulerDefault","EffectType","setRollRoundEnd","bundlePkgName","RollerPanelViewModel","SgChooseSmallViewModel","SmallReaultViewModel","SkeletonAnimationPlayer","GameBoardViewModel","constructor","currentGameViewModel","changeGameTypeTask","flyBgNode","currGameType","NONE","viewGameType","begin","addOnce","AUTH","data","gameType","MAIN","freeGameCount","chooseSmall","createSgChooseSmallGame","dispatch","coinsBeforeBetting","freeGameCoins","phoenixFreeGameLine","BALANCE","totalFreeGameCount","dispath","CHANGE_GAME","FREE_GAME_AMOUNT","localStorage","setItem","JSON","stringify","sendSktMessage","token","getItem","gameId","add","JACKPOT","BALANCE_UPDATE","LAUNCHER_BET","error","console","log","GAME_TYPE","setEvent","changeGameHandler","lastGameType","done","SUBGAME1","smallResultViewModel","mountView","getFile","SMALL_RESULT","source","appendTo","comp","getGameNode","effectType","EFFECT1","isModal","setProps","goldAmount","killSelfHadler","unMount","connect","scheduleOnce","then","FLY_BG","viewNode","addChild","titleSkeleton","getChildByName","getComponent","Skeleton","playAnimation","subscribeDone","createRollerView","joinqQueue","greenBg","getPropertyNode","props_spr_main_greenBg","mBlueBg","props_spr_main_blueBg","rollerPanelViewModel","MAIN_GAME","EFFECT_FADE","effectDone","active","redBg","props_spr_phoenix_Redbg","blueBg","props_spr_phoenix_Bluebg","smallGameMBg","props_spr_smallGame_multipleBg","destroy","createFlyBg","chooseSmallGame","PHOENIX_SG_CHOOSE","parentNode","killSelfHandler","smallGameId","smallGame","times","isClick1","isClick2","isClick3","isClick4","isClick5","unMountCallBack","undefined","removeById","inject","state","game"],"mappings":"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","sourcesContent":["import { Game, Node, instantiate, sp, sys, tween } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { phoenix_gameBoard, IProps, IEvent } from \"../components/phoenix_gameBoard\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport config from \"../config\"\r\nimport { AutoLauncherType, GameType, SMALLGAME } from \"../type\"\r\nimport { NORMAL_MAG_TYPE, phoenix_Audio, msgListener, sourceManageSeletor, gameBoardViewModel, footerViewModel } from \"../index\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { changeAutoLauncherType, changeGame, changeProfit, changeViewGame, setAutoLaunchedTimes, setFreeGameId, setSubGameTimes, updateBalance, updateJackpotAmount, updateSubGameTimes } from \"../store/actions/game\"\r\nimport { getStore } from \"../store\"\r\nimport dataTransfer, { DataKeyType, setData } from \"../dataTransfer\"\r\nimport TaskScheduler, { Task, TaskSchedulerDefault } from \"../../../utils/TaskScheduler\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { setRollRoundEnd } from \"../store/actions/roller\"\r\nimport { bundlePkgName } from '../sourceDefine';\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport RollerPanelViewModel from \"./RollerPanelViewModel\"\r\nimport SgChooseSmallViewModel from \"./SgChooseSmallViewModel\"\r\nimport { phoenix_small_result, IState as BPIState, IProps as BPIProps, IEvent as BPIEvent } from \"../components/phoenix_small_result\"\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\"\r\nimport SmallReaultViewModel from \"./SmallReaultViewModel\"\r\nimport SkeletonAnimationPlayer from \"../SkeletonPlay\"\r\n\r\ntype anthInfoType = {\r\n  coinsBeforeBetting: number\r\n  freeGameCount: number\r\n  freeGameCoins: number,\r\n  gameType: GameType\r\n  phoenixFreeGameLine: number\r\n  lv: number\r\n  memberId: string\r\n  tableId: string,\r\n  totalFreeGameCount:number,\r\n}\r\n\r\nexport type ChooseSmallGame = {\r\n  done?: Function,\r\n  gameType?:GameType,\r\n}\r\n\r\nexport let rollerPanelViewModel: RollerPanelViewModel;\r\nexport let chooseSmallGame:SgChooseSmallViewModel;\r\nexport let smallResultViewModel\r\n@StoreInject(getStore())\r\nclass GameBoardViewModel extends ViewModel<phoenix_gameBoard, IProps, IEvent> {\r\n  constructor() {\r\n    super('phoenix_gameBoard')\r\n  }\r\n  public currentGameViewModel: ViewModel<any, any, any> = null\r\n  public changeGameTypeTask: Task\r\n  public flyBgNode: Node\r\n  private currGameType: GameType = GameType.NONE;\r\n  private viewGameType: GameType;\r\n  protected begin() {\r\n    sktMsgListener.addOnce(SKT_MAG_TYPE.AUTH, bundlePkgName, (data: anthInfoType) => {\r\n      if(data.gameType !== GameType.MAIN &&  data.freeGameCount === 0) {//还未选择小游戏id\r\n        const chooseSmall :ChooseSmallGame= {\r\n          gameType:data.gameType\r\n        }\r\n        this.createSgChooseSmallGame(chooseSmall);\r\n      } else {\r\n        this.dispatch(changeGame(data.gameType))\r\n        this.dispatch(changeViewGame(data.gameType))\r\n      }\r\n      // this.dispatch(changeGame(GameType.SUBGAME1))\r\n      /**刚刚初始化游戏，需要带入必要的游戏状态 */\r\n      setData(\"balanceAfterSettlement\", data.coinsBeforeBetting)\r\n      setData(\"gameType\", data.gameType)\r\n      setData(\"freeCount\", data.freeGameCount)\r\n      setData(\"freeGameAmount\", data.freeGameCoins)\r\n      this.dispatch(setFreeGameId(data.phoenixFreeGameLine))\r\n      this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE)))\r\n      this.dispatch(setSubGameTimes(data.totalFreeGameCount))\r\n      // this.dispatch(changeViewGame(data.gameType))\r\n      this.dispatch(updateSubGameTimes(data.freeGameCount))\r\n      this.dispatch(changeAutoLauncherType(AutoLauncherType.NONE))\r\n      msgListener.dispath(NORMAL_MAG_TYPE.CHANGE_GAME, { currGameType: data.gameType })\r\n      if (data.gameType !== GameType.MAIN) {\r\n       \r\n        //小游戏需要读取盈利状态\r\n        this.dispatch(changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)))\r\n      }\r\n      sys.localStorage.setItem(\"phoenix\", JSON.stringify(data))\r\n      // this.dispatch(changeGame(GameType.MAIN))\r\n    })\r\n    sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n      token: sys.localStorage.getItem(\"token\"),\r\n      gameId: config.gameId\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.JACKPOT, bundlePkgName, (data) => {\r\n      this.dispatch(updateJackpotAmount(data))\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.BALANCE_UPDATE, bundlePkgName, (data) => {\r\n      this.dispatch(updateBalance(data))\r\n    })\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET, bundlePkgName, (data, error) => {\r\n      console.log('curGame------------',this.currGameType, dataTransfer(DataKeyType.GAME_TYPE))\r\n      //小游戏转主游戏时判定 切换gameType值\r\n      if (this.currGameType !== dataTransfer(DataKeyType.GAME_TYPE)) {\r\n        this.currGameType = dataTransfer(DataKeyType.GAME_TYPE)\r\n        this.dispatch(changeGame(dataTransfer(DataKeyType.GAME_TYPE)))\r\n      }\r\n    }, 100)\r\n\r\n    this.setEvent({\r\n      /**切换游戏时执行 */\r\n      changeGameHandler: (lastGameType, currGameType) => {\r\n        console.log(lastGameType, currGameType)\r\n        this.changeGameTypeTask = new Task((done) => {\r\n          if (this.currentGameViewModel) {\r\n            if (lastGameType !== currGameType && lastGameType === GameType.SUBGAME1) {\r\n              this.dispatch(setRollRoundEnd(false))\r\n              this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE))); //更新用户金币值\r\n              smallResultViewModel = new SmallReaultViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.SMALL_RESULT).source).appendTo(this.comp.getGameNode(), { effectType: EffectType.EFFECT1, isModal: true })\r\n              .setProps({\r\n                goldAmount: dataTransfer(DataKeyType.FREE_GAME_AMOUNT)\r\n              }).setEvent({\r\n                killSelfHadler: () => {\r\n                  smallResultViewModel.unMount(EffectType.EFFECT1)\r\n                 }\r\n              }).connect()\r\n\r\n              this.comp.scheduleOnce(() => {\r\n                 //卸载当前的roller面板\r\n                this.currentGameViewModel.unMount(EffectType.EFFECT1).then(() => {\r\n                  done()\r\n                })\r\n              },3)\r\n              // window.setTimeout(() => {\r\n              //   //卸载当前的roller面板\r\n              //   this.currentGameViewModel.unMount(EffectType.EFFECT1).then(() => {\r\n              //     done()\r\n              //   })\r\n              // }, 3000)\r\n            } else if(lastGameType !== currGameType && lastGameType === GameType.MAIN) {\r\n              // phoenix_Audio.playOneShot(SoundPathDefine.TRANSFER)\r\n              this.flyBgNode = instantiate(sourceManageSeletor().getFile(PrefabPathDefine.FLY_BG).source)//转场动画 飞云的背景\r\n              this.viewNode.addChild(this.flyBgNode)\r\n              const titleSkeleton = this.flyBgNode.getChildByName(\"caishenguochang\").getComponent(sp.Skeleton)\r\n              new SkeletonAnimationPlayer(titleSkeleton, 'animation', false, () => {\r\n                this.currentGameViewModel.unMount(EffectType.EFFECT1).then(() => {\r\n                  done()\r\n                })\r\n              }).playAnimation()\r\n            }\r\n          } else {\r\n            done()\r\n          }\r\n        }).subscribeDone('change', () => {\r\n          this.createRollerView(currGameType)\r\n          \r\n        })\r\n        if (!this.currentGameViewModel) {\r\n          //初始化的时候才直接执行\r\n          TaskSchedulerDefault().joinqQueue(this.changeGameTypeTask, true)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /**roller面板 */\r\n  public createRollerView(currGameType) {    \r\n    this.dispatch(changeViewGame(currGameType))\r\n    let greenBg = gameBoardViewModel.comp.getPropertyNode().props_spr_main_greenBg as Node;\r\n    let mBlueBg = gameBoardViewModel.comp.getPropertyNode().props_spr_main_blueBg as Node;\r\n    // 判断主游戏0和小游戏1时加载的roller面板 \r\n    if (currGameType === GameType.MAIN) {\r\n      rollerPanelViewModel = new RollerPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_GAME).source).appendTo(this.comp.getGameNode(), {\r\n        effectType: EffectType.EFFECT_FADE, effectDone: () => {\r\n          this.dispatch(setRollRoundEnd(true))\r\n        }\r\n      }).connect()\r\n      mBlueBg.active = true;\r\n      greenBg.active = false;\r\n      let redBg = rollerPanelViewModel.comp.getPropertyNode().props_spr_phoenix_Redbg as Node;\r\n      let blueBg = rollerPanelViewModel.comp.getPropertyNode().props_spr_phoenix_Bluebg as Node;\r\n      let smallGameMBg = rollerPanelViewModel.comp.getPropertyNode().props_spr_smallGame_multipleBg as Node;\r\n      redBg.active = true;\r\n      blueBg.active = false;\r\n      smallGameMBg.active = false;\r\n      this.currentGameViewModel = rollerPanelViewModel;\r\n    } else if (currGameType === GameType.SUBGAME1) {\r\n      rollerPanelViewModel = new RollerPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_GAME).source).appendTo(this.comp.getGameNode(), {\r\n        effectType: EffectType.EFFECT_FADE, effectDone: () => {\r\n          this.dispatch(setRollRoundEnd(true))\r\n        }\r\n      }).connect()\r\n      mBlueBg.active = false;\r\n      greenBg.active = true;\r\n      let redBg = rollerPanelViewModel.comp.getPropertyNode().props_spr_phoenix_Redbg as Node;\r\n      let blueBg = rollerPanelViewModel.comp.getPropertyNode().props_spr_phoenix_Bluebg as Node;\r\n      let smallGameMBg = rollerPanelViewModel.comp.getPropertyNode().props_spr_smallGame_multipleBg as Node;\r\n      redBg.active = false;\r\n      blueBg.active = true;\r\n      smallGameMBg.active = true;\r\n      this.currentGameViewModel = rollerPanelViewModel;\r\n    } \r\n    msgListener.dispath(NORMAL_MAG_TYPE.CHANGE_GAME, { currGameType })\r\n    this.comp.scheduleOnce(() => {\r\n      this.flyBgNode && this.flyBgNode.destroy()\r\n      \r\n    },1.5)\r\n    // window.setTimeout(() => {\r\n    //   this.flyBgNode && this.flyBgNode.destroy()\r\n    // }, 1500)\r\n  }\r\n  /**转场动画 */\r\n  public createFlyBg(gameType,done?:Function) {\r\n      //转场\r\n    this.flyBgNode = instantiate(sourceManageSeletor().getFile(PrefabPathDefine.FLY_BG).source)//动画 飞云的背景\r\n    this.viewNode.addChild(this.flyBgNode);\r\n    const titleSkeleton = this.flyBgNode.getChildByName(\"caishenguochang\").getComponent(sp.Skeleton)\r\n    new SkeletonAnimationPlayer(titleSkeleton, 'animation', false, () => {\r\n      this.flyBgNode && this.flyBgNode.destroy()\r\n      this.dispatch(changeGame(gameType))//切换小游戏gameType===1\r\n      this.dispatch(changeViewGame(gameType))\r\n    }).playAnimation()\r\n      // window.setTimeout(() => {\r\n      //   this.flyBgNode && this.flyBgNode.destroy()\r\n      //   this.dispatch(changeGame(gameType))//切换小游戏gameType===1\r\n      //   this.dispatch(changeViewGame(gameType))\r\n      // }, 1500)\r\n  }\r\n  /**选择小游戏的板 */\r\n  public createSgChooseSmallGame(chooseSmall:ChooseSmallGame) {\r\n    //禁用掉主下注按钮\r\n    this.dispatch(setRollRoundEnd(false))\r\n    chooseSmallGame = new SgChooseSmallViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.PHOENIX_SG_CHOOSE).source)\r\n    .appendTo(this.parentNode, { effectType: EffectType.EFFECT1, isModal: true })\r\n    .setEvent({\r\n      killSelfHandler: (smallGameId: SMALLGAME) => {\r\n        this.dispatch(setFreeGameId(smallGameId))\r\n        this.dispatch(updateSubGameTimes(config.smallGame[smallGameId-1].times))\r\n        this.dispatch(setSubGameTimes(config.smallGame[smallGameId-1].times))\r\n        chooseSmallGame.comp.isClick1 = true;\r\n        chooseSmallGame.comp.isClick2 = true;\r\n        chooseSmallGame.comp.isClick3 = true;\r\n        chooseSmallGame.comp.isClick4 = true;\r\n        chooseSmallGame.comp.isClick5 = true;\r\n        this.comp.scheduleOnce(() => {\r\n          chooseSmallGame.unMount(EffectType.EFFECT1)\r\n          if (chooseSmall.gameType) {\r\n            gameBoardViewModel.createFlyBg(chooseSmall.gameType);\r\n          }\r\n          if (chooseSmall.done) {\r\n            chooseSmall.done()\r\n          }\r\n        }, 1)\r\n        \r\n        // window.setTimeout(() => {\r\n        //   chooseSmallGame.unMount(EffectType.EFFECT1)\r\n        //   if (chooseSmall.gameType) {\r\n        //     gameBoardViewModel.createFlyBg(chooseSmall.gameType);\r\n        //   }\r\n        //   if (chooseSmall.done) {\r\n        //     chooseSmall.done()\r\n        //   }\r\n        // },1000)\r\n      }\r\n    })\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.dispatch(changeAutoLauncherType(AutoLauncherType.NONE))\r\n    this.dispatch(setAutoLaunchedTimes(undefined));\r\n    // this.dispatch(changeProfit(0))\r\n    sktMsgListener.removeById(bundlePkgName)\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      this.viewGameType = state.game.viewGameType;\r\n      return {\r\n        gameType: state.game.currGameType\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default GameBoardViewModel\r\n"]}