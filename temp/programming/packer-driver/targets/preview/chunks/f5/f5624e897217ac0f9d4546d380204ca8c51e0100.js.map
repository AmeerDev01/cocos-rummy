{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/domino/components/Domino_BalancePanel.ts"],"names":["Label","Node","Sprite","_decorator","instantiate","BaseComponent","CardPosition","genCardItem","CardViewModel","sourceManageSeletor","PrefabPathDefine","ccclass","property","Domino_BalancePanel","count","propertyNode","props_btn_quit","props_btn_continue","props_label_times","props_players","props_player_item","views","props","balancePlayers","events","close","onQuitRoom","onReady","t","start","initState","bindEvent","on","EventType","TOUCH_END","clearCountdown","startCountdown","node","isValid","string","window","setInterval","clearInterval","destroyCallBack","forEach","v","unMount","initPlayer","removeAllChildren","genPlayerItem","getOddsStr","odds","balancePlayer","playerItem","addChild","getChildByName","getComponent","nickName","memberId","bet","formatAmountWithLetter","headSprite","cards","genCardItemViewModel","cardItem","parentNode","cardViewModel","mountView","getFile","CARD","source","appendTo","setProps","upFace","downFace","alignValue","value","position","VERTICAL","type","isShow","isBright","connect","push","useProps","key","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { Label, Node, Sprite, _decorator, instantiate } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { BalancePlayer, CardItem, CardPosition, DeskStatus, genCardItem } from '../type';\r\nimport { global } from '../../../hall';\r\nimport CardViewModel from '../viewModel/CardViewModel';\r\nimport { roomChooseViewModel, sourceManageSeletor } from '../index';\r\nimport { PrefabPathDefine } from '../sourceDefine/prefabDefine';\r\nimport ViewModel from '../../../base/ViewModel';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\tbalancePlayers?: BalancePlayer[]\r\n}\r\nexport interface IEvent {\r\n\tclose: () => void,\r\n\tonQuitRoom: () => void,\r\n\tonReady: (time: boolean) => void,\r\n}\r\n\r\n@ccclass('Domino_BalancePanel')\r\nexport class Domino_BalancePanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\t}\r\n\r\n\tprivate count = 0;\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_quit: new Node(),\r\n\t\tprops_btn_continue: new Node(),\r\n\t\tprops_label_times: new Label(),\r\n\t\tprops_players: new Node(),\r\n\t\tprops_player_item: new Node(),\r\n\t}\r\n\r\n\tprivate views: CardViewModel[] = [];\r\n\r\n\tpublic props: IProps = {\r\n\t\tbalancePlayers: null,\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tclose: () => { },\r\n\t\tonQuitRoom: () => { },\r\n\t\tonReady: () => { },\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_quit.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.clearCountdown();\r\n\t\t\tthis.events.onQuitRoom();\r\n\t\t})\r\n\t\tthis.propertyNode.props_btn_continue.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.clearCountdown();\r\n\t\t\tthis.events.close();\r\n\t\t\tthis.events.onReady(false);\r\n\t\t})\r\n\t}\r\n\r\n\tprivate t = 0;\r\n\tprivate startCountdown(count) {\r\n\t\tthis.count = count;\r\n\t\tthis.node && this.node.isValid && (this.propertyNode.props_label_times.string = this.count + \"s\");\r\n\t\tthis.t = window.setInterval(() => {\r\n\t\t\tthis.node && this.node.isValid && (this.propertyNode.props_label_times.string = --this.count + \"s\");\r\n\t\t\tif (this.count <= 0) {\r\n\t\t\t\twindow.clearInterval(this.t);\r\n\t\t\t\tthis.events.close();\r\n\t\t\t\tthis.events.onReady(true);\r\n\t\t\t}\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\tprivate clearCountdown() {\r\n\t\tthis.t && window.clearInterval(this.t);\r\n\t}\r\n\r\n\tprotected destroyCallBack(): void {\r\n\t\tthis.clearCountdown();\r\n\t\tthis.views.forEach(v => v.unMount());\r\n\t}\r\n\r\n\tprivate initPlayer() {\r\n\t\tthis.propertyNode.props_players.removeAllChildren();\r\n\t\tthis.props.balancePlayers.forEach(v => this.genPlayerItem(v))\r\n\t\tthis.startCountdown(5);\r\n\t}\r\n\r\n\tprivate getOddsStr(odds: number) {\r\n\t\tswitch (odds) {\r\n\t\t\tcase 1: return 'SINGLE';\r\n\t\t\tcase 2: return 'DOUBLE';\r\n\t\t\tcase 3: return 'TRIPLE';\r\n\t\t\tcase 4: return 'QUARTET';\r\n\t\t\tcase 5: return 'QUINTET';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tprivate genPlayerItem(balancePlayer: BalancePlayer) {\r\n\t\tconst playerItem = instantiate(this.propertyNode.props_player_item)\r\n\t\tthis.propertyNode.props_players.addChild(playerItem);\r\n\t\tplayerItem.getChildByName('props_label_name').getComponent(Label).string = balancePlayer.nickName;\r\n\t\tplayerItem.getChildByName('props_label_id').getComponent(Label).string = \"ID:\" + balancePlayer.memberId;\r\n\t\tplayerItem.getChildByName('props_label_odds').getComponent(Label).string = this.getOddsStr(balancePlayer.odds);\r\n\t\tplayerItem.getChildByName('props_label_bet').getComponent(Label).string = balancePlayer.bet.formatAmountWithLetter();\r\n\t\tplayerItem.getChildByName('props_label_count').getComponent(Label).string = (balancePlayer.count > 0 ? '+' : '') + balancePlayer.count.formatAmountWithLetter();\r\n\r\n\t\tconst headSprite = playerItem.getChildByName('props_btn_mine_head').getComponent(Sprite);\r\n\t\t// global.loadHeadSprite(balancePlayer.icon, headSprite);\r\n\r\n\t\tconst cards = playerItem.getChildByName('props_layout_cards')\r\n\t\tbalancePlayer.cards.forEach(v => {\r\n\t\t\tthis.genCardItemViewModel(genCardItem(v), cards);\r\n\t\t})\r\n\t}\r\n\r\n\tprivate genCardItemViewModel(cardItem: CardItem, parentNode: Node) {\r\n\t\tconst cardViewModel = new CardViewModel()\r\n\t\t\t.mountView(sourceManageSeletor().getFile(PrefabPathDefine.CARD).source)\r\n\t\t\t.appendTo(parentNode)\r\n\t\t\t.setProps({\r\n\t\t\t\tupFace: cardItem.upFace,\r\n\t\t\t\tdownFace: cardItem.downFace,\r\n\t\t\t\talignValue: cardItem.alignValue,\r\n\t\t\t\tvalue: cardItem.value,\r\n\t\t\t\tposition: CardPosition.VERTICAL,\r\n\t\t\t\ttype: 1,\r\n\t\t\t\tisShow: true,\r\n\t\t\t\tisBright: true,\r\n\t\t\t}).connect();\r\n\t\tthis.views.push(cardViewModel);\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tkey === 'balancePlayers' && this.initPlayer();\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}