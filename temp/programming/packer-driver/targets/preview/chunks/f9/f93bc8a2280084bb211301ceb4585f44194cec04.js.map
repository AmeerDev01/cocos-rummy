{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/components/Yxx_WinPanel.ts"],"names":["_decorator","Label","Sprite","BaseComponent","formatNumber","getGoldShorten","getNodeByNameDeep","omitStr","config","global","ccclass","property","Yxx_WinPanel","propertyNode","props_win_label","props","userInfos","balance","events","start","initState","bindEvent","updateUserInfo","userInfo","index","userNode","node","getChildByName","active","getComponent","string","name","gameOption","nicknameOmitLength","gold","loadHeadSprite","icon","useProps","key","value","forEach","v","cur","bindUI","children","startsWith","onDestroy","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;;AACnBC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,c,iBAAAA,c;AAAgBC,MAAAA,iB,iBAAAA,iB;AAAoCC,MAAAA,O,iBAAAA,O;;AACpEC,MAAAA,M;;AAEEC,MAAAA,M,iBAAAA,M;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;8BAejBY,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb;AAAA;AAAA,0CACwE;AAAA;AAAA;AAAA,eAK7DC,YAL6D,GAK9C;AACxBC,YAAAA,eAAe,EAAE,IAAIb,KAAJ;AADO,WAL8C;AAAA,eAShEc,KATgE,GAShD;AACtBC,YAAAA,SAAS,EAAE,IADW;AAEtBC,YAAAA,OAAO,EAAE;AAFa,WATgD;AAAA,eAchEC,MAdgE,GAc/C,EAd+C;AAAA;;AACvEC,QAAAA,KAAK,GAAG,CAEP;;AAeSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAE3B;;AAEOC,QAAAA,cAAc,CAACC,QAAD,EAAqBC,KAArB,EAAoC;AACzDA,UAAAA,KAAK;AACL,cAAMC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,gBAAgBH,KAAzC,CAAjB;AACAC,UAAAA,QAAQ,CAACG,MAAT,GAAkB,IAAlB;AACA;AAAA;AAAA,sDAAkB,iBAAlB,EAAqCH,QAArC,EAA+CI,YAA/C,CAA4D5B,KAA5D,EAAmE6B,MAAnE,GAA4E;AAAA;AAAA,kCAAQP,QAAQ,CAACQ,IAAjB,EAAuB;AAAA;AAAA,gCAAOC,UAAP,CAAkBC,kBAAzC,CAA5E;AACA;AAAA;AAAA,sDAAkB,iBAAlB,EAAqCR,QAArC,EAA+CI,YAA/C,CAA4D5B,KAA5D,EAAmE6B,MAAnE,GAA4E,MAAM;AAAA;AAAA,gDAAeP,QAAQ,CAACW,IAAxB,CAAlF;AAEA;AAAA;AAAA,gCAAOC,cAAP,CAAsBZ,QAAQ,CAACa,IAA/B,EAAqC;AAAA;AAAA,sDAAkB,eAAlB,EAAmCX,QAAnC,EAA6CI,YAA7C,CAA0D3B,MAA1D,CAArC;AACA;;AAESmC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AACpE,cAAID,GAAG,KAAK,WAAZ,EAAyB;AACxB,iBAAKvB,KAAL,CAAWC,SAAX,CAAqBwB,OAArB,CAA6B,CAACC,CAAD,EAAIjB,KAAJ,KAAc;AAC1C,mBAAKF,cAAL,CAAoBmB,CAApB,EAAuBjB,KAAvB;AACA,aAFD;AAIA,WALD,MAKO,IAAIc,GAAG,KAAK,SAAZ,EAAuB;AAC7B,iBAAKzB,YAAL,CAAkBC,eAAlB,CAAkCgB,MAAlC,GAA2C,MAAM;AAAA;AAAA,8CAAaS,KAAK,CAACG,GAAnB,CAAjD;AACA;AACD;;AAESC,QAAAA,MAAM,GAAS;AACxB,eAAKjB,IAAL,CAAUkB,QAAV,CAAmBJ,OAAnB,CAA2BC,CAAC,IAAI;AAC/B,gBAAIA,CAAC,CAACV,IAAF,CAAOc,UAAP,CAAkB,aAAlB,CAAJ,EAAsC;AACrCJ,cAAAA,CAAC,CAACb,MAAF,GAAW,KAAX;AACA;AACD,WAJD;AAKA;;AAESkB,QAAAA,SAAS,GAAS;AAC3B,eAAK/B,KAAL,CAAWC,SAAX,GAAuB,IAAvB;AACA;;AAED+B,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA/DsE,O","sourcesContent":["import { _decorator, Label, Sprite, SpriteFrame } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { formatNumber, getGoldShorten, getNodeByNameDeep, loadRemoteImage, omitStr } from '../../../utils/tool';\r\nimport config from '../config';\r\nimport { UserInfo } from '../type';\r\nimport { global } from '../../../hall';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\tuserInfos?: UserInfo[],\r\n\tbalance?: number,\r\n}\r\nexport interface IEvent {\r\n\r\n}\r\n\r\n@ccclass('Yxx_WinPanel')\r\nexport class Yxx_WinPanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_win_label: new Label(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tuserInfos: null,\r\n\t\tbalance: 0\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t}\r\n\r\n\tprivate updateUserInfo(userInfo: UserInfo, index: number) {\r\n\t\tindex++;\r\n\t\tconst userNode = this.node.getChildByName(\"spr_user_bg\" + index);\r\n\t\tuserNode.active = true;\r\n\t\tgetNodeByNameDeep(\"Label_user_name\", userNode).getComponent(Label).string = omitStr(userInfo.name, config.gameOption.nicknameOmitLength);\r\n\t\tgetNodeByNameDeep(\"Label_user_gold\", userNode).getComponent(Label).string = \"+\" + getGoldShorten(userInfo.gold);\r\n\r\n\t\tglobal.loadHeadSprite(userInfo.icon, getNodeByNameDeep(\"spr_user_head\", userNode).getComponent(Sprite));\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === 'userInfos') {\r\n\t\t\tthis.props.userInfos.forEach((v, index) => {\r\n\t\t\t\tthis.updateUserInfo(v, index);\r\n\t\t\t})\r\n\r\n\t\t} else if (key === 'balance') {\r\n\t\t\tthis.propertyNode.props_win_label.string = \"+\" + formatNumber(value.cur);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.node.children.forEach(v => {\r\n\t\t\tif (v.name.startsWith(\"spr_user_bg\")) {\r\n\t\t\t\tv.active = false;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected onDestroy(): void {\r\n\t\tthis.props.userInfos = null;\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}