{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/viewModel/BandarCardUserViewModel.ts"],"names":["_decorator","ViewModel","StoreInject","getStore","ccclass","property","CardUserViewModel","constructor","begin","connect","inject","state","blackPoker","pokerDetail","redPoker","plumPoker","diamondPoker","countDown","game","gameStatus","areaWinLose","bet","memberBet","allCardRate","cardType","spadeNum","heartNum","sakuraNum","blockNum","allCardType","setProps","props","force"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAGFC,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAEXC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAGxBM,MAAAA,iB,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,iBADN;AAAA;AAAA,kCAC4E;AAGxEC,QAAAA,WAAW,GAAG;AACV,gBAAM,kBAAN;AACD;;AAEOC,QAAAA,KAAK,GAAG,CAEjB;;AAGMC,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,mBAAO;AACHC,cAAAA,UAAU,EAACD,KAAK,CAACE,WAAN,CAAkBD,UAD1B;AAEHE,cAAAA,QAAQ,EAACH,KAAK,CAACE,WAAN,CAAkBC,QAFxB;AAGHC,cAAAA,SAAS,EAACJ,KAAK,CAACE,WAAN,CAAkBE,SAHzB;AAIHC,cAAAA,YAAY,EAACL,KAAK,CAACE,WAAN,CAAkBG,YAJ5B;AAKHC,cAAAA,SAAS,EAACN,KAAK,CAACO,IAAN,CAAWD,SALlB;AAMHE,cAAAA,UAAU,EAACR,KAAK,CAACO,IAAN,CAAWC,UANnB;AAOHC,cAAAA,WAAW,EAACT,KAAK,CAACU,GAAN,CAAUD,WAPnB;AAQHE,cAAAA,SAAS,EAACX,KAAK,CAACU,GAAN,CAAUC,SARjB;AASHC,cAAAA,WAAW,EAAEZ,KAAK,CAACU,GAAN,CAAUE,WATpB;AAUHC,cAAAA,QAAQ,EAAEb,KAAK,CAACU,GAAN,CAAUG,QAVjB;AAWHC,cAAAA,QAAQ,EAAEd,KAAK,CAACE,WAAN,CAAkBY,QAXzB;AAYHC,cAAAA,QAAQ,EAAEf,KAAK,CAACE,WAAN,CAAkBa,QAZzB;AAaHC,cAAAA,SAAS,EAAEhB,KAAK,CAACE,WAAN,CAAkBc,SAb1B;AAcHC,cAAAA,QAAQ,EAAEjB,KAAK,CAACE,WAAN,CAAkBe,QAdzB;AAeHC,cAAAA,WAAW,EAAClB,KAAK,CAACE,WAAN,CAAkBgB;AAf3B,aAAP;AAiBD,WAlBD;AAmBA,iBAAO,IAAP;AACD;;AAEMC,QAAAA,QAAQ,CAACC,KAAD,EAAyBC,KAAzB,EAAiD;AAAA,cAAxBA,KAAwB;AAAxBA,YAAAA,KAAwB,GAAP,KAAO;AAAA;;AAC9D,iBAAO,MAAMF,QAAN,CAAeC,KAAf,EAAsBC,KAAtB,CAAP;AACD;;AArCuE,O;;yBAyC7D1B,iB","sourcesContent":["import { _decorator, assetManager,AssetManager, Component, instantiate, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { Bandar_card_user, IProps, IEvent } from \"../components/Bandar_card_user\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from '../store';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@StoreInject(getStore())\r\nclass CardUserViewModel extends ViewModel<Bandar_card_user, IProps, IEvent> {\r\n\r\n\r\n    constructor() {\r\n        super('Bandar_card_user')     \r\n      }\r\n    \r\n    protected begin() { \r\n    \r\n    }\r\n  \r\n    \r\n    public connect() {\r\n      this.inject({}, (state: StateType) => {\r\n        return {\r\n            blackPoker:state.pokerDetail.blackPoker,\r\n            redPoker:state.pokerDetail.redPoker,\r\n            plumPoker:state.pokerDetail.plumPoker,\r\n            diamondPoker:state.pokerDetail.diamondPoker,\r\n            countDown:state.game.countDown,\r\n            gameStatus:state.game.gameStatus,\r\n            areaWinLose:state.bet.areaWinLose,\r\n            memberBet:state.bet.memberBet,\r\n            allCardRate: state.bet.allCardRate,\r\n            cardType: state.bet.cardType,\r\n            spadeNum: state.pokerDetail.spadeNum,\r\n            heartNum: state.pokerDetail.heartNum,\r\n            sakuraNum: state.pokerDetail.sakuraNum,\r\n            blockNum: state.pokerDetail.blockNum,\r\n            allCardType:state.pokerDetail.allCardType\r\n        }\r\n      })\r\n      return this\r\n    }\r\n\r\n    public setProps(props: Partial<IProps>, force: boolean = false) {\r\n      return super.setProps(props, force);\r\n    }\r\n\r\n}\r\n\r\nexport default CardUserViewModel\r\n"]}