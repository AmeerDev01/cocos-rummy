{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/components/Bandar_trigJackpot.ts"],"names":["_decorator","Label","Node","BaseComponent","StepNumber","TaskScheduler","Task","ccclass","property","Bandar_trigJackpot","taskScheduler","stepNumber","propertyNode","props_skeleton_jackpot","props_label_jackpotNum","props","trigJackpot","events","start","initState","bindEvent","useProps","key","value","createGoldNum","pre","cur","joinqQueue","done","stop","num","string","toFixed","formatAmountWithCommas","toggleCallback","event","customEventData","destroyCallBack","destoryQueue","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAWC,MAAAA,K,OAAAA,K;AAAMC,MAAAA,I,OAAAA,I;;AACjBC,MAAAA,a,iBAAAA,a;;AAEFC,MAAAA,U;;AACAC,MAAAA,a;AAAiBC,MAAAA,I,iBAAAA,I;;;;;;;;;OAClB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;oCAiBjBS,kB,WADZF,OAAO,CAAC,oBAAD,C,gBAAR,MACaE,kBADb;AAAA;AAAA,0CAC8E;AAAA;AAAA;AAAA,eAClEC,aADkE,GACpD;AAAA;AAAA,+CADoD;AAAA,eAElEC,UAFkE;AAAA,eAOnEC,YAPmE,GAOpD;AAClBC,YAAAA,sBAAsB,EAAC,IAAIX,IAAJ,EADL;AAElBY,YAAAA,sBAAsB,EAAC,IAAIb,KAAJ;AAFL,WAPoD;AAAA,eAYtEc,KAZsE,GAYtD;AACtBC,YAAAA,WAAW,EAAC;AADU,WAZsD;AAAA,eAgBtEC,MAhBsE,GAgBrD,EAhBqD;AAAA;;AAG7EC,QAAAA,KAAK,GAAG,CAEN;;AAeQC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAG3B;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CAEpE;AAEE;;;AACQC,QAAAA,aAAa,GAAE;AACnB,cAAIC,GAAG,GAAC,MAAR;AACA,cAAIC,GAAG,GAAC,MAAR,CAFmB,CAGnB;;AACA,eAAKhB,aAAL,CAAmBiB,UAAnB,CAA8B;AAAA;AAAA,4BAAUC,IAAD,IAAU;AAC7C,iBAAKjB,UAAL,IAAmB,KAAKA,UAAL,CAAgBkB,IAAhB,EAAnB;AACA,iBAAKlB,UAAL,GAAkB;AAAA;AAAA,0CAAec,GAAf,EAAoBC,GAApB,EAA0BI,GAAD,IAAS;AAChD;AACA,mBAAKlB,YAAL,IAAqB,KAAKA,YAAL,CAAkBE,sBAAvC,KAAkE,KAAKF,YAAL,CAAkBE,sBAAlB,CAAyCiB,MAAzC,GAAkD,CAAC,CAACD,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAAF,EAAkBC,sBAAlB,EAApH;AACH,aAHiB,EAGf,MAAML,IAAI,EAHK,CAAlB;AAIA,iBAAKjB,UAAL,CAAgBO,KAAhB;AACH,WAP6B,CAA9B;AAQH;;AAEJgB,QAAAA,cAAc,CAACC,KAAD,EAAeC,eAAf,EAAwC,CAErD;;AACSC,QAAAA,eAAe,GAAS;AACjC,eAAK3B,aAAL,CAAmB4B,YAAnB;AACA;;AAESC,QAAAA,MAAM,GAAS;AACjB,eAAKf,aAAL,GADiB,CACI;AAE5B;;AAEDgB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAhE4E,O","sourcesContent":["import { _decorator,Label,Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { initToggle } from '../../../utils/tool';\r\nimport StepNumber from '../../../utils/StepNumber';\r\nimport TaskScheduler, { Task } from '../../../utils/TaskScheduler';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\ttrigJackpot:number\r\n}\r\nexport interface IEvent {\r\n\t\r\n}\r\n\r\n\r\n@ccclass('Bandar_trigJackpot')\r\nexport class Bandar_trigJackpot extends BaseComponent<IState, IProps, IEvent> {\r\n    private taskScheduler=new TaskScheduler();\r\n    private stepNumber: StepNumber\r\n\tstart() {\r\n\r\n\t }\r\n\r\n\tprotected propertyNode = {\r\n        props_skeleton_jackpot:new Node(),\r\n        props_label_jackpotNum:new Label(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\ttrigJackpot:234567\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\t\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\r\n\t}\r\n\r\n    /** jackpotNumber 步进动画 */\r\n    private createGoldNum(){\r\n        let pre=123456;\r\n        let cur=234567;\r\n        // let stepNum=new StepNumber((pre, cur, (num) => {}))\r\n        this.taskScheduler.joinqQueue(new Task((done) => {\r\n            this.stepNumber && this.stepNumber.stop()\r\n            this.stepNumber = new StepNumber(pre, cur, (num) => {\r\n                // this.propertyNode && this.propertyNode.props_Label_up_goldNum && (this.propertyNode.props_Label_up_goldNum.string = (+num.toFixed(0)).formatAmountWithCommas())\r\n                this.propertyNode && this.propertyNode.props_label_jackpotNum && (this.propertyNode.props_label_jackpotNum.string = (+num.toFixed(0)).formatAmountWithCommas())\r\n            }, () => done())\r\n            this.stepNumber.start()\r\n        }))\r\n    }\r\n\r\n\ttoggleCallback(event: Event, customEventData: string) {\r\n\r\n\t}\r\n\tprotected destroyCallBack(): void {\r\n\t\tthis.taskScheduler.destoryQueue();\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n         this.createGoldNum();//测试\r\n\t\t\t\t\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n        \r\n\t}\r\n}\r\n\r\n"]}