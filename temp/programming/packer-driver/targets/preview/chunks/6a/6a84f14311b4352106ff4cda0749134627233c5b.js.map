{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/egypt/Slot/Mediator/BgMediator.ts"],"names":["BgMediator","Node","Prefab","Sprite","Toggle","CommandDefine","PrefabDefine","BaseMediator","SubGameType","AutoLaunchType","StopMode","Egypt_DialogWin","BgCommandConst","getBgProxy","getSocketProxy","AudioManager","SoundList","global","UseSetOption","addToastAction","RollerMediatorConst","sendNativeVibrate","BgMediatorConst","constructor","mediatorName","viewComponent","buttonThrottling","sourceMap","key","path","SLOT_BG","sourceType","source","FLY_BG","DYNAMIC_NUMBER","DIALOG_WIN","RULE_PANEL","TOAST","listNotificationConst","name","INIT_MAIN_PANEL","handler","notification","init","pdd","Instance","option","gameSet","egypt","betTarget","positionId","initUserSwitch","sendNotification","BG","order","UPDATE_BET_AMOUNT","SETGREYOUT","state","getBody","comp","wrapView","getComponent","setGreyOut","INITIALIZETHEPANEL","initSlot","CHANGE_BG","gameType","changeBg","INITSCORE","updateScore","getNextGame","START_FLY_BG","flyBgNode","getSource","addChild","setSiblingIndex","window","setTimeout","AUTO_LAUNCH","removeChild","UPDATE_NUMBER","UPDATE_BTN_LABEL","frequency","setBtnLabel","UPDATE_AUTO_LAUNCH","setActiveButton","getAutoLaunchType","TOGGLETHESTARTBUTTON","checkAutoLaunch","str","isUNLIMT","getAutoLaunchNum","getTotal","setBtnState","UPDATE_GAME_STATUS","setDisable","getDisable","getLastGame","setDis_btn","homeButton","grayscale","SHOW_DIALOG_WIN","dialogType","amount","keepTime","done","dialog","type","getShiftAmount","jackpot","showDialog","UPDATE_JACKPOT","jackPotData","setJACKPOT","OPEN_RULE_PANEL","rulePanel","InsufficientBalanceDisplay","bl","Balance_tips","baseBetAmount","lineCount","updateBetAmount","UPDATE_USER_GOLD","gold","getTransferGameInfo","getUserGold","setGold","UPDATE_CURRENT_SCORE","currentScore","getCurrentScore","UPDATE_JACKPOT_TOTAL","total","set_jack_total","SHOW_TOAST","content","hallDispatch","String","TOGGLESSCROLLINGPANELS","switchAnimations","listenerEvent","autoButtonWrap","autoLaunch","props_toggle_fast","propsToggleFast","isChecked","pressTime","timeLimit","timer","isLongPress","ruleButton","on","EventType","TOUCH_END","getInstance","playSound","buttonClick","startButton","TOUCH_START","setInterval","clearInterval","presentGame","MAIN","triggeAutoLaunch","fbp","DISABLE","setAutoLaunchType","sendLaunch","END_ROLL","scheduleOnce","closeMusic","closeSubGame","addBet","add_coin","calculateTheBalanceStatus","subtractBet","reduce_coin","maxBet","children","forEach","child","index","setStopMode","TOGGLE","toggle","QUEUE_STOP","NORMAL","gameRunner","_gameRunner","setBg"],"mappings":"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","sourcesContent":["import { Node, Prefab, Sprite, Toggle } from \"cc\";\r\nimport { INotification } from \"../../Framework/interfaces/INotification\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { PrefabDefine } from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\"\r\nimport { IlistTypeHander } from \"../types/IlistTypeHander\";\r\nimport { ISourceFile } from \"../types/ISourceFile\";\r\nimport { Egypt_SlotBg } from \"../Component/Egypt_SlotBg\";\r\nimport { SubGameType } from \"../Proxy/SocketProxy\";\r\nimport { AutoLaunchType, StopMode } from \"../Repositories/BgRepository\";\r\nimport { Egypt_DialogWin } from \"../Component/Egypt_DialogWin\";\r\nimport { BgCommandConst } from \"../Command/BgCommand\";\r\nimport { getBgProxy, getSocketProxy } from \"../utils\";\r\nimport { Egypt_Toast } from \"../Component/Egypt_Toast\";\r\nimport { AudioManager, SoundList } from \"../Managr/AudioManager\";\r\nimport { global } from \"db://assets/script/hall\";\r\nimport UseSetOption from \"../../../../utils/UseSetOption\";\r\nimport { addToastAction } from \"../../../../hall/store/actions/baseBoard\";\r\nimport { RollerMediatorConst } from \"./RollerMediator\";\r\nimport { sendNativeVibrate } from \"../../../../common/bridge\";\r\n// export interface IlistNotificationer {\r\n//  name: string\r\n//  isListen?: boolean\r\n//  handler(notification: INotification): void\r\n// }\r\nexport enum BgMediatorConst {\r\n  INIT_MAIN_PANEL = \"initMainPanel\",\r\n  /**开始飞水果 */\r\n  START_FLY_BG = \"startFlyBg\",\r\n  /**更新一些关于数字的界面（弃用） */\r\n  UPDATE_NUMBER = \"updateNumber\",\r\n  /**修改背景图片 */\r\n  CHANGE_BG = \"changeBG\",\r\n  /**更新自动启动按钮面板 */\r\n  UPDATE_AUTO_LAUNCH = \"updateAutoLaunch\",\r\n  /**更新游戏进行状态 */\r\n  UPDATE_GAME_STATUS = \"updateGameStatus\",\r\n  /**展示大奖弹窗 */\r\n  SHOW_DIALOG_WIN = \"showDialogWin\",\r\n  /**展示规则弹窗 */\r\n  OPEN_RULE_PANEL = \"openRulePanel\",\r\n  /**刷新下注信息 */\r\n  UPDATE_BET_AMOUNT = \"updateBetAmount\",\r\n  /**更新当前的奖励 */\r\n  UPDATE_CURRENT_SCORE = \"updateCurrentScore\",\r\n  /**展示toast */\r\n  SHOW_TOAST = \"showToast\",\r\n  /*更换按钮文字*/\r\n  UPDATE_BTN_LABEL = \"updateBtnLabel\",\r\n  /*更新玩家金币*/\r\n  UPDATE_USER_GOLD = \"updateUserGold\",\r\n  UPDATE_JACKPOT = 'update_jackpot',\r\n  /*JACKPOT*/\r\n  UPDATE_JACKPOT_TOTAL = 'update_jackpot_total',\r\n  /*初始化面板*/\r\n  INITIALIZETHEPANEL = 'initializethepanel',\r\n  /*切换面板*/\r\n  TOGGLESSCROLLINGPANELS = 'togglesscrollingpanels',\r\n  /*切换启动按钮状态*/\r\n  TOGGLETHESTARTBUTTON = 'togglethestartbutton',\r\n  /*初始化积分*/\r\n  INITSCORE = 'initScore',\r\n  InsufficientBalanceDisplay = 'InsufficientBalanceDisplay',\r\n  /*设置+-按钮置灰*/\r\n  SETGREYOUT = 'SETGREYOUT'\r\n}\r\n\r\nexport default class BgMediator extends BaseMediator {\r\n  buttonThrottling = true\r\n  public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n    super(mediatorName, viewComponent)\r\n  }\r\n  public sourceMap: Array<ISourceFile> = [\r\n    {\r\n      key: 'fruitsSlot',\r\n      path: PrefabDefine.SLOT_BG,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'flyBg',\r\n      path: PrefabDefine.FLY_BG,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'dynamicNumber',\r\n      path: PrefabDefine.DYNAMIC_NUMBER,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'dialogWin',\r\n      path: PrefabDefine.DIALOG_WIN,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'rulePanel',\r\n      path: PrefabDefine.RULE_PANEL,\r\n      sourceType: Prefab,\r\n      source: null\r\n    },\r\n    {\r\n      key: 'toast',\r\n      path: PrefabDefine.TOAST,\r\n      sourceType: Prefab,\r\n      source: null\r\n    }\r\n  ]\r\n\r\n  protected listenerEvent() {\r\n    const comp = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\"))\r\n    const autoButtonWrap = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\")).autoLaunch\r\n    const props_toggle_fast = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\")).propsToggleFast\r\n    props_toggle_fast.getComponent(Toggle).isChecked = false;\r\n    let pressTime = 0\r\n    const timeLimit = 500 //按压触发自动面板时间\r\n    let timer = 0\r\n    let isLongPress = false\r\n    comp.ruleButton.on(Node.EventType.TOUCH_END, () => {\r\n      AudioManager.getInstance().playSound(SoundList.buttonClick)\r\n      this.sendNotification(BgMediatorConst.OPEN_RULE_PANEL)\r\n    })\r\n    comp.startButton.on(Node.EventType.TOUCH_START, () => {\r\n      timer = window.setInterval(() => {\r\n        pressTime += 10\r\n        if (pressTime > timeLimit) {\r\n          window.clearInterval(timer)\r\n          const presentGame = getBgProxy().getNextGame()\r\n          if (presentGame === SubGameType.MAIN) {\r\n            (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\")).triggeAutoLaunch()\r\n            isLongPress = true\r\n          } else {\r\n            isLongPress = false\r\n          }\r\n        }\r\n      }, 10)\r\n      AudioManager.getInstance().playSound(SoundList.buttonClick);\r\n      this.sendNotification(BgMediatorConst.INITSCORE)\r\n    })\r\n    comp.startButton.on(Node.EventType.TOUCH_END, () => {\r\n      window.clearInterval(timer);\r\n      if (isLongPress) {\r\n        pressTime = 0\r\n        isLongPress = false\r\n        return\r\n      }\r\n      (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\")).triggeAutoLaunch(false);\r\n      const fbp = getBgProxy()\r\n      if (fbp.getAutoLaunchType() !== AutoLaunchType.DISABLE) {\r\n        fbp.setAutoLaunchType(AutoLaunchType.DISABLE)\r\n      }\r\n      // 禁用状态不能点击发送下注\r\n      if (!fbp.getDisable()) {\r\n        if (this.buttonThrottling) { // 按钮防抖节流\r\n          this.buttonThrottling = false\r\n          setTimeout(() => {\r\n            this.buttonThrottling = true\r\n          }, 1000)\r\n          getSocketProxy().sendLaunch();\r\n        }\r\n      } else if (!fbp.checkAutoLaunch()) {\r\n        this.sendNotification(RollerMediatorConst.END_ROLL)\r\n      }\r\n      pressTime = 0\r\n    })\r\n    // 点击首页按钮\r\n    comp.homeButton.on(Node.EventType.TOUCH_END, () => {\r\n      AudioManager.getInstance().playSound(SoundList.buttonClick);\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable()) {\r\n        return\r\n      }\r\n      comp.scheduleOnce(()=>{\r\n        AudioManager.getInstance().closeMusic(() => {\r\n          global.closeSubGame()\r\n        });\r\n      },1)\r\n    })\r\n    comp.addBet.on(Node.EventType.TOUCH_END, () => {\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n        return\r\n      }\r\n      AudioManager.getInstance().playSound(SoundList.add_coin)\r\n      this.sendNotification(CommandDefine.BG, { order: \"add\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      getSocketProxy().calculateTheBalanceStatus()\r\n\r\n    })\r\n    comp.subtractBet.on(Node.EventType.TOUCH_END, () => {\r\n      const fbp = getBgProxy()\r\n\r\n      if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n        return\r\n      }\r\n      AudioManager.getInstance().playSound(SoundList.reduce_coin)\r\n      this.sendNotification(CommandDefine.BG, { order: \"subtract\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      getSocketProxy().calculateTheBalanceStatus()\r\n    })\r\n    comp.maxBet.on(Node.EventType.TOUCH_END, () => {\r\n      const fbp = getBgProxy()\r\n      if (fbp.getDisable() || fbp.getLastGame() != 0) {\r\n        return\r\n      }\r\n      AudioManager.getInstance().playSound(SoundList.add_coin)\r\n      this.sendNotification(CommandDefine.BG, { order: \"max\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      getSocketProxy().calculateTheBalanceStatus()\r\n    })\r\n    autoButtonWrap.children.forEach((child, index) => {\r\n      child.on(Node.EventType.TOUCH_END, () => {\r\n        const fbp = getBgProxy()\r\n        // 必须处于未开启状态才能修改自动执行\r\n        if (fbp.getAutoLaunchType() === AutoLaunchType.DISABLE) {\r\n          fbp.setAutoLaunchType(index);\r\n          this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n        }\r\n      })\r\n    })\r\n    this.setStopMode(props_toggle_fast.getComponent(Toggle));\r\n    props_toggle_fast.on(Toggle.EventType.TOGGLE, (toggle: Toggle) => {\r\n      getBgProxy().setStopMode(toggle.isChecked ? StopMode.QUEUE_STOP : StopMode.NORMAL);\r\n    })\r\n  }\r\n  private setStopMode(toggle: Toggle) {\r\n    getBgProxy().setStopMode(toggle.isChecked ? StopMode.QUEUE_STOP : StopMode.NORMAL);\r\n  }\r\n  protected listNotificationConst: Array<IlistTypeHander<BgMediator>> = [\r\n    {\r\n      name: BgMediatorConst.INIT_MAIN_PANEL,\r\n      handler(notification: INotification) {\r\n        this.init();\r\n        let pdd = UseSetOption.Instance().option.gameSet.egypt ? UseSetOption.Instance().option.gameSet.egypt.betTarget.positionId : 1\r\n        getSocketProxy().initUserSwitch(pdd)\r\n        this.sendNotification(CommandDefine.BG, { order: \"curr\" }, BgMediatorConst.UPDATE_BET_AMOUNT)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.SETGREYOUT,\r\n      handler(notification: INotification) {\r\n        const { state } = notification.getBody(),\r\n          comp = (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg)\r\n        if (state !== 0) {\r\n          comp.setGreyOut('SZX_-', state == 1)\r\n          comp.setGreyOut('SZX_+', state == 2)\r\n        } else {\r\n          comp.setGreyOut('SZX_-', false)\r\n          comp.setGreyOut('SZX_+', false)\r\n        }\r\n\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.INITIALIZETHEPANEL,\r\n      handler(notification: INotification) {\r\n        (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).initSlot()\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.CHANGE_BG,\r\n      handler(notification: INotification) {\r\n        const { gameType } = notification.getBody() || {}\r\n        this.changeBg(gameType)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.INITSCORE,\r\n      handler(notification: INotification) {\r\n        const { state } = notification.getBody() || {}\r\n        if (state) {\r\n          (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).updateScore(0);\r\n        }\r\n        if (getBgProxy().getNextGame() == 0) {\r\n          (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).updateScore(0);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.START_FLY_BG,\r\n      handler(notification: INotification) {\r\n        const flyBgNode = this.getSource(PrefabDefine.FLY_BG)\r\n        this.viewComponent.addChild(flyBgNode)\r\n        flyBgNode.setSiblingIndex(1000)\r\n        window.setTimeout(() => {\r\n          this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n          this.viewComponent.removeChild(flyBgNode)\r\n        }, 3000)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_NUMBER,\r\n      handler(notification: INotification) {\r\n        // const { betAmount, score } = notification.getBody();\r\n        // (this.wrapView.getComponent(\"SlotBg\") as SlotBg).updateBetAmount(betAmount);\r\n        // (this.wrapView.getComponent(\"SlotBg\") as SlotBg).updateScore(score);\r\n      }\r\n    }, {\r\n      name: BgMediatorConst.UPDATE_BTN_LABEL,\r\n      handler(notification: INotification) {\r\n        let { frequency } = notification.getBody()\r\n        const comp = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\"))\r\n        comp.setBtnLabel(frequency)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_AUTO_LAUNCH,\r\n      handler(notification: INotification) {\r\n        (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\")).setActiveButton(getBgProxy().getAutoLaunchType())\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.TOGGLETHESTARTBUTTON,\r\n      handler(notification: INotification) {\r\n        const { state } = notification.getBody();\r\n        if (getBgProxy().getNextGame() == 0) {\r\n          if (getBgProxy().checkAutoLaunch()) { // 是自动\r\n            let str = (getBgProxy().isUNLIMT()) ? \"∞\" : getBgProxy().getAutoLaunchNum() + \"/\" + getBgProxy().getTotal();\r\n            (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).setBtnState(state, 3, str);\r\n          } else {\r\n            (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).setBtnState(state);\r\n          }\r\n        } else { // 小游戏\r\n          (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).setBtnState(state, 1);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_GAME_STATUS,\r\n      handler(notification: INotification) {\r\n        const comp = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\"))\r\n        comp.setDisable(getBgProxy().getDisable())\r\n        if (getBgProxy().getLastGame() != 0) {\r\n          comp.setDis_btn(true)\r\n        } else {\r\n          comp.setDis_btn(getBgProxy().getDisable())\r\n        }\r\n        comp.homeButton.getComponent(Sprite).grayscale = getBgProxy().getDisable()\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.SHOW_DIALOG_WIN,\r\n      handler(notification: INotification) {\r\n        const { dialogType, amount, keepTime, done } = notification.getBody()\r\n        const dialog = this.getSource(PrefabDefine.DIALOG_WIN);\r\n        this.viewComponent.addChild(dialog);\r\n        let type = dialogType\r\n        if (dialogType === 'jackpot' && getSocketProxy().getShiftAmount(\"curr\").jackpot == 0) {\r\n          type = 'superWin'\r\n        }\r\n        sendNativeVibrate(200);\r\n        (dialog.getComponent(Egypt_DialogWin) as Egypt_DialogWin).showDialog(dialogType, amount, keepTime || 2000, () => { done() })\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_JACKPOT,\r\n      handler(notification: INotification) {\r\n        let { jackPotData } = notification.getBody();\r\n        (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\")).setJACKPOT(jackPotData)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.OPEN_RULE_PANEL,\r\n      handler(notification: INotification) {\r\n        const rulePanel = this.getSource(PrefabDefine.RULE_PANEL);\r\n        this.viewComponent.addChild(rulePanel)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.InsufficientBalanceDisplay,\r\n      handler(notification: INotification) {\r\n        const { bl } = notification.getBody();\r\n        (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).Balance_tips(bl)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_BET_AMOUNT,\r\n      handler(notification: INotification) {\r\n        const { baseBetAmount, lineCount } = notification.getBody();\r\n        (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).updateBetAmount(baseBetAmount, lineCount);\r\n      }\r\n    }, {\r\n      name: BgMediatorConst.UPDATE_USER_GOLD,\r\n      handler(notification: INotification) {\r\n        let { state } = notification.getBody()\r\n        let gold = getSocketProxy().getTransferGameInfo().getUserGold(state)\r\n        const comp = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\"))\r\n        comp.setGold(gold)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_CURRENT_SCORE,\r\n      handler(notification: INotification) {\r\n        const { order } = notification.getBody() || {}\r\n        const currentScore = getSocketProxy().getTransferGameInfo().getCurrentScore(order || \"auto\");\r\n        (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).updateScore(currentScore)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.UPDATE_JACKPOT_TOTAL,\r\n      handler(notification: INotification) {\r\n        const { total } = notification.getBody();\r\n        const comp = (<Egypt_SlotBg>this.wrapView.getComponent(\"Egypt_SlotBg\"))\r\n        if (comp) {\r\n          comp.set_jack_total(total)\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.SHOW_TOAST,\r\n      handler(notification: INotification) {\r\n        const { content } = notification.getBody() || {};\r\n        global.hallDispatch(addToastAction({ content: String(content) }))\r\n        // const toastPanel = this.getSource(PrefabDefine.TOAST)\r\n        // this.viewComponent.addChild(toastPanel);\r\n        // (toastPanel.getComponent(\"Egypt_Toast\") as Egypt_Toast).showContent(content)\r\n      }\r\n    },\r\n    {\r\n      name: BgMediatorConst.TOGGLESSCROLLINGPANELS,\r\n      handler(notification: INotification) {\r\n        const { gameType, done } = notification.getBody() || {};\r\n        (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).switchAnimations(gameType, done)\r\n      }\r\n    }\r\n  ]\r\n  private changeBg(gameRunner?: SubGameType) {\r\n    const _gameRunner: SubGameType = gameRunner || getSocketProxy().getTransferGameInfo().gameType();\r\n    (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).setBg(_gameRunner === SubGameType.MAIN ? \"bg_1\" : \"bg_1\");\r\n    // (this.wrapView.getComponent(\"Egypt_SlotBg\") as Egypt_SlotBg).setBg(\"bg_1\")\r\n  }\r\n}\r\n"]}