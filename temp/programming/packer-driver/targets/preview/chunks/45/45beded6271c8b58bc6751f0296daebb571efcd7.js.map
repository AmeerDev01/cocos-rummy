{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/store/reducer/pokerDetail.ts"],"names":["ActionTypes","initState","reduxAct","default","createReducer","BANDAR_BANKER_POKER","state","payload","bankerPoker","BANDAR_BLACK_POKER","blackPoker","BANDAR_RED_POKER","redPoker","BANDAR_PLUM_POKER","plumPoker","BANDAR_DIAMOND_POKER","diamondPoker","BANDAR_WIN_AREA","winArea","BANDAR_JACKPOT_WIN_CARD","jackpotCard","BANDAR_ALL_CARD_TYPE","allCardType","BANDAR_BLOCK_NUM","blockNum","BANDAR_FARMHOUSE_NUM","farmhouse","BANDAR_HEART_NUM","heartNum","BANDAR_SAKURA_NUM","sakuraNum","BANDAR_SPADE_NUM","spadeNum"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,iBAAAA,W;AAA2CC,MAAAA,S,iBAAAA,S;;AAChCC,MAAAA,Q,aAAXC,O;;;;;;;yBAEM;AAAA;AAAA,gCAASC,aAAT,CAAsC;AAEnD,SAAC;AAAA;AAAA,wCAAYC,mBAAb,GAAmC,CAACC,KAAD,EAAQC,OAAR,kBAC9BD,KAD8B;AAGjCE,UAAAA,WAAW,EAAED,OAAO,CAACC;AAHY,UAFgB;AASnD,SAAC;AAAA;AAAA,wCAAYC,kBAAb,GAAkC,CAACH,KAAD,EAAQC,OAAR,kBAC7BD,KAD6B;AAGhCI,UAAAA,UAAU,EAAEH,OAAO,CAACG;AAHY,UATiB;AAenD,SAAC;AAAA;AAAA,wCAAYC,gBAAb,GAAgC,CAACL,KAAD,EAAQC,OAAR,kBAC3BD,KAD2B;AAG9BM,UAAAA,QAAQ,EAAEL,OAAO,CAACK;AAHY,UAfmB;AAqBnD,SAAC;AAAA;AAAA,wCAAYC,iBAAb,GAAiC,CAACP,KAAD,EAAQC,OAAR,kBAC5BD,KAD4B;AAG/BQ,UAAAA,SAAS,EAAEP,OAAO,CAACO;AAHY,UArBkB;AA2BnD,SAAC;AAAA;AAAA,wCAAYC,oBAAb,GAAoC,CAACT,KAAD,EAAQC,OAAR,kBAC/BD,KAD+B;AAGlCU,UAAAA,YAAY,EAAET,OAAO,CAACS;AAHY,UA3Be;AAiCnD,SAAC;AAAA;AAAA,wCAAYC,eAAb,GAA+B,CAACX,KAAD,EAAQC,OAAR,kBAC1BD,KAD0B;AAG7BY,UAAAA,OAAO,EAAEX,OAAO,CAACW;AAHY,UAjCoB;AAuCnD,SAAC;AAAA;AAAA,wCAAYC,uBAAb,GAAuC,CAACb,KAAD,EAAQC,OAAR,kBAClCD,KADkC;AAGrCc,UAAAA,WAAW,EAAEb,OAAO,CAACa;AAHgB,UAvCY;AA8CnD,SAAC;AAAA;AAAA,wCAAYC,oBAAb,GAAoC,CAACf,KAAD,EAAQC,OAAR,kBAC/BD,KAD+B;AAGlCgB,UAAAA,WAAW,EAAEf,OAAO,CAACe;AAHa,UA9Ce;AAoDnD,SAAC;AAAA;AAAA,wCAAYC,gBAAb,GAAgC,CAACjB,KAAD,EAAQC,OAAR,kBAC3BD,KAD2B;AAG9BkB,UAAAA,QAAQ,EAAEjB,OAAO,CAACiB;AAHY,UApDmB;AA0DnD,SAAC;AAAA;AAAA,wCAAYC,oBAAb,GAAoC,CAACnB,KAAD,EAAQC,OAAR,kBAC/BD,KAD+B;AAGlCoB,UAAAA,SAAS,EAAEnB,OAAO,CAACmB;AAHe,UA1De;AAgEnD,SAAC;AAAA;AAAA,wCAAYC,gBAAb,GAAgC,CAACrB,KAAD,EAAQC,OAAR,kBAC3BD,KAD2B;AAG9BsB,UAAAA,QAAQ,EAAErB,OAAO,CAACqB;AAHY,UAhEmB;AAsEnD,SAAC;AAAA;AAAA,wCAAYC,iBAAb,GAAiC,CAACvB,KAAD,EAAQC,OAAR,kBAC5BD,KAD4B;AAG/BwB,UAAAA,SAAS,EAAEvB,OAAO,CAACuB;AAHY,UAtEkB;AA4EnD,SAAC;AAAA;AAAA,wCAAYC,gBAAb,GAAgC,CAACzB,KAAD,EAAQC,OAAR,kBAC3BD,KAD2B;AAG9B0B,UAAAA,QAAQ,EAAEzB,OAAO,CAACyB;AAHY;AA5EmB,OAAtC;AAAA;AAAA,iC","sourcesContent":["import { ActionTypes, ActionPayLoad, InitStateType, initState } from \"../actions/pokerDetail\";\r\nimport { default as reduxAct } from 'redux-act'\r\n\r\nexport default reduxAct.createReducer<InitStateType>({\r\n\r\n  [ActionTypes.BANDAR_BANKER_POKER]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_BANKER_POKER>): InitStateType => ({\r\n    ...state,\r\n\r\n    bankerPoker: payload.bankerPoker,\r\n \r\n  }),\r\n\r\n  [ActionTypes.BANDAR_BLACK_POKER]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_BLACK_POKER>): InitStateType => ({\r\n    ...state,\r\n\r\n    blackPoker: payload.blackPoker,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_RED_POKER]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_RED_POKER>): InitStateType => ({\r\n    ...state,\r\n\r\n    redPoker: payload.redPoker,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_PLUM_POKER]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_PLUM_POKER>): InitStateType => ({\r\n    ...state,\r\n\r\n    plumPoker: payload.plumPoker,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_DIAMOND_POKER]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_DIAMOND_POKER>): InitStateType => ({\r\n    ...state,\r\n\r\n    diamondPoker: payload.diamondPoker,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_WIN_AREA]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_WIN_AREA>): InitStateType => ({\r\n    ...state,\r\n\r\n    winArea: payload.winArea,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_JACKPOT_WIN_CARD]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_JACKPOT_WIN_CARD>): InitStateType => ({\r\n    ...state,\r\n\r\n    jackpotCard: payload.jackpotCard,\r\n \r\n  }),\r\n\r\n  [ActionTypes.BANDAR_ALL_CARD_TYPE]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_ALL_CARD_TYPE>): InitStateType => ({\r\n    ...state,\r\n\r\n    allCardType: payload.allCardType,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_BLOCK_NUM]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_BLOCK_NUM>): InitStateType => ({\r\n    ...state,\r\n\r\n    blockNum: payload.blockNum,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_FARMHOUSE_NUM]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_FARMHOUSE_NUM>): InitStateType => ({\r\n    ...state,\r\n\r\n    farmhouse: payload.farmhouse,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_HEART_NUM]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_HEART_NUM>): InitStateType => ({\r\n    ...state,\r\n\r\n    heartNum: payload.heartNum,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_SAKURA_NUM]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_SAKURA_NUM>): InitStateType => ({\r\n    ...state,\r\n\r\n    sakuraNum: payload.sakuraNum,\r\n \r\n  }),\r\n  [ActionTypes.BANDAR_SPADE_NUM]: (state, payload: ActionPayLoad<ActionTypes.BANDAR_SPADE_NUM>): InitStateType => ({\r\n    ...state,\r\n\r\n    spadeNum: payload.spadeNum,\r\n \r\n  }),\r\n\r\n}, initState);\r\n"]}