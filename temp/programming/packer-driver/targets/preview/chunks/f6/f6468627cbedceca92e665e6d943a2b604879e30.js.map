{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/viewModel/BandarPotViewModel.ts"],"names":["_decorator","find","ViewModel","StoreInject","getStore","JackpotViewModel","sourceManageSelector","PrefabPathDefine","EffectType","ccclass","property","PotViewModel","constructor","begin","setEvent","openJackpotPanel","openJackpot","nodeWrap","baseViewModel","mountView","getFile","MAIN_JACKPOT","source","appendTo","effectType","EFFECT1","isModal","onClosePanel","unMount","EFFECT2","connect","inject","state","jackpot","game"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAkDC,MAAAA,I,OAAAA,I;;AAGpDC,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAEXC,MAAAA,Q,iBAAAA,Q;;AACFC,MAAAA,gB;;AACEC,MAAAA,oB,iBAAAA,oB;;AACAC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;AAGxBW,MAAAA,Y,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,YADN;AAAA;AAAA,kCACiE;AAG7DC,QAAAA,WAAW,GAAG;AACV,gBAAM,YAAN;AACD;;AAESC,QAAAA,KAAK,GAAG;AAChB,eAAKC,QAAL,CAAc;AACVC,YAAAA,gBAAgB,EAAC,MAAI;AACjB,mBAAKC,WAAL;AACH;AAHS,WAAd;AAKD;;AAEMA,QAAAA,WAAW,CAACC,QAAD,EAAkB;AAClC,cAAMC,aAAa,GAAG;AAAA;AAAA,sDAAuBC,SAAvB,CAAiC;AAAA;AAAA,8DAAuBC,OAAvB,CAA+B;AAAA;AAAA,oDAAiBC,YAAhD,EAA8DC,MAA/F,EACnBC,QADmB,CACVtB,IAAI,CAAC,QAAD,CADM,EACM;AAAEuB,YAAAA,UAAU,EAAE;AAAA;AAAA,0CAAWC,OAAzB;AAAkCC,YAAAA,OAAO,EAAE;AAA3C,WADN,EACyDZ,QADzD,CACkE;AACpFa,YAAAA,YAAY,EAAE,MAAM;AAChBT,cAAAA,aAAa,CAACU,OAAd,CAAsB;AAAA;AAAA,4CAAWC,OAAjC;AACH;AAHmF,WADlE,EAKjBC,OALiB,EAAtB;AAMD;;AAGMA,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,mBAAO;AACLC,cAAAA,OAAO,EAACD,KAAK,CAACE,IAAN,CAAWD;AADd,aAAP;AAGD,WAJD;AAKA,iBAAO,IAAP;AACD;;AAhC0D,O;;yBAoClDtB,Y","sourcesContent":["import { _decorator, assetManager,AssetManager, Component, find, instantiate, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { Bandar_pot, IProps, IEvent } from \"../components/Bandar_pot\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from '../store';\r\nimport JackpotViewModel from './BandarJackpotViewModel';\r\nimport { sourceManageSelector } from '../index';\r\nimport { PrefabPathDefine } from '../sourceDefine/prefabDefine';\r\nimport { EffectType } from '../../../utils/NodeIOEffect';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@StoreInject(getStore())\r\nclass PotViewModel extends ViewModel<Bandar_pot, IProps, IEvent> {\r\n\r\n\r\n    constructor() {\r\n        super('Bandar_pot')     \r\n      }\r\n    \r\n      protected begin() { \r\n        this.setEvent({\r\n            openJackpotPanel:()=>{\r\n                this.openJackpot()\r\n            }\r\n        })\r\n      }\r\n    \r\n      public openJackpot(nodeWrap?: Node) {\r\n        const baseViewModel = new JackpotViewModel().mountView(sourceManageSelector().getFile(PrefabPathDefine.MAIN_JACKPOT).source)\r\n          .appendTo(find(\"Canvas\"), { effectType: EffectType.EFFECT1, isModal: true }).setEvent({\r\n            onClosePanel: () => {\r\n                baseViewModel.unMount(EffectType.EFFECT2)  \r\n            }\r\n          }).connect()\r\n      }\r\n\r\n\r\n      public connect() {\r\n        this.inject({}, (state: StateType) => {\r\n          return {\r\n            jackpot:state.game.jackpot\r\n          }\r\n        })\r\n        return this\r\n      }\r\n\r\n}\r\n\r\nexport default PotViewModel\r\n"]}