{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/qiuqiu/store/action/game.ts"],"names":["reduxAct","default","DeskStatus","config","initState","deskStatus","WAITING","playerMap","Array","seatNumber","fill","lastActiveSeatIndex","currActiveSeatIndex","gold","operationCountdown","newBetInfo","balanceInfo","betAmount","maxAmount","totalBetAmount","balanceInfos","beginGameCountdown","dealCount","ActionTypes","joinSeat","createAction","QIUQIU_JOIN_SEAT","player","quitSeat","QIUQIU_QUIT_SEAT","memberId","updateGold","QIUQIU_UPDATE_GOLD","clearRoomData","QIUQIU_CLEAR_DATA","changeDeskStatus","QIUQIU_CHANGE_DESK_STATUS","playerReady","QIUQIU_READY","playerBet","QIUQIU_BET","opType","dealAction","QIUQIU_DEAL_ACTION","seatIndex","dealIndex","dealHandCard","QIUQIU_DEAL_HAND_CARD","cards","changeDealer","QIUQIU_CHANGE_DEALER","addGoldAnime","QIUQIU_ADD_GOLD_ANMIE","winloss","saveBalanceInfo","QIUQIU_SAVE_BALANCE_INFO","syncBalanceGoldToGold","QIUQIU_SYNC_BALANCE_GOLD_TO_GOLD","QIUQIU_OPERATION_COUNTDOWN","countdown","changeOperationPlayer","QIUQIU_CHANGE_OPERATION_PLAYER","playerChangeOpType","QIUQIU_PLAYER_CHANGE_OP_TYPE","QIUQIU_BEGIN_GAME_COUNTDOWN","updateCallAmount","QIUQIU_UPDATE_CALL_AMOUNT","callAmount","saveWinBalanceInfo","QIUQIU_SAVE_WIN_BALANCE_INFO","reconnectRecoverBet","QIUQIU_RECONNECT_RECOVER_BET","setPlayerGameStatus","QIUQIU_SET_PLAYER_GAME_STATUS","isGame","reconnectGameData","QIUQIU_RECONNECT_GAME_DATA"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;AACAC,MAAAA,U,iBAAAA,U;;AACFC,MAAAA,M;;;;;;;2BAgCMC,S,GAA2B;AACvCC,QAAAA,UAAU,EAAE;AAAA;AAAA,sCAAWC,OADgB;AAEvCC,QAAAA,SAAS,EAAE,IAAIC,KAAJ,CAAU;AAAA;AAAA,8BAAOC,UAAjB,EAA6BC,IAA7B,CAAkC,IAAlC,CAF4B;AAGvCC,QAAAA,mBAAmB,EAAE,CAAC,CAHiB;AAIvCC,QAAAA,mBAAmB,EAAE,CAAC,CAJiB;AAKvCC,QAAAA,IAAI,EAAE,CALiC;AAMvCC,QAAAA,kBAAkB,EAAE,IANmB;AAOvCC,QAAAA,UAAU,EAAE,IAP2B;AAQvCC,QAAAA,WAAW,EAAE,IAR0B;AASvCC,QAAAA,SAAS,EAAE,CAT4B;AAUvCC,QAAAA,SAAS,EAAE,CAV4B;AAWvCC,QAAAA,cAAc,EAAE,CAXuB;AAYvCC,QAAAA,YAAY,EAAE,EAZyB;AAavCC,QAAAA,kBAAkB,EAAE,IAbmB;AAcvCC,QAAAA,SAAS,EAAE;AAd4B,O;AAgBxC;;;6BACYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AA6BZ;;;AA0BA;0BACaC,Q,GAAW;AAAA;AAAA,gCAASC,YAAT,CAAsBF,WAAW,CAACG,gBAAlC,EACtBC,MAAD,IAAiE;AAChE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHsB,C;;0BAIXC,Q,GAAW;AAAA;AAAA,gCAASH,YAAT,CAAsBF,WAAW,CAACM,gBAAlC,EACtBC,QAAD,IAAmE;AAClE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHsB,C;;4BAIXC,U,GAAa;AAAA;AAAA,gCAASN,YAAT,CAAsBF,WAAW,CAACS,kBAAlC,EACxBnB,IAAD,IAAiE;AAChE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHwB,C;;+BAIboB,a,GAAgB;AAAA;AAAA,gCAASR,YAAT,CAAsBF,WAAW,CAACW,iBAAlC,EAC5B,MAAoD;AACnD,eAAO,EAAP;AACA,OAH2B,C;;kCAIhBC,gB,GAAmB;AAAA;AAAA,gCAASV,YAAT,CAAsBF,WAAW,CAACa,yBAAlC,EAC9B/B,UAAD,IAAkF;AACjF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAH8B,C;;6BAInBgC,W,GAAc;AAAA;AAAA,gCAASZ,YAAT,CAAsBF,WAAW,CAACe,YAAlC,EACzBR,QAAD,IAA+D;AAC9D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHyB,C;;2BAIdS,S,GAAY;AAAA;AAAA,gCAASd,YAAT,CAAsBF,WAAW,CAACiB,UAAlC,EACxB,CAACV,QAAD,EAAmBb,SAAnB,EAAsCwB,MAAtC,EAA6D5B,IAA7D,KAAqH;AACpH,eAAO;AAAEiB,UAAAA,QAAF;AAAYb,UAAAA,SAAZ;AAAuBwB,UAAAA,MAAvB;AAA+B5B,UAAAA;AAA/B,SAAP;AACA,OAHuB,C;AAIzB;;;4BACa6B,U,GAAa;AAAA;AAAA,gCAASjB,YAAT,CAAsBF,WAAW,CAACoB,kBAAlC,EACzB,CAACC,SAAD,EAAoBC,SAApB,KAAyF;AACxF,eAAO;AAAED,UAAAA,SAAF;AAAaC,UAAAA;AAAb,SAAP;AACA,OAHwB,C;;8BAIbC,Y,GAAe;AAAA;AAAA,gCAASrB,YAAT,CAAsBF,WAAW,CAACwB,qBAAlC,EAC1BC,KAAD,IAAuE;AACtE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAH0B,C;;8BAIfC,Y,GAAe;AAAA;AAAA,gCAASxB,YAAT,CAAsBF,WAAW,CAAC2B,oBAAlC,EAC1BpB,QAAD,IAAuE;AACtE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAH0B,C;;8BAIfqB,Y,GAAe;AAAA;AAAA,gCAAS1B,YAAT,CAAsBF,WAAW,CAAC6B,qBAAlC,EAC3B,CAACR,SAAD,EAAoBS,OAApB,KAA0F;AACzF,eAAO;AAAET,UAAAA,SAAF;AAAaS,UAAAA;AAAb,SAAP;AACA,OAH0B,C;;iCAIfC,e,GAAkB;AAAA;AAAA,gCAAS7B,YAAT,CAAsBF,WAAW,CAACgC,wBAAlC,EAC9B,CAACzB,QAAD,EAAmBjB,IAAnB,EAAiCwC,OAAjC,EAAkDL,KAAlD,KAA2H;AAC1H,eAAO;AAAElB,UAAAA,QAAF;AAAYjB,UAAAA,IAAZ;AAAkBwC,UAAAA,OAAlB;AAA2BL,UAAAA;AAA3B,SAAP;AACA,OAH6B,C;;uCAIlBQ,qB,GAAwB;AAAA;AAAA,gCAAS/B,YAAT,CAAsBF,WAAW,CAACkC,gCAAlC,EACnC3B,QAAD,IAAmF;AAClF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHmC,C;;oCAIxBhB,kB,GAAqB;AAAA;AAAA,gCAASW,YAAT,CAAsBF,WAAW,CAACmC,0BAAlC,EAChCC,SAAD,IAAiF;AAChF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHgC,C;;uCAIrBC,qB,GAAwB;AAAA;AAAA,gCAASnC,YAAT,CAAsBF,WAAW,CAACsC,8BAAlC,EACnC/B,QAAD,IAAiF;AAChF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHmC,C;;oCAIxBgC,kB,GAAqB;AAAA;AAAA,gCAASrC,YAAT,CAAsBF,WAAW,CAACwC,4BAAlC,EACjC,CAACjC,QAAD,EAAmBW,MAAnB,EAA0C5B,IAA1C,KAAoH;AACnH,eAAO;AAAEiB,UAAAA,QAAF;AAAYW,UAAAA,MAAZ;AAAoB5B,UAAAA;AAApB,SAAP;AACA,OAHgC,C;;oCAIrBQ,kB,GAAqB;AAAA;AAAA,gCAASI,YAAT,CAAsBF,WAAW,CAACyC,2BAAlC,EAChCL,SAAD,IAAkF;AACjF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHgC,C;;kCAIrBM,gB,GAAmB;AAAA;AAAA,gCAASxC,YAAT,CAAsBF,WAAW,CAAC2C,yBAAlC,EAC/B,CAACpC,QAAD,EAAmBqC,UAAnB,KAAgG;AAC/F,eAAO;AAAErC,UAAAA,QAAF;AAAYqC,UAAAA;AAAZ,SAAP;AACA,OAH8B,C;;oCAInBC,kB,GAAqB;AAAA;AAAA,gCAAS3C,YAAT,CAAsBF,WAAW,CAAC8C,4BAAlC,EAChCjD,YAAD,IAA0F;AACzF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHgC,C;;qCAIrBkD,mB,GAAsB;AAAA;AAAA,gCAAS7C,YAAT,CAAsBF,WAAW,CAACgD,4BAAlC,EAClC,CAACzC,QAAD,EAAmBb,SAAnB,KAAkG;AACjG,eAAO;AAAEa,UAAAA,QAAF;AAAYb,UAAAA;AAAZ,SAAP;AACA,OAHiC,C;;qCAItBuD,mB,GAAsB;AAAA;AAAA,gCAAS/C,YAAT,CAAsBF,WAAW,CAACkD,6BAAlC,EACjCC,MAAD,IAA+E;AAC9E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACA,OAHiC,C;;mCAItBC,iB,GAAoB;AAAA;AAAA,gCAASlD,YAAT,CAAsBF,WAAW,CAACqD,0BAAlC,EAChC,CAAC3D,SAAD,EAAoBK,SAApB,KAAiG;AAChG,eAAO;AAAEL,UAAAA,SAAF;AAAaK,UAAAA;AAAb,SAAP;AACA,OAH+B,C","sourcesContent":["import { default as reduxAct } from 'redux-act'\r\nimport { DeskStatus, Countdown, OperationType, Player, BetInfo, BalanceInfo } from '../../type'\r\nimport config from '../../config'\r\n\r\n\r\nexport type InitStateType = {\r\n\tdeskStatus: DeskStatus\r\n\t/**玩家，0号为自己，顺序隐射为顺时针 */\r\n\tplayerMap: Player[]\r\n\t/**上一个激活的用户 */\r\n\tlastActiveSeatIndex: number\r\n\t/**当前正激活等待的用户 */\r\n\tcurrActiveSeatIndex: number,\r\n\t/**余额 */\r\n\tgold: number,\r\n\t/**操作倒计时 */\r\n\toperationCountdown: Countdown,\r\n\t/**当前最新下注 */\r\n\tbetAmount: number,\r\n\t/**最高下注 */\r\n\tmaxAmount: number,\r\n\t/**累计下注 */\r\n\ttotalBetAmount: number,\r\n\t/**最新下注 */\r\n\tnewBetInfo: BetInfo,\r\n\t/**结算信息 */\r\n\tbalanceInfo: BalanceInfo,\r\n\t/**本局的结算用户的结算信息 */\r\n\tbalanceInfos: BalanceInfo[],\r\n\t/**开始游戏倒计时 */\r\n\tbeginGameCountdown: Countdown,\r\n\t/**已经发牌张数 */\r\n\tdealCount: number,\r\n}\r\nexport const initState: InitStateType = {\r\n\tdeskStatus: DeskStatus.WAITING,\r\n\tplayerMap: new Array(config.seatNumber).fill(null),\r\n\tlastActiveSeatIndex: -1,\r\n\tcurrActiveSeatIndex: -1,\r\n\tgold: 0,\r\n\toperationCountdown: null,\r\n\tnewBetInfo: null,\r\n\tbalanceInfo: null,\r\n\tbetAmount: 0,\r\n\tmaxAmount: 0,\r\n\ttotalBetAmount: 0,\r\n\tbalanceInfos: [],\r\n\tbeginGameCountdown: null,\r\n\tdealCount: 0\r\n}\r\n/**必须大写，不然redux-act这货要自动加序列号 */\r\nexport enum ActionTypes {\r\n\tQIUQIU_JOIN_SEAT = 'QIUQIU_JOIN_SEAT',\r\n\tQIUQIU_QUIT_SEAT = 'QIUQIU_QUIT_SEAT',\r\n\tQIUQIU_UPDATE_GOLD = 'QIUQIU_UPDATE_GOLD',\r\n\tQIUQIU_CLEAR_DATA = 'QIUQIU_CLEAR_DATA',\r\n\tQIUQIU_CHANGE_DESK_STATUS = 'QIUQIU_CHANGE_DESK_STATUS',\r\n\tQIUQIU_READY = 'QIUQIU_READY',\r\n\tQIUQIU_BET = 'QIUQIU_BET',\r\n\tQIUQIU_DEAL_ACTION = 'QIUQIU_DEAL_ACTION',\r\n\tQIUQIU_CHANGE_DEALER = 'QIUQIU_CHANGE_DEALER',\r\n\tQIUQIU_DEAL_HAND_CARD = 'QIUQIU_DEAL_HAND_CARD',\r\n\tQIUQIU_ADD_GOLD_ANMIE = 'QIUQIU_ADD_GOLD_ANMIE',\r\n\t/**存储结算信息 */\r\n\tQIUQIU_SAVE_BALANCE_INFO = 'QIUQIU_SAVE_BALANCE_INFO',\r\n\tQIUQIU_SYNC_BALANCE_GOLD_TO_GOLD = 'QIUQIU_SYNC_BALANCE_GOLD_TO_GOLD',\r\n\tQIUQIU_OPERATION_COUNTDOWN = 'QIUQIU_OPERATION_COUNTDOWN',\r\n\tQIUQIU_CHANGE_OPERATION_PLAYER = 'QIUQIU_CHANGE_OPERATION_PLAYER',\r\n\tQIUQIU_PLAYER_CHANGE_OP_TYPE = 'QIUQIU_PLAYER_CHANGE_OP_TYPE',\r\n\tQIUQIU_BEGIN_GAME_COUNTDOWN = 'QIUQIU_BEGIN_GAME_COUNTDOWN',\r\n\tQIUQIU_UPDATE_CALL_AMOUNT = 'QIUQIU_UPDATE_CALL_AMOUNT',\r\n\t/**保存赢家的结算信息，用于筹码结算 */\r\n\tQIUQIU_SAVE_WIN_BALANCE_INFO = 'QIUQIU_SAVE_WIN_BALANCE_INFO',\r\n\t/**重连恢复下注 */\r\n\tQIUQIU_RECONNECT_RECOVER_BET = 'QIUQIU_RECONNECT_RECOVER_BET',\r\n\t/**重连游戏数据 */\r\n\tQIUQIU_RECONNECT_GAME_DATA = 'QIUQIU_RECONNECT_GAME_DATA',\r\n\tQIUQIU_SET_PLAYER_GAME_STATUS = 'QIUQIU_SET_PLAYER_GAME_STATUS',\r\n}\r\n\r\n/**定义action的payLoad类型 */\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n\tA extends ActionTypes.QIUQIU_JOIN_SEAT ? { player: Player } :\r\n\tA extends ActionTypes.QIUQIU_QUIT_SEAT ? { memberId: string } :\r\n\tA extends ActionTypes.QIUQIU_UPDATE_GOLD ? { gold: number } :\r\n\tA extends ActionTypes.QIUQIU_CLEAR_DATA ? {} :\r\n\tA extends ActionTypes.QIUQIU_CHANGE_DESK_STATUS ? { deskStatus: DeskStatus } :\r\n\tA extends ActionTypes.QIUQIU_READY ? { memberId: string } :\r\n\tA extends ActionTypes.QIUQIU_BET ? { memberId: string, betAmount: number, opType: OperationType, gold: number } :\r\n\tA extends ActionTypes.QIUQIU_DEAL_ACTION ? { seatIndex: number, dealIndex: number } :\r\n\tA extends ActionTypes.QIUQIU_CHANGE_DEALER ? { memberId: string } :\r\n\tA extends ActionTypes.QIUQIU_DEAL_HAND_CARD ? { cards: number[] } :\r\n\tA extends ActionTypes.QIUQIU_ADD_GOLD_ANMIE ? { seatIndex: number, winloss: number } :\r\n\tA extends ActionTypes.QIUQIU_SAVE_BALANCE_INFO ? { memberId: string, gold: number, winloss: number, cards: number[] } :\r\n\tA extends ActionTypes.QIUQIU_SYNC_BALANCE_GOLD_TO_GOLD ? { memberId: string } :\r\n\tA extends ActionTypes.QIUQIU_OPERATION_COUNTDOWN ? { countdown: Countdown } :\r\n\tA extends ActionTypes.QIUQIU_CHANGE_OPERATION_PLAYER ? { memberId: string } :\r\n\tA extends ActionTypes.QIUQIU_PLAYER_CHANGE_OP_TYPE ? { memberId: string, opType: OperationType, gold: number } :\r\n\tA extends ActionTypes.QIUQIU_BEGIN_GAME_COUNTDOWN ? { countdown: Countdown } :\r\n\tA extends ActionTypes.QIUQIU_UPDATE_CALL_AMOUNT ? { memberId: string, callAmount: number } :\r\n\tA extends ActionTypes.QIUQIU_SAVE_WIN_BALANCE_INFO ? { balanceInfos: BalanceInfo[] } :\r\n\tA extends ActionTypes.QIUQIU_RECONNECT_RECOVER_BET ? { memberId: string, betAmount: number } :\r\n\tA extends ActionTypes.QIUQIU_SET_PLAYER_GAME_STATUS ? { isGame: boolean } :\r\n\tA extends ActionTypes.QIUQIU_RECONNECT_GAME_DATA ? { betAmount: number, dealCount: number } :\r\n\tnever;\r\n\r\n/**初始化其他玩家座位 */\r\nexport const joinSeat = reduxAct.createAction(ActionTypes.QIUQIU_JOIN_SEAT,\r\n\t(player: Player): ActionPayLoad<ActionTypes.QIUQIU_JOIN_SEAT> => {\r\n\t\treturn { player }\r\n\t})\r\nexport const quitSeat = reduxAct.createAction(ActionTypes.QIUQIU_QUIT_SEAT,\r\n\t(memberId: string): ActionPayLoad<ActionTypes.QIUQIU_QUIT_SEAT> => {\r\n\t\treturn { memberId }\r\n\t})\r\nexport const updateGold = reduxAct.createAction(ActionTypes.QIUQIU_UPDATE_GOLD,\r\n\t(gold: number): ActionPayLoad<ActionTypes.QIUQIU_UPDATE_GOLD> => {\r\n\t\treturn { gold }\r\n\t})\r\nexport const clearRoomData = reduxAct.createAction(ActionTypes.QIUQIU_CLEAR_DATA,\r\n\t(): ActionPayLoad<ActionTypes.QIUQIU_CLEAR_DATA> => {\r\n\t\treturn {}\r\n\t})\r\nexport const changeDeskStatus = reduxAct.createAction(ActionTypes.QIUQIU_CHANGE_DESK_STATUS,\r\n\t(deskStatus: DeskStatus): ActionPayLoad<ActionTypes.QIUQIU_CHANGE_DESK_STATUS> => {\r\n\t\treturn { deskStatus }\r\n\t})\r\nexport const playerReady = reduxAct.createAction(ActionTypes.QIUQIU_READY,\r\n\t(memberId: string): ActionPayLoad<ActionTypes.QIUQIU_READY> => {\r\n\t\treturn { memberId }\r\n\t})\r\nexport const playerBet = reduxAct.createAction(ActionTypes.QIUQIU_BET,\r\n\t(memberId: string, betAmount: number, opType: OperationType, gold: number): ActionPayLoad<ActionTypes.QIUQIU_BET> => {\r\n\t\treturn { memberId, betAmount, opType, gold }\r\n\t})\r\n/**发牌动作 */\r\nexport const dealAction = reduxAct.createAction(ActionTypes.QIUQIU_DEAL_ACTION,\r\n\t(seatIndex: number, dealIndex: number): ActionPayLoad<ActionTypes.QIUQIU_DEAL_ACTION> => {\r\n\t\treturn { seatIndex, dealIndex }\r\n\t})\r\nexport const dealHandCard = reduxAct.createAction(ActionTypes.QIUQIU_DEAL_HAND_CARD,\r\n\t(cards: number[]): ActionPayLoad<ActionTypes.QIUQIU_DEAL_HAND_CARD> => {\r\n\t\treturn { cards }\r\n\t})\r\nexport const changeDealer = reduxAct.createAction(ActionTypes.QIUQIU_CHANGE_DEALER,\r\n\t(memberId: string): ActionPayLoad<ActionTypes.QIUQIU_CHANGE_DEALER> => {\r\n\t\treturn { memberId }\r\n\t})\r\nexport const addGoldAnime = reduxAct.createAction(ActionTypes.QIUQIU_ADD_GOLD_ANMIE,\r\n\t(seatIndex: number, winloss: number): ActionPayLoad<ActionTypes.QIUQIU_ADD_GOLD_ANMIE> => {\r\n\t\treturn { seatIndex, winloss }\r\n\t})\r\nexport const saveBalanceInfo = reduxAct.createAction(ActionTypes.QIUQIU_SAVE_BALANCE_INFO,\r\n\t(memberId: string, gold: number, winloss: number, cards: number[]): ActionPayLoad<ActionTypes.QIUQIU_SAVE_BALANCE_INFO> => {\r\n\t\treturn { memberId, gold, winloss, cards }\r\n\t})\r\nexport const syncBalanceGoldToGold = reduxAct.createAction(ActionTypes.QIUQIU_SYNC_BALANCE_GOLD_TO_GOLD,\r\n\t(memberId: string): ActionPayLoad<ActionTypes.QIUQIU_SYNC_BALANCE_GOLD_TO_GOLD> => {\r\n\t\treturn { memberId }\r\n\t})\r\nexport const operationCountdown = reduxAct.createAction(ActionTypes.QIUQIU_OPERATION_COUNTDOWN,\r\n\t(countdown: Countdown): ActionPayLoad<ActionTypes.QIUQIU_OPERATION_COUNTDOWN> => {\r\n\t\treturn { countdown }\r\n\t})\r\nexport const changeOperationPlayer = reduxAct.createAction(ActionTypes.QIUQIU_CHANGE_OPERATION_PLAYER,\r\n\t(memberId: string): ActionPayLoad<ActionTypes.QIUQIU_CHANGE_OPERATION_PLAYER> => {\r\n\t\treturn { memberId }\r\n\t})\r\nexport const playerChangeOpType = reduxAct.createAction(ActionTypes.QIUQIU_PLAYER_CHANGE_OP_TYPE,\r\n\t(memberId: string, opType: OperationType, gold: number): ActionPayLoad<ActionTypes.QIUQIU_PLAYER_CHANGE_OP_TYPE> => {\r\n\t\treturn { memberId, opType, gold }\r\n\t})\r\nexport const beginGameCountdown = reduxAct.createAction(ActionTypes.QIUQIU_BEGIN_GAME_COUNTDOWN,\r\n\t(countdown: Countdown): ActionPayLoad<ActionTypes.QIUQIU_BEGIN_GAME_COUNTDOWN> => {\r\n\t\treturn { countdown }\r\n\t})\r\nexport const updateCallAmount = reduxAct.createAction(ActionTypes.QIUQIU_UPDATE_CALL_AMOUNT,\r\n\t(memberId: string, callAmount: number): ActionPayLoad<ActionTypes.QIUQIU_UPDATE_CALL_AMOUNT> => {\r\n\t\treturn { memberId, callAmount }\r\n\t})\r\nexport const saveWinBalanceInfo = reduxAct.createAction(ActionTypes.QIUQIU_SAVE_WIN_BALANCE_INFO,\r\n\t(balanceInfos: BalanceInfo[]): ActionPayLoad<ActionTypes.QIUQIU_SAVE_WIN_BALANCE_INFO> => {\r\n\t\treturn { balanceInfos }\r\n\t})\r\nexport const reconnectRecoverBet = reduxAct.createAction(ActionTypes.QIUQIU_RECONNECT_RECOVER_BET,\r\n\t(memberId: string, betAmount: number): ActionPayLoad<ActionTypes.QIUQIU_RECONNECT_RECOVER_BET> => {\r\n\t\treturn { memberId, betAmount }\r\n\t})\r\nexport const setPlayerGameStatus = reduxAct.createAction(ActionTypes.QIUQIU_SET_PLAYER_GAME_STATUS,\r\n\t(isGame: boolean): ActionPayLoad<ActionTypes.QIUQIU_SET_PLAYER_GAME_STATUS> => {\r\n\t\treturn { isGame }\r\n\t})\r\nexport const reconnectGameData = reduxAct.createAction(ActionTypes.QIUQIU_RECONNECT_GAME_DATA,\r\n\t(betAmount: number, dealCount: number): ActionPayLoad<ActionTypes.QIUQIU_RECONNECT_GAME_DATA> => {\r\n\t\treturn { betAmount, dealCount }\r\n\t})"]}