{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/domino/type.ts"],"names":["CardPosition","SeatPosition","PlayerSatus","DeskStatus","initPlayer","player","uid","head","nickName","glodAmount","tableId","gameData","state","WAITING","isMaster","remainCardCount","cardIList","noWayCardNumber","isSelf","chairId","seatIndex","winloss","initPlayerGameData","genPlayer","memberInfo","pokers","pokes","memberId","icon","memberAssetGoldPieces","memberState","READY","Boolean","isDealer","map","v","genCardItem","index","cardItem","upFace","downFace","position","VERTICAL","value","getComposeCardValue","alignValue","getCardAlignValue","middleCardItem","outCardItems","composeCardItem","length","composeCardValue","getFirshCardComponseValue","azimuth","calCardAzimuth","leftCardItems","rightCardItems","isComponseSuccess","convertAzimuth","getRoomUpper","roomInfo","upper"],"mappings":"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","sourcesContent":["\r\n/**牌的放置方向 */\r\nexport enum CardPosition {\r\n  HORIZONTAL,\r\n  VERTICAL\r\n}\r\n\r\nexport enum SeatPosition {\r\n  LEFT,\r\n  TOP,\r\n  RIGHT,\r\n  DOWN\r\n}\r\n\r\n/**玩家状态 */\r\nexport enum PlayerSatus {\r\n  /**等待 */\r\n  WAITING,\r\n  /**已准备 */\r\n  READY,\r\n  /**出牌 */\r\n  CARD\r\n}\r\n\r\n/**牌桌状态 */\r\nexport enum DeskStatus {\r\n  /**等待中 */\r\n  WAITING,\r\n  /**倒计时中 */\r\n  COUNTDOWNING,\r\n  /**发牌中 */\r\n  DISTRIBUTE,\r\n  /**牌局中 */\r\n  PLAYING,\r\n  /**结算 */\r\n  CLSOE\r\n}\r\n\r\nexport type RoomInfo = {\r\n  afee: number,\r\n  roomId: string,\r\n  roomName: string,\r\n  maxNum: number,\r\n  lower: number,\r\n  upper: number,\r\n}\r\n\r\nexport type CardItem = {\r\n  upFace: number\r\n  downFace: number\r\n  position: CardPosition,\r\n  value: number,\r\n  seatIndex?: number,\r\n  /**对齐值 */\r\n  alignValue?: number,\r\n  /**方位 0：左 1：右 */\r\n  azimuth?: 0 | 1 | 2,\r\n  /**是否重连 */\r\n  isReconnect?: boolean\r\n}\r\n\r\n/**玩家 */\r\nexport type Player = {\r\n  uid: string,\r\n  /**头像序号 */\r\n  head: number\r\n  nickName: string\r\n  glodAmount: number\r\n  gameData: PlayerGameData\r\n  isSelf: boolean\r\n  tableId: string\r\n  /**与后端一致 */\r\n  chairId: number\r\n  /**座位索引 */\r\n  seatIndex: number,\r\n  winloss: number,\r\n}\r\n\r\nexport type PlayerGameData = {\r\n  /**状态 */\r\n  state: PlayerSatus,\r\n  /**是否是庄家 */\r\n  isMaster: boolean\r\n  /**剩余牌数量 */\r\n  remainCardCount: number\r\n  /**倒计时 */\r\n  // countDownTime: number\r\n  /**手牌组，正常情况下，只有玩家自身才有 */\r\n  cardIList: CardItem[]\r\n  /**跟不上的牌点数 */\r\n  noWayCardNumber: number[]\r\n}\r\n\r\nexport const initPlayer = () => {\r\n  const player: Player = {\r\n    uid: '',\r\n    /**头像序号 */\r\n    head: 1,\r\n    nickName: '',\r\n    glodAmount: 0,\r\n    tableId: '',\r\n    gameData: {\r\n      state: PlayerSatus.WAITING,\r\n      /**是否是庄家 */\r\n      isMaster: false,\r\n      /**剩余牌数量 */\r\n      remainCardCount: 0,\r\n      /**倒计时 */\r\n      // countDownTime: number\r\n      /**手牌组，正常情况下，只有玩家自身才有 */\r\n      cardIList: [],\r\n      /**跟不上的牌点数 */\r\n      noWayCardNumber: [],\r\n    },\r\n    isSelf: false,\r\n    /**与后端一致 */\r\n    chairId: -1,\r\n    seatIndex: -1,\r\n    winloss: 0\r\n  }\r\n  return player;\r\n}\r\nexport const initPlayerGameData = () => {\r\n  const gameData: PlayerGameData = {\r\n    /**状态 */\r\n    state: PlayerSatus.WAITING,\r\n    /**是否是庄家 */\r\n    isMaster: false,\r\n    /**剩余牌数量 */\r\n    remainCardCount: 0,\r\n    /**倒计时 */\r\n    // countDownTime: number\r\n    /**手牌组，正常情况下，只有玩家自身才有 */\r\n    cardIList: [],\r\n    /**跟不上的牌点数 */\r\n    noWayCardNumber: []\r\n  }\r\n  return gameData;\r\n}\r\n\r\n/**出牌数据 */\r\nexport type OutCardDataSo = {\r\n  tableId: string,\r\n  gameId: string,\r\n  chairId: number,\r\n  position: number, // 1为左，2为右 3：中\r\n  poker: number,\r\n  memberId: string\r\n}\r\n\r\n/**出牌返回数据 */\r\nexport type OutCardDataVo = {\r\n  chairId: number,\r\n  card: number,\r\n  position: number,\r\n  membersCards: any,\r\n  dominoDeductMoneyVo: DominoDeductMoneyVo,\r\n  dominoNext: DominoNextOpVo,\r\n  dominoMemBerInfo: MemberInfoVo\r\n}\r\n\r\nexport type DominoDeductMoneyVo = {\r\n  winMemberId: string,\r\n  lossMemberId: string,\r\n  money: number,\r\n}\r\n\r\nexport type DominoNextOpVo = {\r\n  totalTime: number,\r\n  leftTime: number,\r\n  memberId: string,\r\n}\r\n\r\nexport type Countdown = {\r\n  time: number,\r\n  seatIndex: number,\r\n  timestamp?: number\r\n}\r\n\r\nexport type BalancePlayer = {\r\n  icon: number,\r\n  balance: number,\r\n  memberId: string,\r\n  nickName: string,\r\n  bet: number,\r\n  count: number,\r\n  odds: number,\r\n  cards: number[]\r\n}\r\n\r\nexport type GameStateVo = {\r\n  gameState: number,\r\n  seconds: number\r\n}\r\n\r\nexport type PushDealerVo = {\r\n  villageId: string,\r\n  totalTime: string,\r\n}\r\n\r\nexport type WinlossType = {\r\n  winloss: number,\r\n  lossSeatIndex: number,\r\n  winSeatIndex: number,\r\n  time?: number\r\n}\r\n\r\nexport type MemberInfoVo = {\r\n  memberId: string,\r\n  nickName: string,\r\n  memberAssetGoldPieces: number,\r\n  icon: number,\r\n  isDealer: number,\r\n  chairId: number,\r\n  isLewat: number,\r\n  tableId: string,\r\n  pokes: number[],\r\n  lewatPokes: number[],\r\n  isCard: boolean,\r\n  memberState: boolean,\r\n}\r\n\r\nexport type CardRecordsVo = {\r\n  memberId: string,\r\n  card: number,\r\n  position: number,\r\n  isLewat: number\r\n}\r\n\r\n/**重连数据 */\r\nexport type ReconnectVo = {\r\n  gameType: number,\r\n  seconds: number,\r\n  roomId: string,\r\n  thisMemberId: string,\r\n  dominoMemBerInfoVo: MemberInfoVo[],\r\n  membersCards: any,\r\n  lewatPokers: any,\r\n  cardRecordsVos: CardRecordsVo[],\r\n}\r\n\r\n/**构建用户 */\r\nexport const genPlayer = (memberInfo: MemberInfoVo) => {\r\n  const pokers = memberInfo.pokes ? memberInfo.pokes : [];\r\n  const player: Player = {\r\n    uid: memberInfo.memberId,\r\n    head: memberInfo.icon,\r\n    nickName: memberInfo.nickName,\r\n    glodAmount: memberInfo.memberAssetGoldPieces,\r\n    chairId: memberInfo.chairId,\r\n    tableId: memberInfo.tableId,\r\n    gameData: {\r\n      state: memberInfo.memberState ? PlayerSatus.READY : PlayerSatus.WAITING,\r\n      isMaster: Boolean(memberInfo.isDealer),\r\n      remainCardCount: 0,\r\n      cardIList: pokers.map(v => genCardItem(v)),\r\n      noWayCardNumber: []\r\n    },\r\n    seatIndex: -1,\r\n    isSelf: false,\r\n    winloss: 0\r\n  }\r\n  return player;\r\n}\r\n\r\n/**构建牌 */\r\nexport const genCardItem = (index: number) => {\r\n  const cardItem: CardItem = {\r\n    upFace: 0,\r\n    downFace: 0,\r\n    position: CardPosition.VERTICAL,\r\n    value: index\r\n  }\r\n  if (index === 0) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 0;\r\n  } else if (index === 1) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 1;\r\n  } else if (index === 2) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 2;\r\n  } else if (index === 3) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 3;\r\n  } else if (index === 4) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 4;\r\n  } else if (index === 5) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 5;\r\n  } else if (index === 6) {\r\n    cardItem.upFace = 0;\r\n    cardItem.downFace = 6;\r\n  } else if (index === 7) {\r\n    cardItem.upFace = 1;\r\n    cardItem.downFace = 1;\r\n  } else if (index === 8) {\r\n    cardItem.upFace = 1;\r\n    cardItem.downFace = 2;\r\n  } else if (index === 9) {\r\n    cardItem.upFace = 1;\r\n    cardItem.downFace = 3;\r\n  } else if (index === 10) {\r\n    cardItem.upFace = 1;\r\n    cardItem.downFace = 4;\r\n  } else if (index === 11) {\r\n    cardItem.upFace = 1;\r\n    cardItem.downFace = 5;\r\n  } else if (index === 12) {\r\n    cardItem.upFace = 1;\r\n    cardItem.downFace = 6;\r\n  } else if (index === 13) {\r\n    cardItem.upFace = 2;\r\n    cardItem.downFace = 2;\r\n  } else if (index === 14) {\r\n    cardItem.upFace = 2;\r\n    cardItem.downFace = 3;\r\n  } else if (index === 15) {\r\n    cardItem.upFace = 2;\r\n    cardItem.downFace = 4;\r\n  } else if (index === 16) {\r\n    cardItem.upFace = 2;\r\n    cardItem.downFace = 5;\r\n  } else if (index === 17) {\r\n    cardItem.upFace = 2;\r\n    cardItem.downFace = 6;\r\n  } else if (index === 18) {\r\n    cardItem.upFace = 3;\r\n    cardItem.downFace = 3;\r\n  } else if (index === 19) {\r\n    cardItem.upFace = 3;\r\n    cardItem.downFace = 4;\r\n  } else if (index === 20) {\r\n    cardItem.upFace = 3;\r\n    cardItem.downFace = 5;\r\n  } else if (index === 21) {\r\n    cardItem.upFace = 3;\r\n    cardItem.downFace = 6;\r\n  } else if (index === 22) {\r\n    cardItem.upFace = 4;\r\n    cardItem.downFace = 4;\r\n  } else if (index === 23) {\r\n    cardItem.upFace = 4;\r\n    cardItem.downFace = 5;\r\n  } else if (index === 24) {\r\n    cardItem.upFace = 4;\r\n    cardItem.downFace = 6;\r\n  } else if (index === 25) {\r\n    cardItem.upFace = 5;\r\n    cardItem.downFace = 5;\r\n  } else if (index === 26) {\r\n    cardItem.upFace = 5;\r\n    cardItem.downFace = 6;\r\n  } else if (index === 27) {\r\n    cardItem.upFace = 6;\r\n    cardItem.downFace = 6;\r\n  }\r\n\r\n  return cardItem;\r\n}\r\n\r\n/**获得比较的牌值(与对齐值相反的值) */\r\nexport const getComposeCardValue = (cardItem: CardItem) => {\r\n  return cardItem.alignValue === cardItem.upFace ? cardItem.downFace : cardItem.upFace;\r\n}\r\n\r\n/**获得与前一张牌能对齐的值 */\r\nexport const getCardAlignValue = (middleCardItem: CardItem, outCardItems: CardItem[], cardItem: CardItem) => {\r\n  const composeCardItem = outCardItems.length ? outCardItems[outCardItems.length - 1] : middleCardItem;\r\n  let composeCardValue = getComposeCardValue(composeCardItem);\r\n  // 如果左边或者右边没有出牌时，同时中间的牌上下不相等时，小的朝左边，大的朝右边\r\n  if (outCardItems.length === 0 && middleCardItem.upFace !== middleCardItem.downFace) {\r\n    composeCardValue = getFirshCardComponseValue(cardItem, middleCardItem);\r\n  }\r\n  if (composeCardValue === cardItem.upFace) {\r\n    return cardItem.upFace;\r\n  }\r\n  return cardItem.downFace;\r\n}\r\n/**\r\n * 获得第一张牌比较值\r\n * @param cardItem \r\n * @param middleCardItem \r\n * @returns \r\n */\r\nexport const getFirshCardComponseValue = (cardItem: CardItem, middleCardItem: CardItem) => {\r\n  // 横向的第一张牌，小的始终的对齐左边，否则相反\r\n  return cardItem.azimuth === 0 ? middleCardItem.upFace : middleCardItem.downFace;\r\n}\r\n\r\n/**\r\n * 计算牌是放在左边还是右边\r\n * @param cardItem 出的牌\r\n * @param middleCardItem 最中间的牌\r\n * @param leftCardItems 左边出的牌堆\r\n * @param rightCardItems 右边出的牌堆\r\n */\r\nexport const calCardAzimuth = (cardItem: CardItem, middleCardItem: CardItem, leftCardItems: CardItem[], rightCardItems: CardItem[]) => {\r\n  if (cardItem.azimuth === 0 && isComponseSuccess(cardItem, middleCardItem, leftCardItems)) {\r\n    cardItem.azimuth = 1;\r\n  } else if (cardItem.azimuth === 1 && isComponseSuccess(cardItem, middleCardItem, rightCardItems)) {\r\n    cardItem.azimuth = 0;\r\n  }\r\n}\r\n\r\n/**\r\n * 是否比较成功\r\n * @param cardItem \r\n * @param middleCardItem \r\n * @param outCardItems \r\n * @returns \r\n */\r\nconst isComponseSuccess = (cardItem: CardItem, middleCardItem: CardItem, outCardItems: CardItem[]) => {\r\n  let composeCardValue;\r\n  if (outCardItems.length) {\r\n    composeCardValue = getComposeCardValue(outCardItems[outCardItems.length - 1])\r\n  } else {\r\n    composeCardValue = getFirshCardComponseValue(cardItem, middleCardItem);\r\n  }\r\n  return composeCardValue !== cardItem.upFace && composeCardValue !== cardItem.downFace;\r\n}\r\n\r\nexport const convertAzimuth = (position: number): 0 | 1 | 2 => {\r\n  if (position === 1) {\r\n    return 0;\r\n  } else if (position === 2) {\r\n    return 1;\r\n  } else if (position === 3) {\r\n    return 2;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport const getRoomUpper = (roomInfo: RoomInfo)=> {\r\n  return roomInfo.upper > 0 ? roomInfo.upper : 10000000000000000;\r\n}\r\n"]}