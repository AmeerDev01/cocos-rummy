{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/viewModel/BankViewModel.ts"],"names":["BankViewModel","ViewModel","SKT_MAG_TYPE","sktInstance","ApiUrl","addToastAction","fetcher","lang","constructor","begin","setEvent","verifyPwd","pwd","Promise","resolve","reject","send","VERIFY_BANK_PWD","data","then","rsp","catch","e","setBankPassword","loginPassword","safePassword","SET_BANK_PWD","dispatch","content","write","k","BankModule","BankPassword","placeStr","transferCapital","amount","direction","TRASFER_BANK_GLOD","assetGold","type","BankTransfer","sendSktMessage","MEMBER_INFO","isLoading","connect","inject","state","memberAssetGoldPieces","memberInfo","memberAssetSafeGoldPieces"],"mappings":"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","sourcesContent":["import { Node } from \"cc\"\r\nimport ViewModel from \"../../base/ViewModel\"\r\nimport { Hall_BankPanel, IProps, IEvent } from \"../components/Hall_BankPanel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport Fetcher from \"../../utils/Fetcher\"\r\nimport { ApiUrl } from \"../apiUrl\"\r\nimport { addToastAction } from \"../store/actions/baseBoard\"\r\nimport { fetcher,lang } from \"../index\"\r\n\r\nclass BankViewModel extends ViewModel<Hall_BankPanel, IProps, IEvent> {\r\n  constructor() {\r\n    super('Hall_BankPanel')\r\n  }\r\n\r\n  protected begin() {\r\n    this.setEvent({\r\n      verifyPwd: (pwd: string) => {\r\n        return new Promise((resolve, reject) => {\r\n          fetcher.send(ApiUrl.VERIFY_BANK_PWD, { data: pwd }).then((rsp) => {\r\n            resolve(true)\r\n          }).catch((e) => {\r\n            reject(e)\r\n          })\r\n        })\r\n      },\r\n      setBankPassword: (loginPassword, safePassword) => {\r\n        return new Promise((resolve, reject) => {\r\n          fetcher.send(ApiUrl.SET_BANK_PWD, { loginPassword, safePassword }).then((rsp) => {\r\n            this.dispatch(addToastAction({ content: lang.write(k => k.BankModule.BankPassword,{},{ placeStr:\"设置银行保险箱密码完成~\" }) }))\r\n            resolve(true)\r\n          }).catch((e) => {\r\n            reject(e)\r\n          })\r\n        })\r\n      },\r\n      transferCapital: (amount, direction) => {\r\n        return new Promise((resolve, reject) => {\r\n          fetcher.send(ApiUrl.TRASFER_BANK_GLOD, { assetGold: amount, type: direction }).then((rsp) => {\r\n            this.dispatch(addToastAction({ content: lang.write(k => k.BankModule.BankTransfer,{},{ placeStr:\"保险箱金币转移完成~\" }) }))\r\n            sktInstance.sendSktMessage(SKT_MAG_TYPE.MEMBER_INFO, {}, { isLoading: true })\r\n            resolve(true)\r\n          }).catch((e) => {\r\n            reject(e)\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        memberAssetGoldPieces: state.memberInfo.memberAssetGoldPieces,\r\n        memberAssetSafeGoldPieces: state.memberInfo.memberAssetSafeGoldPieces,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default BankViewModel"]}