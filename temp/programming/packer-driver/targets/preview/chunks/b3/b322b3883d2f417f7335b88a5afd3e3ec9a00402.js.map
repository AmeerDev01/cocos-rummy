{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/egypt/Slot/Component/Egypt_RulesPanel.ts"],"names":["_decorator","PageView","Node","tween","UIOpacity","Vec3","BaseComponent","ccclass","property","Egypt_RulesPanel","showIndex","start","bindEvent","closeButton","on","EventType","TOUCH_END","hidePanel","_nodes","index","pageView","getCurrentPageIndex","scrollToPage","getPages","length","showIndexMark","bindUI","uiOpacity","node","getComponent","opacity","to","call","scale","destroy","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, PageView, Node, tween, UIOpacity, UITransform, Vec3 } from 'cc';\r\nimport BaseComponent from './BaseComponent';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Egypt_RulesPanel')\r\nexport class Egypt_RulesPanel extends BaseComponent {\r\n\r\n\t@property(Node)\r\n\tcloseButton: Node = null\r\n\r\n\t// @property(Node)\r\n\t// mainPanel: Node = null\r\n\r\n\t// @property(Node)\r\n\t// contentWrap: Node = null\r\n    @property(PageView)\r\n    pageView:PageView=null\r\n\tstart() {\r\n\r\n\t}\r\n\tprivate showIndex: number = 0\r\n\tprotected bindEvent(): void {\r\n\t\tthis.closeButton.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.hidePanel()\r\n\t\t})\r\n        this._nodes['btnLeft'].on(Node.EventType.TOUCH_END,()=>{\r\n            const index = this.pageView.getCurrentPageIndex();\r\n            if (index > 0) {\r\n                this.pageView.scrollToPage(index - 1, 0.5); // 切换到上一页，可设置切换动画时间\r\n            }\r\n        })\r\n        this._nodes['btnRight'].on(Node.EventType.TOUCH_END,()=>{\r\n            const index = this.pageView.getCurrentPageIndex();\r\n            if (index < this.pageView.getPages().length - 1) {\r\n                this.pageView.scrollToPage(index + 1, 0.5); // 切换到下一页，可设置切换动画时间\r\n            }\r\n        })\r\n\t\t// let con_x: number = 0\r\n\r\n\t\t// this.showIndexMark()\r\n\t\t// let width = this.contentWrap.getComponent(UITransform).width\r\n\t\t// this.contentWrap.on(Node.EventType.TOUCH_START, (e) => {\r\n\t\t// \tcon_x = e.getLocation().x\r\n\t\t// })\r\n\t\t// this.contentWrap.on(Node.EventType.TOUCH_MOVE, () => { })\r\n\t\t// this.contentWrap.on(Node.EventType.TOUCH_END, (e) => {\r\n\t\t// \tconst t = e.getLocation().x - con_x\r\n\t\t// \tif (t < 0) {\r\n\t\t// \t\t//向左滑动\r\n\t\t// \t\tif (this.contentWrap.children[0].position.x <= -(this.contentWrap.children.length - 1) * width) {\r\n\t\t// \t\t\treturn\r\n\t\t// \t\t}\r\n\t\t// \t\tthis.contentWrap.children.forEach((child, index) => {\r\n\t\t// \t\t\ttween(child).to(0.1, { position: new Vec3(child.position.x - width, child.position.y) }).start()\r\n\t\t// \t\t})\r\n\t\t// \t\tthis.showIndex++\r\n\t\t// \t}\r\n\t\t// \tif (t > 0) {\r\n\t\t// \t\t//向右滑动\r\n\t\t// \t\tif (this.contentWrap.children[this.contentWrap.children.length - 1].position.x + 100 >= (this.contentWrap.children.length - 1) * width) {\r\n\t\t// \t\t\treturn\r\n\t\t// \t\t}\r\n\t\t// \t\tthis.contentWrap.children.forEach((child, index) => {\r\n\t\t// \t\t\ttween(child).to(0.1, { position: new Vec3(child.position.x + width, child.position.y) }).start()\r\n\t\t// \t\t})\r\n\t\t// \t\tthis.showIndex--\r\n\t\t// \t}\r\n\t\t// \tthis.showIndexMark()\r\n\t\t// })\r\n\t}\r\n\tprivate showIndexMark() {\r\n\t\t// this.indexMark.children.forEach((item, i) => {\r\n\t\t// \tif (this.showIndex !== i) {\r\n\t\t// \t\titem.children[0].active = false\r\n\t\t// \t} else {\r\n\t\t// \t\titem.children[0].active = true\r\n\t\t// \t}\r\n\t\t// })\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tconst uiOpacity = this.node.getComponent(UIOpacity)\r\n\t\tuiOpacity.opacity = 0;\r\n\t\t// this.mainPanel.setScale(0.8, 0.8)\r\n\t\t// tween(this.mainPanel).to(0.4, { scale: new Vec3(1, 1, 1) }, { easing: \"backOut\" }).start()\r\n\t\ttween(uiOpacity).to(0.4, { opacity: 255 }).call(() => { }).start()\r\n\t}\r\n\r\n\tpublic hidePanel() {\r\n\t\tconst uiOpacity = this.node.getComponent(UIOpacity)\r\n\t\ttween(this.node).to(0.2, { scale: new Vec3(0, 0, 0) }).start()\r\n\t\ttween(uiOpacity).to(0.2, { opacity: 0 }).call(() => {\r\n\t\t\tthis.node.destroy()\r\n\t\t}).start()\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}