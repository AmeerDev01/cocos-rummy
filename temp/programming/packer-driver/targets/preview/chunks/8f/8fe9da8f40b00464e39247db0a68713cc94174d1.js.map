{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/store/actions/history.ts"],"names":["reduxAct","default","initState","result1","result2","result3","result4","tren","statistik","rekor","jackpotWin","ActionTypes","changeResult1Action","createAction","BANDAR_HISTORY_RESULT1","changeResult2Action","BANDAR_HISTORY_RESULT2","changeResult3Action","BANDAR_HISTORY_RESULT3","changeResult4Action","BANDAR_HISTORY_RESULT4","changeTrenAction","BANDAR_HISTORY_TREN","changeStatistikAction","BANDAR_HISTORY_STATISTIK","changeRekorAction","BANDAR_HISTORY_REKOR","changeJackpotWinAction","BANDAR_JACKPOT_WIN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACoBA,MAAAA,Q,aAAXC,O;;;;;+EADT;;;2BA0CaC,S,GAA2B;AACpCC,QAAAA,OAAO,EAAC,EAD4B;AAEpCC,QAAAA,OAAO,EAAC,EAF4B;AAGpCC,QAAAA,OAAO,EAAC,EAH4B;AAIpCC,QAAAA,OAAO,EAAC,EAJ4B;AAKpCC,QAAAA,IAAI,EAAC,IAL+B;AAMpCC,QAAAA,SAAS,EAAC,IAN0B;AAOpCC,QAAAA,KAAK,EAAC,IAP8B;AAQpCC,QAAAA,UAAU,EAAC;AARyB,O;AAWxC;;;6BAEYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAWZ;;;AAYA;qCACaC,mB,GAAsB;AAAA;AAAA,gCAASC,YAAT,CAAsBF,WAAW,CAACG,sBAAlC,EAEhCX,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAJkC,C;AAKnC;;;qCACaY,mB,GAAsB;AAAA;AAAA,gCAASF,YAAT,CAAsBF,WAAW,CAACK,sBAAlC,EAC9BZ,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAHkC,C;AAInC;;;qCACaa,mB,GAAsB;AAAA;AAAA,gCAASJ,YAAT,CAAsBF,WAAW,CAACO,sBAAlC,EAC9Bb,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAHkC,C;AAInC;;;qCACac,mB,GAAsB;AAAA;AAAA,gCAASN,YAAT,CAAsBF,WAAW,CAACS,sBAAlC,EAC9Bd,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAHkC,C;AAInC;;;kCACae,gB,GAAmB;AAAA;AAAA,gCAASR,YAAT,CAAsBF,WAAW,CAACW,mBAAlC,EAC3Bf,IAAD,IAAsE;AACpE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAH+B,C;AAIhC;;;uCACagB,qB,GAAwB;AAAA;AAAA,gCAASV,YAAT,CAAsBF,WAAW,CAACa,wBAAlC,EAChChB,SAAD,IAAmF;AACjF,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAHoC,C;AAIrC;;;mCACaiB,iB,GAAoB;AAAA;AAAA,gCAASZ,YAAT,CAAsBF,WAAW,CAACe,oBAAlC,EAC9BjB,KAAD,IAAqE;AACnE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAHgC,C;AAIjC;;;wCACakB,sB,GAAyB;AAAA;AAAA,gCAASd,YAAT,CAAsBF,WAAW,CAACiB,kBAAlC,EACnClB,UAAD,IAA6E;AAC3E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAHqC,C","sourcesContent":["// import {MyInfo} from './userInfo';\r\nimport { default as reduxAct } from \"redux-act\";\r\nimport { Statistik, History, RokerTar} from \"../../type\";\r\n\r\nexport type JackpotWin={\r\n  name:string,\r\n  icon:number,//头像\r\n  winGold:number,\r\n}\r\n\r\nexport type Roker={\r\n  black:RokerTar,\r\n  red:RokerTar,\r\n  plum:RokerTar,\r\n  diamond:RokerTar,\r\n}\r\n\r\nexport type HistoryItem = {\r\n  result: number[],\r\n  time:number,\r\n}\r\n\r\nexport type InitStateType = {\r\n    /**黑桃区域历史记录 */\r\n    result1:number[],\r\n    /**红桃区域历史记录 */\r\n    result2:number[],\r\n    /**梅花区域历史记录 */\r\n    result3:number[],\r\n    /**方块区域历史记录 */\r\n    result4:number[],\r\n    /**历史输赢状况 */\r\n    tren:History[],\r\n    /**筹码区输赢状况 */\r\n    statistik:Statistik[],\r\n    /**玩家投注输赢状况 */\r\n    rekor:Roker,\r\n    /** jackpot前10位赢家 jackpot奖池获奖金额最高的10名玩家 */\r\n    jackpotWin:JackpotWin[]\r\n    \r\n};\r\n\r\nexport const initState: InitStateType = {\r\n    result1:[],\r\n    result2:[],\r\n    result3:[],\r\n    result4:[],\r\n    tren:null,\r\n    statistik:null,\r\n    rekor:null,\r\n    jackpotWin:null,\r\n};\r\n\r\n/**必须大写，不然redux-act要自动加序列号 */\r\n\r\nexport enum ActionTypes {\r\n  BANDAR_HISTORY_RESULT1=\"BANDAR_HISTORY_RESULT1\",\r\n  BANDAR_HISTORY_RESULT2=\"BANDAR_HISTORY_RESULT2\",\r\n  BANDAR_HISTORY_RESULT3=\"BANDAR_HISTORY_RESULT3\",\r\n  BANDAR_HISTORY_RESULT4=\"BANDAR_HISTORY_RESULT4\",\r\n  BANDAR_HISTORY_TREN=\"BANDAR_HISTORY_TREN\",\r\n  BANDAR_HISTORY_STATISTIK=\"BANDAR_HISTORY_STATISTIK\",\r\n  BANDAR_HISTORY_REKOR=\"BANDAR_HISTORY_REKOR\",\r\n  BANDAR_JACKPOT_WIN=\"BANDAR_JACKPOT_WIN\",\r\n}\r\n\r\n/**定义action的payLoad类型 */\r\n\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.BANDAR_HISTORY_RESULT1 ? { result1 : number[] }:\r\n  A extends ActionTypes.BANDAR_HISTORY_RESULT2 ? { result2 : number[] }:\r\n  A extends ActionTypes.BANDAR_HISTORY_RESULT3 ? { result3 : number[] }:\r\n  A extends ActionTypes.BANDAR_HISTORY_RESULT4 ? { result4 : number[] }:\r\n  A extends ActionTypes.BANDAR_HISTORY_TREN ? { tren : History[] }:\r\n  A extends ActionTypes.BANDAR_HISTORY_STATISTIK ? { statistik : Statistik[] }:\r\n  A extends ActionTypes.BANDAR_HISTORY_REKOR ? { rekor : Roker }: \r\n  A extends ActionTypes.BANDAR_JACKPOT_WIN ? { jackpotWin:JackpotWin[] }:never;\r\n\r\n/**改变黑桃区域历史记录 */\r\nexport const changeResult1Action = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_RESULT1,\r\n  \r\n  (result1:number[]): ActionPayLoad<ActionTypes.BANDAR_HISTORY_RESULT1> => {\r\n    return { result1 }\r\n})\r\n/**改变红桃区域历史记录 */\r\nexport const changeResult2Action = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_RESULT2,\r\n    (result2:number[]): ActionPayLoad<ActionTypes.BANDAR_HISTORY_RESULT2> => {\r\n      return { result2 }\r\n})\r\n/**改变梅花区域历史记录 */\r\nexport const changeResult3Action = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_RESULT3,\r\n    (result3:number[]): ActionPayLoad<ActionTypes.BANDAR_HISTORY_RESULT3> => {\r\n      return { result3 }\r\n})\r\n/**改变方块区域历史记录 */\r\nexport const changeResult4Action = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_RESULT4,\r\n    (result4:number[]): ActionPayLoad<ActionTypes.BANDAR_HISTORY_RESULT4> => {\r\n      return { result4 }\r\n})\r\n/**改变历史输赢状况信息 */\r\nexport const changeTrenAction = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_TREN,\r\n    (tren : History[]): ActionPayLoad<ActionTypes.BANDAR_HISTORY_TREN> => {\r\n      return { tren }\r\n})\r\n/**改变筹码区输赢状况信息 */\r\nexport const changeStatistikAction = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_STATISTIK,\r\n    (statistik : Statistik[] ): ActionPayLoad<ActionTypes.BANDAR_HISTORY_STATISTIK> => {\r\n      return { statistik }\r\n})\r\n/**改变玩家投注输赢状况信息 */\r\nexport const changeRekorAction = reduxAct.createAction(ActionTypes.BANDAR_HISTORY_REKOR,\r\n  (rekor : Roker ): ActionPayLoad<ActionTypes.BANDAR_HISTORY_REKOR> => {\r\n    return { rekor }\r\n})\r\n/**改变jackpot赢家信息 */\r\nexport const changeJackpotWinAction = reduxAct.createAction(ActionTypes.BANDAR_JACKPOT_WIN,\r\n  (jackpotWin:JackpotWin[] ): ActionPayLoad<ActionTypes.BANDAR_JACKPOT_WIN> => {\r\n    return { jackpotWin }\r\n})\r\n"]}