{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/components/Bandar_set.ts"],"names":["_decorator","Node","Toggle","BaseComponent","UseSetOption","bandar_Audio","playBtnClick","playMainBg","ccclass","property","Bandar_set","propertyNode","props_btn_exit","props_toggle_music","props_toggle_sound","props","events","onClosePanel","start","initState","bindEvent","on","EventType","TOUCH_END","toggle","Instance","setOption","target","getComponent","isChecked","pause","useProps","key","value","toggleCallback","event","customEventData","bindUI","option","music","sound","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;AACjBC,MAAAA,a,iBAAAA,a;;AAEFC,MAAAA,Y;;AACEC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,U,iBAAAA,U;;;;;;;;;OAC/B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;4BAiBjBU,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb;AAAA;AAAA,0CACsE;AAAA;AAAA;AAAA,eAI3DC,YAJ2D,GAI5C;AACxBC,YAAAA,cAAc,EAAC,IAAIX,IAAJ,EADS;AAExBY,YAAAA,kBAAkB,EAAC,IAAIZ,IAAJ,EAFK;AAGxBa,YAAAA,kBAAkB,EAAC,IAAIb,IAAJ;AAHK,WAJ4C;AAAA,eAU9Dc,KAV8D,GAU9C,EAV8C;AAAA,eAc9DC,MAd8D,GAc7C;AACvBC,YAAAA,YAAY,EAAC,MAAI,CAAE;AADI,WAd6C;AAAA;;AACrEC,QAAAA,KAAK,GAAG,CACN;;AAgBQC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKT,YAAL,CAAkBC,cAAlB,CAAiCS,EAAjC,CAAoCpB,IAAI,CAACqB,SAAL,CAAeC,SAAnD,EAA6D,MAAI;AAChE;AAAA;AAAA;AACA,iBAAKP,MAAL,CAAYC,YAAZ;AACA,WAHD;AAIA,eAAKN,YAAL,CAAkBE,kBAAlB,CAAqCQ,EAArC,CAAwC,QAAxC,EAAmDG,MAAD,IAAY;AAC7D;AAAA;AAAA;AACC;AAAA;AAAA,8CAAaC,QAAb,GAAwBC,SAAxB,CAAkC,OAAlC,EAA2CF,MAAM,CAACG,MAAP,CAAcC,YAAd,CAA2B1B,MAA3B,EAAmC2B,SAA9E;AACAL,YAAAA,MAAM,CAACG,MAAP,CAAcC,YAAd,CAA2B1B,MAA3B,EAAmC2B,SAAnC,GAA+C;AAAA;AAAA,2CAA/C,GAA8D;AAAA;AAAA,8CAAaC,KAAb,EAA9D;AACA,WAJF,EAII,IAJJ;AAKA,eAAKnB,YAAL,CAAkBG,kBAAlB,CAAqCO,EAArC,CAAwC,QAAxC,EAAmDG,MAAD,IAAY;AAC7D;AAAA;AAAA;AACA;AAAA;AAAA,8CAAaC,QAAb,GAAwBC,SAAxB,CAAkC,OAAlC,EAA2CF,MAAM,CAACG,MAAP,CAAcC,YAAd,CAA2B1B,MAA3B,EAAmC2B,SAA9E;AACA,WAHD,EAGG,IAHH;AAKA;;AAESE,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CAEpE;;AAEDC,QAAAA,cAAc,CAACC,KAAD,EAAeC,eAAf,EAAwC,CAErD;;AAESC,QAAAA,MAAM,GAAS;AACxB,eAAK1B,YAAL,CAAkBE,kBAAlB,CAAqCe,YAArC,CAAkD1B,MAAlD,EAA0D2B,SAA1D,GAAsE;AAAA;AAAA,4CAAaJ,QAAb,GAAwBa,MAAxB,CAA+BC,KAArG;AACA,eAAK5B,YAAL,CAAkBG,kBAAlB,CAAqCc,YAArC,CAAkD1B,MAAlD,EAA0D2B,SAA1D,GAAsE;AAAA;AAAA,4CAAaJ,QAAb,GAAwBa,MAAxB,CAA+BE,KAArG;AAEA;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAzDoE,O","sourcesContent":["import { _decorator,Node, Toggle } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { initToggle } from '../../../utils/tool';\r\nimport UseSetOption from '../../../utils/UseSetOption';\r\nimport { bandar_Audio, playBtnClick, playMainBg } from '../index';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\t\r\n}\r\nexport interface IEvent {\r\n\tonClosePanel:()=>void\r\n}\r\n\r\n\r\n@ccclass('Bandar_set')\r\nexport class Bandar_set extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\t }\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_exit:new Node(),\r\n\t\tprops_toggle_music:new Node(),\r\n\t\tprops_toggle_sound:new Node(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\t\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tonClosePanel:()=>{}\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_exit.on(Node.EventType.TOUCH_END,()=>{\r\n\t\t\tplayBtnClick();\r\n\t\t\tthis.events.onClosePanel()\r\n\t\t})\r\n\t\tthis.propertyNode.props_toggle_music.on('toggle', (toggle) => {\r\n\t\t\tplayBtnClick();\r\n\t\t\t UseSetOption.Instance().setOption(\"music\", toggle.target.getComponent(Toggle).isChecked) \r\n\t\t\t toggle.target.getComponent(Toggle).isChecked ? playMainBg() : bandar_Audio.pause();\r\n\t\t\t}, this)\r\n\t\tthis.propertyNode.props_toggle_sound.on('toggle', (toggle) => { \r\n\t\t\tplayBtnClick(); \r\n\t\t\tUseSetOption.Instance().setOption(\"sound\", toggle.target.getComponent(Toggle).isChecked) \r\n\t\t}, this)\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\r\n\t}\r\n\r\n\ttoggleCallback(event: Event, customEventData: string) {\r\n\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.propertyNode.props_toggle_music.getComponent(Toggle).isChecked = UseSetOption.Instance().option.music;\r\n\t\tthis.propertyNode.props_toggle_sound.getComponent(Toggle).isChecked = UseSetOption.Instance().option.sound;\r\n\t\t\t\t\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}