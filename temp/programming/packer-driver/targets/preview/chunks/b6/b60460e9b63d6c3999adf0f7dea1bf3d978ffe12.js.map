{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fruit777/viewModel/BoxPanelViewModel.ts"],"names":["instantiate","sys","ViewModel","StoreInject","getStore","GetHallStore","footerViewModel","fruit777_Audio","sourceManageSeletor","SKT_MAG_TYPE","sktInstance","sktMsgListener","addToastAction","dataTransfer","DataKeyType","refreshData","config","PrefabPathDefine","setRollRoundEnd","changeProfit","setSubGameTimes","setWaiting","updateBalance","updateSubGameTimes","GameType","JactpotType","BaseViewModel","OpenStatus","SoundPathDefine","lang","BoxPanelViewModel","constructor","openWaitingBoxId","jackpot","begin","stop","play","BG_MUSIC_1","dispatch","FREE_GAME_AMOUNT","SUBGAME_TIMES","mountView","getFile","JACK_POT","source","appendTo","viewNode","add","LAUNCHER_BET","data","error","awardInfo","AWARD_INFO","key","setProps","BONUS","awardBoxItem","find","item","id","openDoBoxData","boxId","dataId","times","addTimes","levelUp","up","fruitFileName","fileName","score","distance","name","setEvent","onOpenHandler","console","log","playOneShot","OPEN_AWARDBOX","sendSktMessage","positionId","comp","getPositionData","tableId","JSON","parse","localStorage","getItem","gameId","content","write","k","InitGameModule","HoldOn","placeStr","onFreeGameAmoundChange","allDoneHandler","updateTimesHandler","jackPotTypeName","GAME_TYPE","SUBGAME1","BALANCE","undefined","props","BANANA","fruitHeader","APPLE","GRAPE","STRAWBERRY","WATERMELON","LEVEL","level","scheduleOnce","autoLauncherPanel","setLaunchEvent","manualBetHandler","awardBoxMap","i","l","length","awardBox","getOpenStatus","CLOSE","openAwardBox","unMountCallBack","removeById","connect","inject","state","remainGameTimes","game","remainSubGameTimes"],"mappings":"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","sourcesContent":["import { Node, instantiate, sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { Fruit777_BoxPanel, IProps, IEvent } from \"../components/Fruit777_BoxPanel\"\r\nimport { Fruit777_JackPot, IState as JPIState, IProps as JPIprops, IEvent as JPIEvent } from \"../components/Fruit777_JackPot\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from \"../store\"\r\nimport { getStore as GetHallStore } from \"../../../hall/store\"\r\nimport { footerViewModel, fruit777_Audio, sourceManageSeletor } from \"../index\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from '../socketConnect';\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\nimport dataTransfer, { DataKeyType, refreshData } from \"../dataTransfer\"\r\nimport config from \"../config\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { setRollRoundEnd } from \"../store/actions/roller\"\r\nimport { changeProfit, setSubGameTimes, setWaiting, updateBalance, updateSubGameTimes } from \"../store/actions/game\"\r\nimport { GameType, JactpotType } from \"../type\"\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\"\r\nimport { OpenStatus } from \"../components/Fruit777_AwardBox\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { lang } from \"../../../hall\"\r\n\r\n@StoreInject(getStore())\r\nclass BoxPanelViewModel extends ViewModel<Fruit777_BoxPanel, IProps, IEvent> {\r\n  constructor() {\r\n    super('Fruit777_BoxPanel')\r\n  }\r\n  public openWaitingBoxId: number = -1\r\n  private jackpot: BaseViewModel<Fruit777_JackPot, JPIState, JPIprops, JPIEvent>\r\n  protected begin() {\r\n    fruit777_Audio.stop()\r\n    fruit777_Audio.play(SoundPathDefine.BG_MUSIC_1, true)\r\n    this.dispatch(setRollRoundEnd(false))\r\n    // console.log('SUBGAME_TIMES')\r\n    this.dispatch(changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)))\r\n    this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    this.jackpot = new BaseViewModel<Fruit777_JackPot, JPIState, JPIprops, JPIEvent>('Fruit777_JackPot').mountView(sourceManageSeletor().getFile(PrefabPathDefine.JACK_POT).source).appendTo(this.viewNode)\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET, \"box\", (data, error) => {\r\n      if (!error) {\r\n        // console.log('box', data)\r\n        refreshData(data)\r\n        //这里尤其注意，gameType变了，这里的数据一定要阻止\r\n        // if (dataTransfer(DataKeyType.GAME_TYPE) !== GameType.SUBGAME1) return\r\n        const awardInfo = dataTransfer(DataKeyType.AWARD_INFO)\r\n        for (let key in awardInfo) {\r\n          if (key === \"BONUS\") {\r\n            this.setProps({\r\n              BONUS: awardInfo[key]\r\n            })\r\n          } else {\r\n            const awardBoxItem = config.awardBoxItem.find(item => item.id === +key)\r\n            // console.log(key, awardBoxItem)\r\n            awardBoxItem && this.setProps({\r\n              openDoBoxData: {\r\n                boxId: this.openWaitingBoxId,\r\n                dataId: awardBoxItem.id,\r\n                times: awardBoxItem.addTimes,\r\n                levelUp: awardBoxItem.up,\r\n                fruitFileName: awardBoxItem.fileName,\r\n                score: awardInfo[key],\r\n                distance: awardBoxItem.distance,\r\n                BONUS: 0,\r\n                name: awardBoxItem.name\r\n              }\r\n            })\r\n          }\r\n        }\r\n        this.openWaitingBoxId = -1\r\n      } else {\r\n        this.openWaitingBoxId = -1\r\n      }\r\n    }, 10)\r\n\r\n    this.setEvent({\r\n      onOpenHandler: (boxId) => {\r\n        console.log('open', this.openWaitingBoxId)\r\n        fruit777_Audio.playOneShot(SoundPathDefine.OPEN_AWARDBOX)\r\n        if (this.openWaitingBoxId === -1 && dataTransfer(DataKeyType.SUBGAME_TIMES) !== 0) {\r\n          this.openWaitingBoxId = boxId\r\n          sktInstance.sendSktMessage(SKT_MAG_TYPE.LAUNCHER_BET, {\r\n            positionId: footerViewModel.comp.getPositionData().positionId,\r\n            tableId: JSON.parse(sys.localStorage.getItem('fruit777')).tableId,\r\n            gameId: config.gameId\r\n          })\r\n          this.dispatch(setWaiting(false))\r\n        } else {\r\n          GetHallStore().dispatch(addToastAction({ content: lang.write(k => k.InitGameModule.HoldOn, {}, { placeStr: \"Hold on please...\" }) }))\r\n        }\r\n      },\r\n      onFreeGameAmoundChange: () => {\r\n        this.dispatch(changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)))\r\n      },\r\n      allDoneHandler: () => {\r\n        this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n      },\r\n      updateTimesHandler: (times, jackPotTypeName) => {\r\n        if (dataTransfer(DataKeyType.GAME_TYPE) === GameType.SUBGAME1) {\r\n          this.dispatch(updateSubGameTimes(times))\r\n          this.dispatch(setWaiting(true))\r\n        } else {\r\n          this.dispatch(updateSubGameTimes(0))\r\n        }\r\n        this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE)))\r\n        if (jackPotTypeName !== undefined) {\r\n          const props = instantiate(this.jackpot.comp.props)\r\n          jackPotTypeName === JactpotType.BANANA && (props.fruitHeader['banana'] = true)\r\n          jackPotTypeName === JactpotType.APPLE && (props.fruitHeader['apple'] = true)\r\n          jackPotTypeName === JactpotType.GRAPE && (props.fruitHeader['grape'] = true)\r\n          jackPotTypeName === JactpotType.STRAWBERRY && (props.fruitHeader['strawberry'] = true)\r\n          jackPotTypeName === JactpotType.WATERMELON && (props.fruitHeader['watermelon'] = true)\r\n          jackPotTypeName === JactpotType.LEVEL && (props['level'] = props.level + 1)\r\n          this.jackpot.setProps(props)\r\n        }\r\n      }\r\n    })\r\n    this.comp.scheduleOnce(() => {\r\n      this.dispatch(setWaiting(true))\r\n    }, 1.5)\r\n\r\n    footerViewModel.autoLauncherPanel.setLaunchEvent(() => {\r\n      this.manualBetHandler()\r\n    })\r\n  }\r\n\r\n  //用于自动触发\r\n  public manualBetHandler() {\r\n    if (dataTransfer(DataKeyType.GAME_TYPE) === GameType.SUBGAME1 && this.comp.awardBoxMap) {\r\n      for (let i = 0, l = this.comp.awardBoxMap.length; i < l; i++) {\r\n        const awardBox = this.comp.awardBoxMap[i]\r\n        if (awardBox.comp.getOpenStatus() === OpenStatus.CLOSE) {\r\n          awardBox.comp.openAwardBox()\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  protected unMountCallBack(): void {\r\n    // this.comp.awardBoxMap.forEach(vm => vm.unMount())\r\n    // this.jackpot.unMount()\r\n    sktMsgListener.removeById(\"box\")\r\n  }\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        remainGameTimes: state.game.remainSubGameTimes\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default BoxPanelViewModel"]}