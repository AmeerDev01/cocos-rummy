{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/language/Internationalization.ts"],"names":["Internationalization","LanguageItemType","constructor","languagePkg","languageItemType","use","write","target","formatData","option","_option","Object","assign","langItemType","langStr","placeStr","noWarn","console","warn","replace","match","key","hasOwnProperty"],"mappings":";;;gDAQqBA,oB;;;;;;;;;;;;;;AARZC,MAAAA,gB,iBAAAA,gB;;;;;;;yBAQYD,oB,GAAN,MAAMA,oBAAN,CAA8B;AAC3CE,QAAAA,WAAW,CAACC,WAAD,EAAiB;AAAA,eAGrBA,WAHqB;AAAA,eAIrBC,gBAJqB;AAC1B,eAAKD,WAAL,GAAmBA,WAAnB;AACD;;AAGD;AACAE,QAAAA,GAAG,CAACD,gBAAD,EAAqC;AACtC,eAAKA,gBAAL,GAAwBA,gBAAxB;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEE,QAAAA,KAAK,CAACC,MAAD,EAAmCC,UAAnC,EAAwDC,MAAxD,EASF;AAED,cAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC5BC,YAAAA,YAAY,EAAE,KAAKT,gBADS;AAE5BU,YAAAA,OAAO,EAAEP,MAAM,CAAC,KAAKJ,WAAN,CAAN,GAA2BI,MAAM,CAAC,KAAKJ,WAAN,CAAN,CAAyB,KAAKC,gBAAL,IAA0BK,MAAM,IAAIA,MAAM,CAACI,YAApE,CAA3B,GAAgH,IAF7F;;AAG5B;AACAE,YAAAA,QAAQ,EAAE,IAJkB;AAK5BC,YAAAA,MAAM,EAAE;AALoB,WAAd,EAMbP,MAAM,IAAI,EANG,CAAhB;;AAQA,cAAI,CAACF,MAAM,CAAC,KAAKJ,WAAN,CAAX,EAA+B;AAC7B;AACA,gBAAIM,MAAM,IAAIA,MAAM,CAACM,QAArB,EAA+B;AAC7BL,cAAAA,OAAO,CAACI,OAAR,GAAkBL,MAAM,CAACM,QAAzB;AACD,aAFD,MAEO;AACL,qBAAOL,OAAO,CAACI,OAAf;AACD;AACF;;AAED,cAAI,CAACJ,OAAO,CAACG,YAAb,EAA2B;AACzB;AACAH,YAAAA,OAAO,CAACM,MAAR,IAAkBC,OAAO,CAACC,IAAR,CAAa,uBAAb,CAAlB;AACA,mBAAOR,OAAO,CAACK,QAAf;AACD,WAvBA,CAwBD;;;AACA,iBAAO,CAACP,UAAD,GAAcE,OAAO,CAACI,OAAtB,GAAgCJ,OAAO,CAACI,OAAR,CAAgBK,OAAhB,CAAwB,YAAxB,EAAsC,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACjG,gBAAIb,UAAU,CAACc,cAAX,CAA0BD,GAA1B,CAAJ,EAAoC;AAClC,qBAAOb,UAAU,CAACa,GAAD,CAAjB;AACD,aAFD,MAEO;AACL,qBAAOD,KAAP;AACD;AACF,WANsC,CAAvC;AAOD;;AA1D0C,O;AA6D7C;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { LanguageItemType } from \"./languagePkg\"\r\n\r\nexport type LanguageItem = {\r\n  [LanguageItemType.ZH]: string,\r\n  [LanguageItemType.EN]: string,\r\n  [LanguageItemType.IDA]: string,\r\n}\r\n\r\nexport default class Internationalization<T> {\r\n  constructor(languagePkg: T) {\r\n    this.languagePkg = languagePkg\r\n  }\r\n  public languagePkg: T\r\n  public languageItemType: LanguageItemType\r\n  /**配置语言类型 */\r\n  use(languageItemType: LanguageItemType) {\r\n    this.languageItemType = languageItemType\r\n  }\r\n  /**\r\n   * \r\n   * @param target 语言包里面的字段层级\r\n   * @param formatData 格式化的填充数据\r\n   * @param option 包含几个可选字段，1:本次强制执行的语言包类型；2:本次强制显示的文字，优先级很高，3:若出现可预知的异常，要进行占位的文字；4:没有发现指定的语言，是否显示警告(显示占位文字)\r\n   * @returns \r\n   */\r\n  write(target: (pkg: T) => LanguageItem, formatData?: object, option?: {\r\n    /**本次强制执行的语言包类型 */\r\n    langItemType?: LanguageItemType,\r\n    /**本次强制显示的文字，优先级很高 */\r\n    langStr?: string,\r\n    /**若出现可预知的异常，要进行占位的文字 */\r\n    placeStr?: string,\r\n    /**没有发现指定的语言，是否显示警告(显示占位文字) */\r\n    noWarn?: boolean\r\n  }) {\r\n\r\n    const _option = Object.assign({\r\n      langItemType: this.languageItemType,\r\n      langStr: target(this.languagePkg) ? target(this.languagePkg)[this.languageItemType || (option && option.langItemType)] : '--',\r\n      /**缺省字段 */\r\n      placeStr: '--',\r\n      noWarn: true\r\n    }, option || {})\r\n\r\n    if (!target(this.languagePkg)) {\r\n      //可能没有配置这个语句项，若有占位字符，就显示占位字符\r\n      if (option && option.placeStr) {\r\n        _option.langStr = option.placeStr\r\n      } else {\r\n        return _option.langStr\r\n      }\r\n    }\r\n\r\n    if (!_option.langItemType) {\r\n      /**没有设置语言，也没有临时语言设置，或者被临时置空了 */\r\n      _option.noWarn && console.warn('language config error')\r\n      return _option.placeStr\r\n    }\r\n    // if (!_option.langStr) return '-error-'\r\n    return !formatData ? _option.langStr : _option.langStr.replace(/\\{(\\w+)\\}/g, function (match, key) {\r\n      if (formatData.hasOwnProperty(key)) {\r\n        return formatData[key];\r\n      } else {\r\n        return match;\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**使用示例 */\r\n/*\r\n  const lang = new Internationalization(languagePkg)\r\n  lang.use(LanguageItemType.EN)\r\n  console.log(lang.write(k => k.moduleName2.demoTitle, { name: 'weishere', age: 22 }, {\r\n    langStr: 'daxi-{name}-daxi', //可缺省\r\n    langItemType: LanguageItemType.EN, //可缺省\r\n    placeStr: 'daxi-{name}-daxi', //可缺省\r\n  })) \r\n*/"]}