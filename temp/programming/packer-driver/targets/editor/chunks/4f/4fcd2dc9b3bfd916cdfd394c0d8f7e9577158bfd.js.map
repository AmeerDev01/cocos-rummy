{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/viewModel/BaseViewModel.ts"],"names":["BaseViewModel","ViewModel","constructor","componentStr","begin","connect","inject","state"],"mappings":";;;0FAMMA,a;;;;;;;;;;;;;;;;;;;;;;AALCC,MAAAA,S;;;;;;;;;AAIP;AACMD,MAAAA,a,GAAN,MAAMA,aAAN;AAAA;AAAA,kCAA4F;AAC1FE,QAAAA,WAAW,CAACC,YAAD,EAAuB;AAChC,gBAAMA,YAAN;AACD;;AACSC,QAAAA,KAAK,GAAG;AAChB;AACD;AAED;AACF;AACA;AACA;;;AACSC,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,mBAAO,EAAP;AACD,WAFD;AAGD;;AAhByF,O;;yBAmB7EP,a,GACf;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Node } from \"cc\"\r\nimport ViewModel from \"../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { BaseComponent } from \"../../base/BaseComponent\"\r\n\r\n/**此类作为基础的实例化工具，用于不需要大量业务逻辑的组件，亦不需要接入redux */\r\nclass BaseViewModel<C extends BaseComponent<any, P, E>, S, P, E> extends ViewModel<C, P, E> {\r\n  constructor(componentStr: string) {\r\n    super(componentStr)\r\n  }\r\n  protected begin() {\r\n    /**公用的基本viewmodel，不要在这里添加代码 */\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * BaseViewModel类的connect无效\r\n   */\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {} as any\r\n    })\r\n  }\r\n}\r\n\r\nexport default BaseViewModel\r\n// class BaseViewModel<S, P, E> extends ViewModel<BaseComponent<S, P, E>, P, E> {\r\n//   constructor(componentStr: string) {\r\n//     super(componentStr)\r\n//   }\r\n//   protected begin() {\r\n//     /**公用的基本viewmodel，不要在这里添加代码 */\r\n//   }\r\n\r\n//   /**\r\n//    * @deprecated\r\n//    * BaseViewModel类的connect无效\r\n//    */\r\n//   public connect() {\r\n//     this.inject({}, (state: StateType) => {\r\n//       return {} as any\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export default BaseViewModel"]}