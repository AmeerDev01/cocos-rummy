{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/utils/CountdownTool.ts"],"names":["CountdownTool","constructor","update","t","countdown","isStart","setCountdown","getCountdown","getIsStart","start","stop","window","setInterval","clearInterval"],"mappings":";;;iBAGqBA,a;;;;;;;;;;;;;AAHrB;AACA;AACA;yBACqBA,a,GAAN,MAAMA,aAAN,CAAoB;AAKjCC,QAAAA,WAAW,CAACC,MAAD,EAAqC;AAAA,eAJxCC,CAIwC,GAJpC,CAAC,CAImC;AAAA,eAHxCC,SAGwC,GAH5B,CAG4B;AAAA,eAFxCC,OAEwC,GAF9B,KAE8B;AAAA,eADxCH,MACwC;AAC9C,eAAKA,MAAL,GAAcA,MAAd;AACD;;AACMI,QAAAA,YAAY,CAACF,SAAD,EAAoB;AACrC,eAAKA,SAAL,GAAiBA,SAAjB;AACD;;AAEMG,QAAAA,YAAY,GAAG;AACpB,iBAAO,KAAKH,SAAZ;AACD;;AAEMI,QAAAA,UAAU,GAAG;AAClB,iBAAO,KAAKH,OAAZ;AACD;;AACMI,QAAAA,KAAK,CAACL,SAAD,EAAoB;AAC9B,eAAKA,SAAL,GAAiBA,SAAjB;AACA,eAAKM,IAAL;;AACA,cAAI,KAAKN,SAAL,GAAiB,CAArB,EAAwB;AACtB,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKH,MAAL,CAAY,KAAKE,SAAjB;AACA,iBAAKD,CAAL,GAASQ,MAAM,CAACC,WAAP,CAAmB,MAAM;AAChC,mBAAKV,MAAL,CAAY,EAAE,KAAKE,SAAnB;;AACA,kBAAI,KAAKA,SAAL,IAAkB,CAAtB,EAAyB;AACvB,qBAAKM,IAAL;AACD;AACF,aALQ,EAKN,IALM,CAAT;AAMD,WATD,MASO;AACL,iBAAKR,MAAL,CAAY,KAAKE,SAAjB;AACD;AACF;;AACMM,QAAAA,IAAI,GAAG;AACZ,eAAKL,OAAL,GAAe,KAAf;AACAM,UAAAA,MAAM,CAACE,aAAP,CAAqB,KAAKV,CAA1B;AACD;;AAtCgC,O","sourcesContent":["/**\r\n * 倒计时工具\r\n */\r\nexport default class CountdownTool {\r\n  private t = -1;\r\n  private countdown = 0;\r\n  private isStart = false;\r\n  private update: (schedule: number) => void\r\n  constructor(update: (schedule: number) => void) {\r\n    this.update = update;\r\n  }\r\n  public setCountdown(countdown: number) {\r\n    this.countdown = countdown;\r\n  }\r\n\r\n  public getCountdown() {\r\n    return this.countdown;\r\n  }\r\n\r\n  public getIsStart() {\r\n    return this.isStart;\r\n  }\r\n  public start(countdown: number) {\r\n    this.countdown = countdown;\r\n    this.stop();\r\n    if (this.countdown > 0) {\r\n      this.isStart = true;\r\n      this.update(this.countdown);\r\n      this.t = window.setInterval(() => {\r\n        this.update(--this.countdown);\r\n        if (this.countdown <= 0) {\r\n          this.stop();\r\n        }\r\n      }, 1000)\r\n    } else {\r\n      this.update(this.countdown);\r\n    }\r\n  }\r\n  public stop() {\r\n    this.isStart = false;\r\n    window.clearInterval(this.t);\r\n  }\r\n}"]}