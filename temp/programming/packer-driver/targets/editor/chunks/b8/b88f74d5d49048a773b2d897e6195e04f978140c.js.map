{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/store/reducer/bet.ts"],"names":["instantiate","ActionTypes","initState","reduxAct","default","config","createReducer","YXX_BET","state","payload","_state","currentBetData","betData","find","v","betType","index","userId","betId","betAmount","totalBetAmount","meTotalBetAmount","isFly","push","isMyBet","newBetData","YXX_INIT_BET","betDatas","YXX_SELECT_CHIP","selectChip","YXX_CLEAR_BET","lastBet","forEach","cancelBetData","isQuit","chipTypes","value","YXX_CANCEL_BET"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;AAA2CC,MAAAA,S,iBAAAA,S;;AAChCC,MAAAA,Q,aAAXC,O;;AAEFC,MAAAA,M;;;;;;;;;yBAEQ;AAAA;AAAA,gCAASC,aAAT,CAAsC;AACnD,SAAC;AAAA;AAAA,wCAAYC,OAAb,GAAuB,CAACC,KAAD,EAAQC,OAAR,KAAuE;AAC5F,gBAAMC,MAAM,GAAGV,WAAW,CAACQ,KAAD,CAA1B;;AAEA,cAAIG,cAAc,GAAGD,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,OAAO,CAACG,OAAR,CAAgBG,OAAvD,CAArB;;AACA,cAAI,CAACJ,cAAL,EAAqB;AACnBA,YAAAA,cAAc,GAAG;AACfK,cAAAA,KAAK,EAAEP,OAAO,CAACG,OAAR,CAAgBI,KADR;AAEfC,cAAAA,MAAM,EAAER,OAAO,CAACG,OAAR,CAAgBK,MAFT;AAGfC,cAAAA,KAAK,EAAET,OAAO,CAACG,OAAR,CAAgBM,KAHR;AAIfC,cAAAA,SAAS,EAAEV,OAAO,CAACG,OAAR,CAAgBO,SAJZ;AAKfJ,cAAAA,OAAO,EAAEN,OAAO,CAACG,OAAR,CAAgBG,OALV;AAMfK,cAAAA,cAAc,EAAEX,OAAO,CAACG,OAAR,CAAgBO,SANjB;AAOfE,cAAAA,gBAAgB,EAAE,CAPH;AAQfC,cAAAA,KAAK,EAAEb,OAAO,CAACG,OAAR,CAAgBU;AARR,aAAjB;;AAUAZ,YAAAA,MAAM,CAACE,OAAP,CAAeW,IAAf,CAAoBZ,cAApB;AACD,WAZD,MAYO;AACLA,YAAAA,cAAc,CAACS,cAAf,IAAiCX,OAAO,CAACG,OAAR,CAAgBO,SAAjD;AACD;;AACD,cAAIV,OAAO,CAACG,OAAR,CAAgBQ,cAAhB,GAAiC,CAArC,EAAwC;AACtCT,YAAAA,cAAc,CAACS,cAAf,GAAgCX,OAAO,CAACG,OAAR,CAAgBQ,cAAhD;AACD;;AACD,cAAIX,OAAO,CAACG,OAAR,CAAgBY,OAApB,EAA6B;AAC3Bb,YAAAA,cAAc,CAACU,gBAAf,IAAmCZ,OAAO,CAACG,OAAR,CAAgBO,SAAnD;AACD;;AAEDT,UAAAA,MAAM,CAACe,UAAP,GAAoB,EAClB,GAAGhB,OAAO,CAACG,OADO;AAElBQ,YAAAA,cAAc,EAAET,cAAc,CAACS,cAFb;AAGlBC,YAAAA,gBAAgB,EAAEV,cAAc,CAACU;AAHf,WAApB,CA1B4F,CAgC5F;;AACA,iBAAO,EACL,GAAGX;AADE,WAAP;AAGD,SArCkD;AAsCnD,SAAC;AAAA;AAAA,wCAAYgB,YAAb,GAA4B,CAAClB,KAAD,EAAQC,OAAR,KAA4E;AACtG,iBAAO,EACL,GAAGD,KADE;AAELI,YAAAA,OAAO,EAAEH,OAAO,CAACkB;AAFZ,WAAP;AAID,SA3CkD;AA4CnD,SAAC;AAAA;AAAA,wCAAYC,eAAb,GAA+B,CAACpB,KAAD,EAAQC,OAAR,KAA+E;AAC5G,iBAAO,EACL,GAAGD,KADE;AAELqB,YAAAA,UAAU,EAAEpB,OAAO,CAACoB;AAFf,WAAP;AAID,SAjDkD;AAkDnD,SAAC;AAAA;AAAA,wCAAYC,aAAb,GAA6B,CAACtB,KAAD,EAAQC,OAAR,KAA6E;AACxG,gBAAMC,MAAM,GAAGV,WAAW,CAACQ,KAAD,CAA1B;;AAEA,gBAAMuB,OAAkB,GAAG,EAA3B;;AACA,cAAIvB,KAAK,CAACI,OAAV,EAAmB;AACjB;AACAJ,YAAAA,KAAK,CAACI,OAAN,CAAcoB,OAAd,CAAsBlB,CAAC,IAAI;AACzB,kBAAIA,CAAC,CAACO,gBAAF,GAAqB,CAAzB,EAA4B;AAC1BU,gBAAAA,OAAO,CAACR,IAAR,CAAa;AACXP,kBAAAA,KAAK,EAAEF,CAAC,CAACE,KADE;AAEXC,kBAAAA,MAAM,EAAEH,CAAC,CAACG,MAFC;AAGXC,kBAAAA,KAAK,EAAEJ,CAAC,CAACI,KAHE;AAIXG,kBAAAA,gBAAgB,EAAEP,CAAC,CAACO,gBAJT;AAKXF,kBAAAA,SAAS,EAAEL,CAAC,CAACO,gBALF;AAMXN,kBAAAA,OAAO,EAAED,CAAC,CAACC,OANA;AAOXK,kBAAAA,cAAc,EAAE,CAPL;AAQXI,kBAAAA,OAAO,EAAE;AARE,iBAAb;AAUD;AACF,aAbD;AAcD;;AACDd,UAAAA,MAAM,CAACqB,OAAP,GAAiBA,OAAjB;AACArB,UAAAA,MAAM,CAACE,OAAP,GAAiB,EAAjB;AACAF,UAAAA,MAAM,CAACuB,aAAP,GAAuB,IAAvB;AACAvB,UAAAA,MAAM,CAACe,UAAP,GAAoB,IAApB;;AACA,cAAIhB,OAAO,CAACyB,MAAZ,EAAoB;AAClBxB,YAAAA,MAAM,CAACmB,UAAP,GAAoB;AAAA;AAAA,kCAAOM,SAAP,CAAiB,CAAjB,EAAoBC,KAAxC;AACD;;AACD,iBAAO,EACL,GAAG1B;AADE,WAAP;AAGD,SAjFkD;AAkFnD,SAAC;AAAA;AAAA,wCAAY2B,cAAb,GAA8B,CAAC7B,KAAD,EAAQC,OAAR,KAA8E;AAC1G,gBAAMC,MAAM,GAAGV,WAAW,CAACQ,KAAD,CAA1B;;AACA,gBAAMG,cAAc,GAAGD,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,OAAO,CAACG,OAAR,CAAgBG,OAAvD,CAAvB;;AACAJ,UAAAA,cAAc,CAACQ,SAAf,IAA4BV,OAAO,CAACG,OAAR,CAAgBO,SAA5C;AACAR,UAAAA,cAAc,CAACU,gBAAf,IAAmCZ,OAAO,CAACG,OAAR,CAAgBO,SAAnD;AACAR,UAAAA,cAAc,CAACS,cAAf,IAAiCX,OAAO,CAACG,OAAR,CAAgBO,SAAjD;AAEAV,UAAAA,OAAO,CAACG,OAAR,CAAgBQ,cAAhB,GAAiCT,cAAc,CAACS,cAAhD;AACAX,UAAAA,OAAO,CAACG,OAAR,CAAgBS,gBAAhB,GAAmCV,cAAc,CAACU,gBAAlD;AAEAX,UAAAA,MAAM,CAACuB,aAAP,GAAuBxB,OAAO,CAACG,OAA/B;AACA,iBAAO,EACL,GAAGF;AADE,WAAP;AAGD;AAhGkD,OAAtC;AAAA;AAAA,iC","sourcesContent":["import { instantiate, log } from \"cc\";\r\nimport { ActionTypes, ActionPayLoad, InitStateType, initState } from \"../actions/bet\";\r\nimport { default as reduxAct } from 'redux-act'\r\nimport { BetData } from \"../../type\";\r\nimport config from \"../../config\";\r\n\r\nexport default reduxAct.createReducer<InitStateType>({\r\n  [ActionTypes.YXX_BET]: (state, payload: ActionPayLoad<ActionTypes.YXX_BET>): InitStateType => {\r\n    const _state = instantiate(state)\r\n\r\n    let currentBetData = _state.betData.find(v => v.betType === payload.betData.betType);\r\n    if (!currentBetData) {\r\n      currentBetData = {\r\n        index: payload.betData.index,\r\n        userId: payload.betData.userId,\r\n        betId: payload.betData.betId,\r\n        betAmount: payload.betData.betAmount,\r\n        betType: payload.betData.betType,\r\n        totalBetAmount: payload.betData.betAmount,\r\n        meTotalBetAmount: 0,\r\n        isFly: payload.betData.isFly,\r\n      }\r\n      _state.betData.push(currentBetData);\r\n    } else {\r\n      currentBetData.totalBetAmount += payload.betData.betAmount;\r\n    }\r\n    if (payload.betData.totalBetAmount > 0) {\r\n      currentBetData.totalBetAmount = payload.betData.totalBetAmount;\r\n    }\r\n    if (payload.betData.isMyBet) {\r\n      currentBetData.meTotalBetAmount += payload.betData.betAmount;\r\n    }\r\n\r\n    _state.newBetData = {\r\n      ...payload.betData,\r\n      totalBetAmount: currentBetData.totalBetAmount,\r\n      meTotalBetAmount: currentBetData.meTotalBetAmount\r\n    };\r\n\r\n    // console.log(\"_state.newBetData --- \", _state.betData);\r\n    return {\r\n      ..._state,\r\n    }\r\n  },\r\n  [ActionTypes.YXX_INIT_BET]: (state, payload: ActionPayLoad<ActionTypes.YXX_INIT_BET>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      betData: payload.betDatas\r\n    }\r\n  },\r\n  [ActionTypes.YXX_SELECT_CHIP]: (state, payload: ActionPayLoad<ActionTypes.YXX_SELECT_CHIP>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      selectChip: payload.selectChip\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CLEAR_BET]: (state, payload: ActionPayLoad<ActionTypes.YXX_CLEAR_BET>): InitStateType => {\r\n    const _state = instantiate(state)\r\n\r\n    const lastBet: BetData[] = [];\r\n    if (state.betData) {\r\n      // 记录上一局下注\r\n      state.betData.forEach(v => {\r\n        if (v.meTotalBetAmount > 0) {\r\n          lastBet.push({\r\n            index: v.index,\r\n            userId: v.userId,\r\n            betId: v.betId,\r\n            meTotalBetAmount: v.meTotalBetAmount,\r\n            betAmount: v.meTotalBetAmount,\r\n            betType: v.betType,\r\n            totalBetAmount: 0,\r\n            isMyBet: true,\r\n          })\r\n        }\r\n      })\r\n    }\r\n    _state.lastBet = lastBet;\r\n    _state.betData = [];\r\n    _state.cancelBetData = null;\r\n    _state.newBetData = null;\r\n    if (payload.isQuit) {\r\n      _state.selectChip = config.chipTypes[0].value;\r\n    }\r\n    return {\r\n      ..._state,\r\n    }\r\n  },\r\n  [ActionTypes.YXX_CANCEL_BET]: (state, payload: ActionPayLoad<ActionTypes.YXX_CANCEL_BET>): InitStateType => {\r\n    const _state = instantiate(state)\r\n    const currentBetData = _state.betData.find(v => v.betType === payload.betData.betType)\r\n    currentBetData.betAmount -= payload.betData.betAmount;\r\n    currentBetData.meTotalBetAmount -= payload.betData.betAmount;\r\n    currentBetData.totalBetAmount -= payload.betData.betAmount;\r\n\r\n    payload.betData.totalBetAmount = currentBetData.totalBetAmount;\r\n    payload.betData.meTotalBetAmount = currentBetData.meTotalBetAmount;\r\n\r\n    _state.cancelBetData = payload.betData;\r\n    return {\r\n      ..._state,\r\n    }\r\n  },\r\n}, initState);"]}