{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenix/Slot/Component/phoenix_BaseComponent.ts"],"names":["_decorator","Component","Facade","ProxyDefine","ccclass","property","phoenix_BaseComponent","root","facade","Instance","_nodes","_init","dealChilds","node","children","i","length","child","name","onLoad","bindUI","bindEvent","start","update","deltaTime","getRollProxy","retrieveProxy","SLOT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACbC,MAAAA,M;;AAECC,MAAAA,W,iBAAAA,W;;;;;;;;;OAEF;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,O,GAAsBL,U;;yBAGEM,qB,WAD7BF,OAAO,CAAC,uBAAD,C,gBAAR,MAC8BE,qBAD9B,SAC4DL,SAD5D,CACsE;AAAA;AAAA;AAAA,eAC3DM,IAD2D;AAAA,eAExDC,MAFwD,GAE/C;AAAA;AAAA,gCAAOC,QAFwC;;AAOlE;AAPkE,eAQxDC,MARwD,GAQ3C,EAR2C;AAAA;AAIlE;;;AAQUC,QAAAA,KAAK,GAAS;AACpB,cAAIC,UAAU,GAAIC,IAAD,IAAgB;AAC7B,gBAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;AACtC,kBAAIE,KAAK,GAAGH,QAAQ,CAACC,CAAD,CAApB;AACA,mBAAKL,MAAL,CAAYO,KAAK,CAACC,IAAlB,IAA0BD,KAA1B;AACAL,cAAAA,UAAU,CAACK,KAAD,CAAV;AACH;AACJ,WAPD;;AAQAL,UAAAA,UAAU,CAAC,KAAKC,IAAN,CAAV;AACH;;AAEDM,QAAAA,MAAM,GAAG;AACL,eAAKZ,IAAL,GAAY,KAAKM,IAAjB;;AACA,eAAKF,KAAL;;AACA,eAAKS,MAAL;AACA,eAAKC,SAAL;AACH;;AAEDC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEMC,QAAAA,YAAY,GAAG;AAClB,iBAAkB,KAAKjB,MAAL,CAAYkB,aAAZ,CAA0B;AAAA;AAAA,0CAAYC,IAAtC,CAAlB;AACH;;AAzCiE,O","sourcesContent":["import {_decorator, Component, Node} from 'cc';\r\nimport Facade from \"../../Framework/care/Facade\";\r\nimport {SlotProxy} from '../Proxy/SlotProxy';\r\nimport {ProxyDefine} from '../Const/ProxyDefine';\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass('phoenix_BaseComponent')\r\nexport default abstract class phoenix_BaseComponent extends Component {\r\n    public root: Node;\r\n    protected facade = Facade.Instance\r\n\r\n    /**只做页面的初始化 */\r\n    protected abstract bindUI(): void\r\n\r\n    /**完成效果级别的事件绑定，只完成效果，不处理数据 */\r\n    protected _nodes: {} = {};\r\n\r\n    protected abstract bindEvent(): void\r\n\r\n    protected _init(): void {\r\n        let dealChilds = (node: Node) => {\r\n            let children = node.children;\r\n            for (let i = 0; i < children.length; ++i) {\r\n                let child = children[i];\r\n                this._nodes[child.name] = child;\r\n                dealChilds(child);\r\n            }\r\n        }\r\n        dealChilds(this.node);\r\n    }\r\n\r\n    onLoad() {\r\n        this.root = this.node;\r\n        this._init()\r\n        this.bindUI()\r\n        this.bindEvent()\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    public getRollProxy() {\r\n        return <SlotProxy>this.facade.retrieveProxy(ProxyDefine.SLOT);\r\n    }\r\n}\r\n\r\n"]}