{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/viewModel/BandarBetAreaViewModel.ts"],"names":["_decorator","ViewModel","StoreInject","getStore","ccclass","property","BetAreaViewModel","constructor","begin","connect","storeState","store","getState","inject","winArea","pokerDetail","state","gameStatus","game","gold","selectChip","bet","myInfo","newBetData","goldData","cardRate","allWinUsers","lastBet","tips","memberBet","cancelBetData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAGFC,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAEXC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAGxBM,MAAAA,gB,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,gBADN;AAAA;AAAA,kCACyE;AAGrEC,QAAAA,WAAW,GAAG;AACV,gBAAM,gBAAN;AACD;;AAESC,QAAAA,KAAK,GAAG,CAEjB;;AAGMC,QAAAA,OAAO,GAAG;AACf,gBAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,QAAX,EAAnB;AACA,eAAKC,MAAL,CAAY;AACVC,YAAAA,OAAO,EAACJ,UAAU,CAACK,WAAX,CAAuBD;AADrB,WAAZ,EAEIE,KAAD,IAAsB;AACvB,mBAAO;AACLC,cAAAA,UAAU,EAACD,KAAK,CAACE,IAAN,CAAWD,UADjB;AAELE,cAAAA,IAAI,EAACH,KAAK,CAACE,IAAN,CAAWC,IAFX;;AAGL;AACAC,cAAAA,UAAU,EAAEJ,KAAK,CAACK,GAAN,CAAUD,UAJjB;AAKLE,cAAAA,MAAM,EAACN,KAAK,CAACE,IAAN,CAAWI,MALb;AAMLC,cAAAA,UAAU,EAACP,KAAK,CAACK,GAAN,CAAUE,UANhB;AAOLT,cAAAA,OAAO,EAACE,KAAK,CAACD,WAAN,CAAkBD,OAPrB;AAQLU,cAAAA,QAAQ,EAACR,KAAK,CAACK,GAAN,CAAUG,QARd;AASLC,cAAAA,QAAQ,EAACT,KAAK,CAACK,GAAN,CAAUI,QATd;AAULC,cAAAA,WAAW,EAACV,KAAK,CAACK,GAAN,CAAUK,WAVjB;AAWLC,cAAAA,OAAO,EAAEX,KAAK,CAACK,GAAN,CAAUM,OAXd;AAYLC,cAAAA,IAAI,EAAEZ,KAAK,CAACE,IAAN,CAAWU,IAZZ;AAaLC,cAAAA,SAAS,EAAEb,KAAK,CAACK,GAAN,CAAUQ,SAbhB;AAcLC,cAAAA,aAAa,EAACd,KAAK,CAACK,GAAN,CAAUS;AAdnB,aAAP;AAgBD,WAnBD;AAoBA,iBAAO,IAAP;AACD;AAEA;AACP;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAvDuE,O;;yBA2D1DxB,gB","sourcesContent":["import { _decorator, assetManager,AssetManager, Component, instantiate, Node } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { Bandar_betArea, IProps, IEvent } from \"../components/Bandar_betArea\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from '../store';\r\nimport { gameCacheData, MemberData, MemberInfoVo } from '../type';\r\nimport config from '../config';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@StoreInject(getStore())\r\nclass BetAreaViewModel extends ViewModel<Bandar_betArea, IProps, IEvent> {\r\n\r\n\r\n    constructor() {\r\n        super('Bandar_betArea')     \r\n      }\r\n    \r\n      protected begin() { \r\n      \r\n      }\r\n    \r\n      \r\n      public connect() {\r\n        const storeState = this.store.getState() as StateType;\r\n        this.inject({\r\n          winArea:storeState.pokerDetail.winArea,\r\n        }, (state: StateType) => {\r\n          return {\r\n            gameStatus:state.game.gameStatus,\r\n            gold:state.game.gold,\r\n            /**选择的筹码 */\r\n            selectChip: state.bet.selectChip,\r\n            myInfo:state.game.myInfo,\r\n            newBetData:state.bet.newBetData,\r\n            winArea:state.pokerDetail.winArea,\r\n            goldData:state.bet.goldData,\r\n            cardRate:state.bet.cardRate,\r\n            allWinUsers:state.bet.allWinUsers,\r\n            lastBet: state.bet.lastBet,\r\n            tips: state.game.tips,\r\n            memberBet: state.bet.memberBet,\r\n            cancelBetData:state.bet.cancelBetData,\r\n          }\r\n        })\r\n        return this\r\n      }\r\n\r\n       /**\r\n   * 初始化下注\r\n   * @param memberBetDetail \r\n   * @param seats \r\n   */\r\n  // public initBetData(memberBetDetail: MemberData[], seats: MemberInfoVo[]): void {\r\n  //   if (!memberBetDetail) return;\r\n  //   memberBetDetail.forEach(v => {\r\n  //     const seat = seats.find(seat => seat.memberId === v.memberId);\r\n  //     const index = seat ? seat.index : config.gameOption.lookOnIndex;\r\n  //     const betData = convertBetData(v, index);\r\n  //     betData.isMyBet = gameCacheData.memberId === betData.userId;\r\n  //     betData.isFly = false;\r\n\r\n  //     this.dispatch(seatBet(betData));\r\n  //     this.dispatch(changeSeatBet(betData));\r\n  //   });\r\n\r\n  // }\r\n\r\n}\r\n\r\nexport default BetAreaViewModel\r\n\r\n"]}