{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/qiuqiu/viewModel/OpponentViewModel.ts"],"names":["ViewModel","StoreInject","getStore","CardType","OpponentViewModel","constructor","seatIndex","begin","connect","inject","state","player","deskData","playerMap","deskStatus","uid","nickName","gold","glodAmount","icon","head","isDealer","gameData","isMaster","isReady","winloss","opType","operationCountdown","currActiveSeatIndex","dealCardCount","results","cards","balanceInfo","cardType","DISERSE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAEXC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,Q,iBAAAA,Q;;;;;;;AAGHC,MAAAA,iB,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,iBADN;AAAA;AAAA,kCAC2E;AAEzEC,QAAAA,WAAW,CAACC,SAAD,EAAoB;AAC7B,gBAAM,iBAAN;AAD6B,eADvBA,SACuB,GADX,CACW;AAE7B,eAAKA,SAAL,GAAiBA,SAAjB;AACD;;AAESC,QAAAA,KAAK,GAAG,CACjB;;AAEMC,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,kBAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeC,SAAf,CAAyB,KAAKP,SAA9B,CAAf;AACA,mBAAO;AACLQ,cAAAA,UAAU,EAAEJ,KAAK,CAACE,QAAN,CAAeE,UADtB;AAELC,cAAAA,GAAG,EAAEJ,MAAM,GAAGA,MAAM,CAACI,GAAV,GAAgB,EAFtB;AAGLC,cAAAA,QAAQ,EAAEL,MAAM,GAAGA,MAAM,CAACK,QAAV,GAAqB,EAHhC;AAILC,cAAAA,IAAI,EAAEN,MAAM,GAAGA,MAAM,CAACO,UAAV,GAAuB,CAJ9B;AAKLC,cAAAA,IAAI,EAAER,MAAM,GAAGA,MAAM,CAACS,IAAV,GAAiB,CAAC,CALzB;AAMLC,cAAAA,QAAQ,EAAEV,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBC,QAAnB,GAA8B,KANzC;AAOLC,cAAAA,OAAO,EAAEb,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBE,OAAnB,GAA6B,KAPvC;AAQLC,cAAAA,OAAO,EAAEd,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBG,OAAnB,GAA6B,CARvC;AASLC,cAAAA,MAAM,EAAEf,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBI,MAAnB,GAA4B,IATrC;AAULC,cAAAA,kBAAkB,EAAEjB,KAAK,CAACE,QAAN,CAAee,kBAV9B;AAWLC,cAAAA,mBAAmB,EAAElB,KAAK,CAACE,QAAN,CAAegB,mBAX/B;AAYLtB,cAAAA,SAAS,EAAE,KAAKA,SAZX;AAaLuB,cAAAA,aAAa,EAAElB,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBO,aAAnB,GAAmC,CAbnD;AAcLC,cAAAA,OAAO,EAAEnB,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBS,KAAnB,GAA2B,EAdrC;AAeLC,cAAAA,WAAW,EAAEtB,KAAK,CAACE,QAAN,CAAeoB,WAfvB;AAgBLC,cAAAA,QAAQ,EAAEtB,MAAM,GAAGA,MAAM,CAACW,QAAP,CAAgBW,QAAnB,GAA8B;AAAA;AAAA,wCAASC;AAhBlD,aAAP;AAkBD,WApBD;AAqBA,iBAAO,IAAP;AACD;;AAjCwE,O;;yBAoC5D9B,iB","sourcesContent":["import ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { IEvent, IProps, Qiuqiu_Opponent } from \"../components/Qiuqiu_Opponent\"\r\nimport { getStore } from \"../store\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { CardType } from \"../type\";\r\n\r\n@StoreInject(getStore())\r\nclass OpponentViewModel extends ViewModel<Qiuqiu_Opponent, IProps, IEvent> {\r\n  private seatIndex = 0;\r\n  constructor(seatIndex: number) {\r\n    super('Qiuqiu_Opponent')\r\n    this.seatIndex = seatIndex;\r\n  }\r\n\r\n  protected begin() {\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      const player = state.deskData.playerMap[this.seatIndex];\r\n      return {\r\n        deskStatus: state.deskData.deskStatus,\r\n        uid: player ? player.uid : '',\r\n        nickName: player ? player.nickName : '',\r\n        gold: player ? player.glodAmount : 0,\r\n        icon: player ? player.head : -1,\r\n        isDealer: player ? player.gameData.isMaster : false,\r\n        isReady: player ? player.gameData.isReady : false,\r\n        winloss: player ? player.gameData.winloss : 0,\r\n        opType: player ? player.gameData.opType : null,\r\n        operationCountdown: state.deskData.operationCountdown,\r\n        currActiveSeatIndex: state.deskData.currActiveSeatIndex,\r\n        seatIndex: this.seatIndex,\r\n        dealCardCount: player ? player.gameData.dealCardCount : 0,\r\n        results: player ? player.gameData.cards : [],\r\n        balanceInfo: state.deskData.balanceInfo,\r\n        cardType: player ? player.gameData.cardType : CardType.DISERSE,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default OpponentViewModel"]}