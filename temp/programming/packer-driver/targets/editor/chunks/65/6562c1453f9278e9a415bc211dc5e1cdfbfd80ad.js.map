{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dfdc/viewModel/RollerPanelViewModel.ts"],"names":["ViewModel","StoreInject","getStore","AutoLauncherType","GameType","IconEffectType","config","setStopRollAction","initRollAction","setIconEffect","setRollRoundEnd","setRollSpeed","setIconFreeGameEffect","SKT_MAG_TYPE","sktMsgListener","dataTransfer","refreshData","DataKeyType","TaskScheduler","Task","PrefabPathDefine","footerViewModel","blessedWealthy_Audio","gameBoardViewModel","sourceManageSeletor","playShellEnd","getCoin","EffectType","changeProfit","setFreeGameRate","setWaiting","updateBalance","updateSubGameTimes","BaseViewModel","addToastAction","RollerPanelViewModel","constructor","lastGameType","gameType","viewGameType","rollerMap","taskScheduler","autoLaunchType","isWining","freeGameRate","stopRollerIndex","begin","dispatch","forEach","queue","queueIndex","gameOption","normalRollOption","push","index","iconQueue","map","iconId","uiData","find","i","id","iconEffect","NONE","height","singleRollerHeight","width","singleRollerWidth","intervalHeight","singleIntervalHeight","rolling","speed","rollerSpeed","speedBackUp","rollerWidth","intervalWidth","rollerIntervalWidth","stopIconIndex","direction","setEvent","panelRollEnd","rollerIndex","allRollStop","longStop","MAIN","PROFIT_AMOUNT","FREE_GAME_AMOUNT","BALANCE","SUBGAME_TIMES","flicherArr","ICON_EFFECT_DATA","console","log","freeGameArr","FREE_GAME_POSITION","allFlicherTask","done","length","arrItemArr","arrItem","NORMAIL","window","setTimeout","subscribeDone","freeGameTask","FreeGameItemArr","FREEEGAMEZ","joinqQueue","showAwardTask","checkAward","GAME_TYPE","comp","props","stopMode","task","changeGameTypeTask","isExecute","SUBGAME1","chooseSmall","createSgChooseSmallGame","LAMIT_FAST","_taskScheduler","add","LAUNCHER_BET","data","error","content","rollerItem","stopQueue","stopIndex","ROLLER_STOP_INDEX_ID","isSortStop","t","setInterval","clearInterval","autoLauncherPanel","setLaunchEvent","manualBetHandler","profitMultiple","PROFIT_MULTIPLE","winning","item","minRate","maxRate","winnerDialog","mountView","getFile","DIALOG_WIN","source","appendTo","parentNode","effectType","EFFECT1","isModal","setProps","glodAmount","killSelfHandler","unMount","unMountCallBack","destoryQueue","rollerViewModelMap","mv","removeById","connect","inject","state","game","autoLauncherType","roller","iconEffectData","jackpotAmount","iconYuanBaoEffectData","iconFreeGameEffectData"],"mappings":"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","sourcesContent":["import { Label, Node } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { BlessedWealthy_rollerPanel, IProps, IEvent } from \"../components/BlessedWealthy_rollerPanel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from \"../store\"\r\nimport { AutoLauncherType, DialogType, DirectionType, GameType, IconEffectType, RollerType, SMALLGAME } from \"../type\"\r\nimport config from \"../config\"\r\nimport { beginRollAction, setStopRollAction, initRollAction, endRollingAction, setIconEffect, setRollRoundEnd, setRollSpeed, setIconYuanBaoEffect, setIconFreeGameEffect } from \"../store/actions/roller\"\r\nimport { SKT_MAG_TYPE, sktMsgListener } from \"../socketConnect\"\r\nimport dataTransfer, { refreshData, DataKeyType, setData } from \"../dataTransfer\"\r\nimport TaskScheduler, { Task, TaskSchedulerDefault } from \"../../../utils/TaskScheduler\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { footerViewModel, blessedWealthy_Audio, gameBoardViewModel, sourceManageSeletor, playShellEnd, getCoin } from \"../index\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { changeGame, changeProfit, setFreeGameId, setFreeGameRate, setSubGameTimes, setWaiting, updateBalance, updateJackpotAmount, updateSubGameTimes } from \"../store/actions/game\"\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\"\r\nimport { BlessedWealthy_dialogWin, IState as BPIState, IProps as BPIProps, IEvent as BPIEvent } from \"../components/BlessedWealthy_dialogWin\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\n// import SgChooseViewModel from \"./SgChooseViewModel\"\r\nimport { ChooseSmallGame } from \"./GameBoardViewModel\"\r\n\r\n\r\n// export let chooseSmallGame:SgChooseViewModel\r\n@StoreInject(getStore())\r\nclass RollerPanelViewModel extends ViewModel<BlessedWealthy_rollerPanel, IProps, IEvent> {\r\n  constructor() {\r\n    super('BlessedWealthy_rollerPanel')\r\n  }\r\n  private lastGameType: GameType\r\n  private gameType: GameType\r\n  private viewGameType: GameType\r\n  public rollerMap: RollerType[] = []\r\n  public taskScheduler: TaskScheduler = new TaskScheduler()\r\n  private autoLaunchType: AutoLauncherType;\r\n  private isWining: boolean;\r\n  private freeGameRate: number;\r\n  // private winnerDialog: BaseViewModel<Fruit777_BigPrize, BPIState, BPIProps, BPIEvent>\r\n\r\n  private stopRollerIndex: number = -1\r\n  protected begin() {\r\n    // const rollerMap: RollerType[] = []\r\n    this.dispatch(setRollRoundEnd(true))\r\n    // console.log(\"this.gameType === GameType.MAIN \",this.gameType === GameType.MAIN );\r\n    \r\n    config[ 'iconRollerQueue'].forEach((queue, queueIndex) => {\r\n      // const isLargeRollGame: boolean = (this.gameType === GameType.SUBGAME1 && queueIndex === 1)\r\n      const gameOption = config.normalRollOption\r\n      this.rollerMap.push({\r\n        index: queueIndex,\r\n        iconQueue: queue.map((iconId, index) => {\r\n          const uiData = config['rollerIcon'].find(i => i.id === iconId)\r\n          return {\r\n            iconId,\r\n            queueIndex: index + 1,\r\n            iconEffect: IconEffectType.NONE,\r\n            height: gameOption.singleRollerHeight,\r\n            width: gameOption.singleRollerWidth,\r\n            intervalHeight: gameOption.singleIntervalHeight,\r\n            // LargeIcon: (this.gameType === GameType.SUBGAME1 && queueIndex == 1),\r\n            uiData\r\n          }\r\n        }),\r\n        // LargeRoller: isLargeRollGame,\r\n        rolling: false,\r\n        speed: gameOption.rollerSpeed,\r\n        speedBackUp: gameOption.rollerSpeed,\r\n        width: gameOption.rollerWidth,\r\n        intervalWidth: gameOption.rollerIntervalWidth,\r\n        stopIconIndex: -1,\r\n        direction: gameOption.direction\r\n      })\r\n    })\r\n    // if (this.viewGameType === GameType.SUBGAME2) {\r\n    //   //马上执行的游戏类型是小游戏2\r\n    //   this.dispatch(setSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    //   this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))\r\n    // }\r\n    this.setEvent({\r\n      panelRollEnd: (rollerIndex) => {\r\n        // console.log('rollerIndex', rollerIndex)\r\n        this.stopRollerIndex = rollerIndex\r\n      },\r\n      /**滚动结束时执行 */\r\n      allRollStop: () => {\r\n        // console.log(\"allRollStop\",GameType.MAIN)\r\n        blessedWealthy_Audio.longStop()\r\n        playShellEnd()\r\n        if (this.viewGameType === GameType.MAIN) {\r\n          this.dispatch(changeProfit(dataTransfer(DataKeyType.PROFIT_AMOUNT)))//更新盈利\r\n        } else {//小游戏\r\n          this.dispatch(changeProfit(dataTransfer(DataKeyType.FREE_GAME_AMOUNT)))//更新盈亏\r\n        }\r\n        // console.log(this.lastGameType, this.gameType)\r\n        this.dispatch(updateBalance(dataTransfer(DataKeyType.BALANCE)))//更新用户金币值\r\n        this.dispatch(updateSubGameTimes(dataTransfer(DataKeyType.SUBGAME_TIMES)))//小游戏剩余次数\r\n        const flicherArr: number[][][] = dataTransfer(DataKeyType.ICON_EFFECT_DATA);//获取闪动数据\r\n        console.log(\"flicherArr\",flicherArr);\r\n        \r\n        // const flicherYuanBaoArr: number[][][] = dataTransfer(DataKeyType.ICON_YUANBAO_EFFECT_DATA).yuanBaoPosition;//获取元宝闪动数据\r\n        const freeGameArr: number[][][] = dataTransfer(DataKeyType.FREE_GAME_POSITION);//小游戏转轴位置\r\n        // flicherArr.length && fruit777_Audio.playOneShot(SoundPathDefine.FRUIT_SHELL)\r\n        const allFlicherTask = new Task((done) => {\r\n          if (flicherArr.length >= 1) {\r\n            let arrItemArr = [];\r\n            flicherArr.forEach((arrItem, index) => arrItemArr.push(...arrItem));\r\n            // console.log('---arrItemArr', arrItemArr)\r\n            // this.freeGameRate = dataTransfer(DataKeyType.ICON_YUANBAO_EFFECT_DATA).phoenixMagnification;\r\n            this.dispatch(setIconEffect(IconEffectType.NORMAIL, arrItemArr));\r\n            this.dispatch(setFreeGameRate(this.freeGameRate));\r\n            if (!arrItemArr.length) {\r\n              done()\r\n            } else {\r\n              //闪烁2秒钟就结束\r\n              window.setTimeout(() => done(), 2000)\r\n            }\r\n          } else {\r\n            done()\r\n          }\r\n        }).subscribeDone(`total`, () => {\r\n          this.dispatch(setIconEffect(IconEffectType.NONE, []));\r\n        })\r\n        const freeGameTask = new Task((done) => {\r\n          if (freeGameArr.length > 0) {\r\n            let FreeGameItemArr = [];\r\n            freeGameArr.forEach((arrItem, index) => FreeGameItemArr.push(...arrItem));\r\n            // console.log(\"---arrYuanBaoItemArr\",arrYuanBaoItemArr);\r\n            this.dispatch(setIconFreeGameEffect(IconEffectType.FREEEGAMEZ, FreeGameItemArr));\r\n            if (!FreeGameItemArr.length) {\r\n              done()\r\n            } else {\r\n              //闪烁2秒钟就结束\r\n              window.setTimeout(() => done(), 2000)\r\n            }\r\n          } else {\r\n            done()\r\n          }\r\n        }).subscribeDone(\"total\", () => {\r\n          this.dispatch(setIconFreeGameEffect(IconEffectType.NONE, []));     \r\n        })\r\n        this.taskScheduler.joinqQueue(allFlicherTask)\r\n        this.taskScheduler.joinqQueue(freeGameTask)\r\n\r\n        const showAwardTask = new Task((done) => {\r\n          //图标效果执行完之后要执行的任务，检查是否有爆奖 弹jackpot框\r\n          this.checkAward(done)\r\n        }).subscribeDone(\"total\", () => { \r\n          // if (this.isWining) {//是否爆浆\r\n          this.dispatch(setRollRoundEnd(true))//是否爆浆完，控制下注按钮;\r\n          //   this.isWining = !this.isWining;\r\n          //  }\r\n        })\r\n        this.taskScheduler.joinqQueue(showAwardTask, false)\r\n        //游戏不跳转，才显示每一条线，并且没有自动,11/6日：如果处于加速模式，也不显示每一个闪动了\r\n        if (dataTransfer(DataKeyType.GAME_TYPE) === this.viewGameType && this.autoLaunchType === AutoLauncherType.NONE && this.comp.props.stopMode === 'jump') {\r\n          //将闪动加入任务调度器队列\r\n          flicherArr.forEach((arrItem, index) => {\r\n            const task = new Task((done) => {\r\n              this.dispatch(setIconEffect(IconEffectType.NORMAIL, arrItem))\r\n              //闪烁2秒钟就结束\r\n              window.setTimeout(() => done(), 1500)\r\n            }).subscribeDone(`${index}`, () => {\r\n              this.dispatch(setIconEffect(IconEffectType.NONE, []))\r\n            })\r\n            this.taskScheduler.joinqQueue(task, false)\r\n          })\r\n        }\r\n\r\n        if (gameBoardViewModel.changeGameTypeTask && !gameBoardViewModel.changeGameTypeTask.isExecute) {\r\n          this.gameType=dataTransfer(DataKeyType.GAME_TYPE)\r\n          //  console.log(\"111111111111 this.gameType\",this.gameType,this.viewGameType );\r\n          //切换游戏\r\n          if (this.gameType === GameType.SUBGAME1) {\r\n            // this.dispatch(changeGame(GameType.MAIN))\r\n            this.taskScheduler.joinqQueue(new Task((done) => {\r\n              console.log(\"2222\");\r\n              // gameBoardViewModel.currentGameViewModel.unMount((EffectType.EFFECT1))\r\n              let chooseSmall:ChooseSmallGame = {\r\n                done,\r\n                // gameType:this.gameType\r\n              }\r\n              // playChooseCardIn()\r\n                gameBoardViewModel.createSgChooseSmallGame(chooseSmall)\r\n              }))\r\n            }\r\n            //禁用掉主下注按钮\r\n            this.dispatch(setRollRoundEnd(false))\r\n            this.taskScheduler.joinqQueue(gameBoardViewModel.changeGameTypeTask)\r\n        } else {\r\n          //不切换游戏\r\n          this.taskScheduler.joinqQueue(new Task((done) => {\r\n            this.dispatch(setWaiting(true))\r\n            done()\r\n          }))\r\n        }\r\n      }\r\n\r\n    })\r\n    // this.setProps({ rollerMap })\r\n    this.dispatch(initRollAction(this.rollerMap))//更新每个滑槽图标信息配置\r\n\r\n    if (this.autoLaunchType === AutoLauncherType.LAMIT_FAST) {\r\n      this.dispatch(setRollSpeed(1.5))\r\n    }\r\n    const _taskScheduler = new TaskScheduler()\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET, \"roller\", (data, error) => {\r\n      if (error) {\r\n        this.dispatch(addToastAction({ content: error }))\r\n        this.rollerMap.forEach((rollerItem, index) => {\r\n          this.dispatch(setStopRollAction(index, 1))\r\n        })\r\n      } else {\r\n        console.log(\"refreshData(data)\",data);\r\n        refreshData(data)\r\n        // setData(\"gameType\", data.dl.si[0].gameType)\r\n        this.taskScheduler.stopQueue(false)\r\n        this.dispatch(setIconEffect(IconEffectType.NONE, []))\r\n        const stopIndex: number[] = dataTransfer(DataKeyType.ROLLER_STOP_INDEX_ID)\r\n        this.stopRollerIndex = -1\r\n        this.rollerMap.forEach((rollerItem, index) => {\r\n          //顺序停止，stopMode=index的时候不使用这种方案，因为一轮可能就会花不少时间，所以最好不用这种\r\n          if (this.comp.props.stopMode === 'jump' && this.comp.props.isSortStop) {\r\n            _taskScheduler.joinqQueue(new Task((done) => {\r\n              this.dispatch(setStopRollAction(index, stopIndex ? stopIndex[index] : 0))\r\n              if (index < 5) {\r\n                const t = window.setInterval(() => {\r\n                  if (this.stopRollerIndex === index) {\r\n                    window.clearInterval(t)\r\n                    done()\r\n                  }\r\n                }, 50)\r\n              } else {\r\n                done()\r\n              }\r\n            }))\r\n          } else {\r\n            this.dispatch(setStopRollAction(index, stopIndex ? stopIndex[index] : 0))\r\n          }\r\n        })\r\n      }\r\n    }, 0)\r\n\r\n    this.dispatch(changeProfit(dataTransfer(this.viewGameType === GameType.MAIN ? DataKeyType.PROFIT_AMOUNT : DataKeyType.FREE_GAME_AMOUNT)))\r\n    window.setTimeout(() => {\r\n      this.dispatch(setWaiting(true))//是否等待人工操作\r\n    }, 1500)\r\n    /**自动运行的函数 */\r\n    footerViewModel.autoLauncherPanel.setLaunchEvent(() => {\r\n      footerViewModel.manualBetHandler()\r\n    })\r\n  }\r\n  /**检查是否要爆奖，爆什么奖 */\r\n  private checkAward(done: Function) {\r\n    /**盈利值 */\r\n    const profitMultiple = dataTransfer(DataKeyType.PROFIT_MULTIPLE);\r\n    const winning = config.winning.find(item => item.minRate <= profitMultiple && profitMultiple <= item.maxRate)//判断使用哪个dialog\r\n    if (winning) {\r\n      \r\n      this.isWining = true;\r\n      const winnerDialog = new BaseViewModel<BlessedWealthy_dialogWin, BPIState, BPIProps, BPIEvent>('BlessedWealthy_dialogWin').mountView(sourceManageSeletor()\r\n        .getFile(PrefabPathDefine.DIALOG_WIN).source).appendTo(this.parentNode, { effectType: EffectType.EFFECT1, isModal: true })\r\n        .setProps({ winning, glodAmount: dataTransfer(this.viewGameType === GameType.MAIN ? DataKeyType.PROFIT_AMOUNT : DataKeyType.FREE_GAME_AMOUNT) })\r\n        .setEvent({\r\n          killSelfHandler: () => {\r\n            winnerDialog.unMount(EffectType.EFFECT1)\r\n            done()\r\n          }\r\n        })\r\n        getCoin()\r\n    } else {\r\n      done()\r\n    }\r\n  }\r\n\r\n\r\n  protected unMountCallBack(): void {\r\n    this.taskScheduler.destoryQueue()\r\n    this.comp.rollerViewModelMap.forEach(mv => mv.unMount())\r\n    // this.comp.rollerViewModelMap = []\r\n    this.dispatch(initRollAction([]))\r\n    sktMsgListener.removeById(\"roller\")\r\n    // this.winnerDialog && this.winnerDialog.unMount()\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      this.lastGameType = state.game.lastGameType\r\n      // this.gameType = state.game.currGameType\r\n      this.viewGameType = state.game.viewGameType\r\n      this.autoLaunchType = state.game.autoLauncherType\r\n      return {\r\n        rollerMap: state.roller.rollerMap,\r\n        iconEffectData: state.roller.iconEffectData,\r\n        jackpotAmount: state.game.jackpotAmount,\r\n        stopMode: state.game.stopMode,\r\n        isSortStop: state.game.isSortStop,\r\n        iconYuanBaoEffectData: state.roller.iconYuanBaoEffectData,\r\n        iconFreeGameEffectData: state.roller.iconFreeGameEffectData,\r\n        freeGameRate:state.game.freeGameRate,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RollerPanelViewModel"]}