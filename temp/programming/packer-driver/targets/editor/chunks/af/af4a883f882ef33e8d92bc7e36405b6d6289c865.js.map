{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fruit777/components/Fruit777_AuthLauncher.ts"],"names":["_decorator","Button","Node","Toggle","ToggleContainer","BaseComponent","EffectType","getEffectByType","changeAutoLauncherType","setShowAuthLaunch","AutoLauncherType","setRollSpeed","initToggle","ccclass","property","Fruit777_AuthLauncher","propertyNode","props_btn_down10","props_btn_down20","props_btn_down50","props_btn_down100","props_btn_down500","props_btn_downMax","props_btn_off","props_btn_auto","props_btn_confirm","props","isShowAutoLaunch","isWaiting","autoLauncherType","NONE","events","start","initState","thenAutoLaunchType","TIME_10","bindEvent","node","EventHandler","on","EventType","TOUCH_END","setType","state","dispatch","useProps","key","value","show","hide","console","log","cur","updateCheckType","LAMIT_FAST","active","EFFECT1","enter","then","out","changeToggleCallback","event","customEventData","target","getSiblingIndex","setState","TIME_20","TIME_50","TIME_100","TIME_500","LIMIT","getComponent","isChecked","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, Node, Toggle, ToggleContainer } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { EffectType, getEffectByType } from '../../../utils/NodeIOEffect';\r\nimport { changeAutoLauncherType, setShowAuthLaunch } from '../store/actions/game';\r\nimport { AutoLauncherType } from '../type';\r\nimport { setRollSpeed } from '../store/actions/roller';\r\nimport { initToggle } from '../../../utils/tool';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\tthenAutoLaunchType: AutoLauncherType\r\n}\r\n\r\nexport interface IProps {\r\n\tisShowAutoLaunch: boolean\r\n\tisWaiting: boolean\r\n\tautoLauncherType: AutoLauncherType\r\n}\r\nexport interface IEvent {\r\n\r\n}\r\n\r\n@ccclass('Fruit777_AuthLauncher')\r\nexport class Fruit777_AuthLauncher extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_down10: new Node(),\r\n\t\tprops_btn_down20: new Node(),\r\n\t\tprops_btn_down50: new Node(),\r\n\t\tprops_btn_down100: new Node(),\r\n\t\tprops_btn_down500: new Node(),\r\n\t\t// props_btn_downFast: new Node(),\r\n\t\tprops_btn_downMax: new Node(),\r\n\t\tprops_btn_off: new Button(),\r\n\t\tprops_btn_auto: new ToggleContainer(),\r\n\t\tprops_btn_confirm: new Button()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tisShowAutoLaunch: false,\r\n\t\tisWaiting: true,\r\n\t\tautoLauncherType: AutoLauncherType.NONE\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t\tthenAutoLaunchType: AutoLauncherType.TIME_10\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\t// this.propertyNode.props_btn_down10.on(Node.EventType.TOUCH_END, () => this.setType(AutoLauncherType.TIME_10))\r\n\t\t// this.propertyNode.props_btn_down20.on(Node.EventType.TOUCH_END, () => this.setType(AutoLauncherType.TIME_20))\r\n\t\t// this.propertyNode.props_btn_down50.on(Node.EventType.TOUCH_END, () => this.setType(AutoLauncherType.TIME_50))\r\n\t\t// this.propertyNode.props_btn_down100.on(Node.EventType.TOUCH_END, () => this.setType(AutoLauncherType.TIME_100))\r\n\t\t// this.propertyNode.props_btn_down500.on(Node.EventType.TOUCH_END, () => this.setType(AutoLauncherType.TIME_500))\r\n\t\t// this.propertyNode.props_btn_downMax.on(Node.EventType.TOUCH_END, () => this.setType(AutoLauncherType.LIMIT))\r\n\r\n\t\tinitToggle(this.propertyNode.props_btn_auto.node, this.node, new Fruit777_AuthLauncher.EventHandler(), \"Fruit777_AuthLauncher\", \"changeToggleCallback\");\r\n\r\n\t\tthis.propertyNode.props_btn_confirm.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.setType(this.state.thenAutoLaunchType)\r\n\t\t})\r\n\t\tthis.propertyNode.props_btn_off.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.dispatch(setShowAuthLaunch(false))\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === \"isWaiting\") {\r\n\t\t\t// console.log(\"isWaiting\", this.props.isWaiting)\r\n\t\t}\r\n\t\tif (key === \"isShowAutoLaunch\") {\r\n\t\t\tif (this.props.isShowAutoLaunch) {\r\n\t\t\t\tthis.show()\r\n\t\t\t} else {\r\n\t\t\t\tthis.hide()\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (key === \"autoLauncherType\") {\r\n\t\t\tconsole.log(value.cur)\r\n\t\t\tthis.updateCheckType()\r\n\t\t}\r\n\t}\r\n\tprivate setType(autoLauncherType: AutoLauncherType) {\r\n\t\tthis.dispatch(changeAutoLauncherType(autoLauncherType))\r\n\t\tthis.dispatch(setShowAuthLaunch(false))\r\n\t\tif (autoLauncherType === AutoLauncherType.LAMIT_FAST) {\r\n\t\t\tthis.dispatch(setRollSpeed(1.5))\r\n\t\t} else {\r\n\t\t\tthis.dispatch(setRollSpeed(1))\r\n\t\t}\r\n\t}\r\n\tprivate show() {\r\n\t\tthis.node.active = true\r\n\t\tgetEffectByType(EffectType.EFFECT1)(this.node).enter().then(() => { })\r\n\t}\r\n\tprivate hide() {\r\n\t\tgetEffectByType(EffectType.EFFECT1)(this.node).out(false).then(() => {\r\n\t\t\tthis.node.active = false\r\n\t\t})\r\n\t}\r\n\r\n\tprivate changeToggleCallback(event: Event, customEventData: string) {\r\n\t\tswitch ((event.target as any).getSiblingIndex()) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.setState({ \"thenAutoLaunchType\": AutoLauncherType.TIME_10 })\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.setState({ \"thenAutoLaunchType\": AutoLauncherType.TIME_20 })\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.setState({ \"thenAutoLaunchType\": AutoLauncherType.TIME_50 })\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.setState({ \"thenAutoLaunchType\": AutoLauncherType.TIME_100 })\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.setState({ \"thenAutoLaunchType\": AutoLauncherType.TIME_500 })\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tthis.setState({ \"thenAutoLaunchType\": AutoLauncherType.LIMIT })\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tupdateCheckType() {\r\n\t\tswitch (this.props.autoLauncherType) {\r\n\t\t\tcase AutoLauncherType.TIME_10:\r\n\t\t\t\tthis.propertyNode.props_btn_down10.getComponent(Toggle).isChecked = true\r\n\t\t\t\tbreak\r\n\t\t\tcase AutoLauncherType.TIME_20:\r\n\t\t\t\tthis.propertyNode.props_btn_down20.getComponent(Toggle).isChecked = true\r\n\t\t\t\tbreak\r\n\t\t\tcase AutoLauncherType.TIME_50:\r\n\t\t\t\tthis.propertyNode.props_btn_down50.getComponent(Toggle).isChecked = true\r\n\t\t\t\tbreak\r\n\t\t\tcase AutoLauncherType.TIME_100:\r\n\t\t\t\tthis.propertyNode.props_btn_down100.getComponent(Toggle).isChecked = true\r\n\t\t\t\tbreak\r\n\t\t\tcase AutoLauncherType.TIME_500:\r\n\t\t\t\tthis.propertyNode.props_btn_down500.getComponent(Toggle).isChecked = true\r\n\t\t\t\tbreak\r\n\t\t\tcase AutoLauncherType.LIMIT:\r\n\t\t\t\tthis.propertyNode.props_btn_downMax.getComponent(Toggle).isChecked = true\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.node.active = false\r\n\t\tthis.updateCheckType()\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}