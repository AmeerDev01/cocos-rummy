{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/viewModel/RollerIconViewModel.ts"],"names":["ViewModel","StoreInject","getStore","BaseViewModel","sourceManageSeletor","PrefabPathDefine","EffectType","rollerPanelViewModel","dataTransfer","DataKeyType","RollerIconViewModel","constructor","begin","setEvent","openTotalPanel","openTotal","yuanBaoRate","ICON_YUANBAO_EFFECT_DATA","yuanBaoMagnification","yuanBaoWinNum","yuanBaoAmount","yuanBaoTotalBet","mountView","getFile","PHOENIX_TOTAL_BET","source","appendTo","viewNode","effectType","EFFECT1","isModal","setProps","killSelfHandler","unMount","connect","inject","state","viewGameType","game","isRollEnd","roller","roundAllEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACOA,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAGXC,MAAAA,Q,iBAAAA,Q;;AACFC,MAAAA,a;;AACEC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,gB,iBAAAA,gB;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,oB,iBAAAA,oB;;AACFC,MAAAA,Y;AAAgBC,MAAAA,W,iBAAAA,W;;;;;;;;;AAIjBC,MAAAA,mB,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,mBADN;AAAA;AAAA,kCACgF;AAC9EC,QAAAA,WAAW,GAAG;AACZ,gBAAM,oBAAN;AACD;;AAESC,QAAAA,KAAK,GAAG;AAChB,eAAKC,QAAL,CAAc;AACZC,YAAAA,cAAc,EAAE,MAAI;AAClB,mBAAKC,SAAL;AACD;AAHW,WAAd;AAKD;;AAEMA,QAAAA,SAAS,GAAG;AACjB,cAAIC,WAAW,GAAG;AAAA;AAAA,4CAAa;AAAA;AAAA,0CAAYC,wBAAzB,EAAmDC,oBAArE;AACF,cAAIC,aAAa,GAAG;AAAA;AAAA,4CAAa;AAAA;AAAA,0CAAYF,wBAAzB,EAAmDG,aAAvE;AACE,gBAAMC,eAAe,GAAG;AAAA;AAAA,8CAA0E,0BAA1E,EAAsGC,SAAtG,CAAgH;AAAA;AAAA,4DACrIC,OADqI,CAC7H;AAAA;AAAA,oDAAiBC,iBAD4G,EACzFC,MADvB,EAC+BC,QAD/B,CACwC;AAAA;AAAA,4DAAqBC,QAD7D,EACuE;AAAEC,YAAAA,UAAU,EAAE;AAAA;AAAA,0CAAWC,OAAzB;AAAkCC,YAAAA,OAAO,EAAE;AAA3C,WADvE,EAErBC,QAFqB,CAEZ;AACRf,YAAAA,WAAW,EAAE,MAAMA,WADX;AAERG,YAAAA,aAAa,EAAEA,aAAa,GAAG;AAFvB,WAFY,EAKnBN,QALmB,CAKV;AACVmB,YAAAA,eAAe,EAAE,MAAM;AACrBX,cAAAA,eAAe,CAACY,OAAhB,CAAwB;AAAA;AAAA,4CAAWJ,OAAnC;AACD;AAHS,WALU,CAAxB;AAUD;;AAEMK,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AAEpC,mBAAO;AACLC,cAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD,YADpB;AAELE,cAAAA,SAAS,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAFnB,aAAP;AAKD,WAPD;AAQA,iBAAO,IAAP;AACD;;AAtC6E,O;;yBAyCjE/B,mB","sourcesContent":["import { Node } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { phoenix_rollerIcon, IProps, IEvent } from \"../components/phoenix_rollerIcon\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from \"../store\"\r\nimport BaseViewModel from \"../../../hall/viewModel/BaseViewModel\"\r\nimport { sourceManageSeletor } from \"../index\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { rollerPanelViewModel } from \"./GameBoardViewModel\"\r\nimport dataTransfer, { DataKeyType } from \"../dataTransfer\"\r\nimport { phoenix_yuanbao_totalBet,IEvent as BPIEvent,IProps as BPIProps,IState as BPIState } from \"../components/phoenix_yuanbao_totalBet\"\r\n\r\n@StoreInject(getStore())\r\nclass RollerIconViewModel extends ViewModel<phoenix_rollerIcon, IProps, IEvent> {\r\n  constructor() {\r\n    super('phoenix_rollerIcon')\r\n  }\r\n\r\n  protected begin() { \r\n    this.setEvent({\r\n      openTotalPanel: ()=>{\r\n        this.openTotal()\r\n      }\r\n    })\r\n  }\r\n\r\n  public openTotal() {\r\n    let yuanBaoRate = dataTransfer(DataKeyType.ICON_YUANBAO_EFFECT_DATA).yuanBaoMagnification;\r\n\t\tlet yuanBaoWinNum = dataTransfer(DataKeyType.ICON_YUANBAO_EFFECT_DATA).yuanBaoAmount;\r\n    const yuanBaoTotalBet = new BaseViewModel<phoenix_yuanbao_totalBet, BPIState, BPIProps, BPIEvent>(\"phoenix_yuanbao_totalBet\").mountView(sourceManageSeletor()\r\n      .getFile(PrefabPathDefine.PHOENIX_TOTAL_BET).source).appendTo(rollerPanelViewModel.viewNode, { effectType: EffectType.EFFECT1, isModal: false })\r\n      .setProps({\r\n        yuanBaoRate: \"X\" + yuanBaoRate,\r\n        yuanBaoWinNum: yuanBaoWinNum + \"\",\r\n      }).setEvent({\r\n        killSelfHandler: () => {\r\n          yuanBaoTotalBet.unMount(EffectType.EFFECT1);\r\n        }\r\n    })\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n\r\n      return {\r\n        viewGameType: state.game.viewGameType,\r\n        isRollEnd: state.roller.roundAllEnd,\r\n\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RollerIconViewModel"]}