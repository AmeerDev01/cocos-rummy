{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonTiger/store/reducer/pokerDetail.ts"],"names":["instantiate","ActionTypes","initState","reduxAct","default","createReducer","DRAGONTGER_POKER_INFO","state","payload","pokerInfo","DRAGONTGER_POKER_LEFT","pokerLeftNum","DRAGONTGER_POKER_RIGHT","pokerRightNum","DRAGONTGER_POKER_SENDEDP","sendedP","DRAGONTGER_POKER_READYSENDP","readySendP","DRAGONTGER_POKER_WIN","win","DRAGONTGER_TIPS","tips","DRAGONTGER_VIP","vip","DRAGONTGER_LEVEL","level","DRAGONTGER_POKER_RESET_STORE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;AAA2CC,MAAAA,S,iBAAAA,S;;AAChCC,MAAAA,Q,aAAXC,O;;;;;;;;;yBAEM;AAAA;AAAA,gCAASC,aAAT,CAAsC;AACnD,SAAC;AAAA;AAAA,wCAAYC,qBAAb,GAAqC,CAACC,KAAD,EAAQC,OAAR,MAAsF,EACzH,GAAGD,KADsH;AAGzHE,UAAAA,SAAS,EAAED,OAAO,CAACC;AAHsG,SAAtF,CADc;AAOnD,SAAC;AAAA;AAAA,wCAAYC,qBAAb,GAAqC,CAACH,KAAD,EAAQC,OAAR,MAAsF,EACzH,GAAGD,KADsH;AAGzHI,UAAAA,YAAY,EAAEH,OAAO,CAACG;AAHmG,SAAtF,CAPc;AAanD,SAAC;AAAA;AAAA,wCAAYC,sBAAb,GAAsC,CAACL,KAAD,EAAQC,OAAR,MAAuF,EAC3H,GAAGD,KADwH;AAG3HM,UAAAA,aAAa,EAAEL,OAAO,CAACK;AAHoG,SAAvF,CAba;AAmBnD,SAAC;AAAA;AAAA,wCAAYC,wBAAb,GAAwC,CAACP,KAAD,EAAQC,OAAR,MAAyF,EAC/H,GAAGD,KAD4H;AAG/HQ,UAAAA,OAAO,EAAEP,OAAO,CAACO;AAH8G,SAAzF,CAnBW;AAyBnD,SAAC;AAAA;AAAA,wCAAYC,2BAAb,GAA2C,CAACT,KAAD,EAAQC,OAAR,MAA4F,EACrI,GAAGD,KADkI;AAGrIU,UAAAA,UAAU,EAAET,OAAO,CAACS;AAHiH,SAA5F,CAzBQ;AA+BnD,SAAC;AAAA;AAAA,wCAAYC,oBAAb,GAAoC,CAACX,KAAD,EAAQC,OAAR,MAAqF,EACvH,GAAGD,KADoH;AAGvHY,UAAAA,GAAG,EAAEX,OAAO,CAACW;AAH0G,SAArF,CA/Be;AAsCnD,SAAC;AAAA;AAAA,wCAAYC,eAAb,GAA+B,CAACb,KAAD,EAAQC,OAAR,MAAgF,EAC7G,GAAGD,KAD0G;AAG7Gc,UAAAA,IAAI,EAAEb,OAAO,CAACa;AAH+F,SAAhF,CAtCoB;AA6CnD,SAAC;AAAA;AAAA,wCAAYC,cAAb,GAA8B,CAACf,KAAD,EAAQC,OAAR,MAA+E,EAC3G,GAAGD,KADwG;AAG3GgB,UAAAA,GAAG,EAAEf,OAAO,CAACe;AAH8F,SAA/E,CA7CqB;AAoDnD,SAAC;AAAA;AAAA,wCAAYC,gBAAb,GAAgC,CAACjB,KAAD,EAAQC,OAAR,MAAiF,EAC/G,GAAGD,KAD4G;AAG/GkB,UAAAA,KAAK,EAAEjB,OAAO,CAACiB;AAHgG,SAAjF,CApDmB;AA0DnD,SAAC;AAAA;AAAA,wCAAYC,4BAAb,GAA4C,CAACnB,KAAD,EAAQC,OAAR,KAA4F;AACtI,iBAAOR,WAAW;AAAA;AAAA,qCAAlB;AACD;AA5DkD,OAAtC;AAAA;AAAA,iC","sourcesContent":["import { instantiate } from \"cc\";\r\nimport { ActionTypes, ActionPayLoad, InitStateType, initState } from \"../actions/pokerDetail\";\r\nimport { default as reduxAct } from 'redux-act'\r\n\r\nexport default reduxAct.createReducer<InitStateType>({\r\n  [ActionTypes.DRAGONTGER_POKER_INFO]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_INFO>): InitStateType => ({\r\n    ...state,\r\n\r\n    pokerInfo: payload.pokerInfo,\r\n  }),\r\n\r\n  [ActionTypes.DRAGONTGER_POKER_LEFT]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_LEFT>): InitStateType => ({\r\n    ...state,\r\n\r\n    pokerLeftNum: payload.pokerLeftNum,\r\n \r\n  }),\r\n  [ActionTypes.DRAGONTGER_POKER_RIGHT]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_RIGHT>): InitStateType => ({\r\n    ...state,\r\n\r\n    pokerRightNum: payload.pokerRightNum,\r\n \r\n  }),\r\n  [ActionTypes.DRAGONTGER_POKER_SENDEDP]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_SENDEDP>): InitStateType => ({\r\n    ...state,\r\n\r\n    sendedP: payload.sendedP,\r\n \r\n  }),\r\n  [ActionTypes.DRAGONTGER_POKER_READYSENDP]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_READYSENDP>): InitStateType => ({\r\n    ...state,\r\n\r\n    readySendP: payload.readySendP,\r\n \r\n  }),\r\n  [ActionTypes.DRAGONTGER_POKER_WIN]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_WIN>): InitStateType => ({\r\n    ...state,\r\n\r\n    win: payload.win,\r\n \r\n  }),\r\n\r\n  [ActionTypes.DRAGONTGER_TIPS]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_TIPS>): InitStateType => ({\r\n    ...state,\r\n\r\n    tips: payload.tips,\r\n \r\n  }),\r\n\r\n  [ActionTypes.DRAGONTGER_VIP]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_VIP>): InitStateType => ({\r\n    ...state,\r\n\r\n    vip: payload.vip,\r\n \r\n  }),\r\n\r\n  [ActionTypes.DRAGONTGER_LEVEL]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_LEVEL>): InitStateType => ({\r\n    ...state,\r\n\r\n    level: payload.level,\r\n \r\n  }),\r\n  [ActionTypes.DRAGONTGER_POKER_RESET_STORE]: (state, payload: ActionPayLoad<ActionTypes.DRAGONTGER_POKER_RESET_STORE>): InitStateType => {\r\n    return instantiate(initState)\r\n  }\r\n}, initState);\r\n"]}