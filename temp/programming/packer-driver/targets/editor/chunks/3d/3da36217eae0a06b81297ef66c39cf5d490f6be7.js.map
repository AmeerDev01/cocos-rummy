{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/common/ModalBox.ts"],"names":["ModalBox","baseBoardView","sourceManageSeletor","EffectType","Singleton","PrefabPathDefine","BaseViewModel","constructor","isShow","contentStr","show","option","okHandler","cancleHandler","content","modalBox","mountView","getFile","MODAL_BOX","source","appendTo","viewNode","effectType","EFFECT1","setProps","type","url","setEvent","onCloseHandler","unMount","onCancleHandler","onOkHandler"],"mappings":";;;0HAcqBA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAdZC,MAAAA,a,iBAAAA,a;AAAeC,MAAAA,mB,iBAAAA,mB;;AAEfC,MAAAA,U,iBAAAA,U;;AACFC,MAAAA,S;;AAEgBC,MAAAA,gB,iBAAAA,gB;;AAChBC,MAAAA,a;;;;;;;yBAQcN,Q,GAAN,MAAMA,QAAN;AAAA;AAAA,kCAAiC;AAC9CO,QAAAA,WAAW,GAAG;AACZ;;AAEF;AAHc,eAIPC,MAJO,GAIW,KAJX;AAAA,eAKPC,UALO,GAKc,EALd;AAEb;;AAIMC,QAAAA,IAAI,CAACC,MAAD,EAAsBC,SAAwB,GAAG,MAAM,IAAvD,EAA6DC,aAA4B,GAAG,MAAM,IAAlG,EAAwG;AACjH,eAAKL,MAAL,GAAc,IAAd;AACA,eAAKC,UAAL,GAAkBE,MAAM,CAACG,OAAzB;AACA,gBAAMC,QAAQ,GAAG;AAAA;AAAA,8CAA2D,iBAA3D,EACdC,SADc,CACJ;AAAA;AAAA,0DAAoB,QAApB,EAA8BC,OAA9B,CAAsC;AAAA;AAAA,oDAAiBC,SAAvD,EAAkEC,MAD9D,EAEdC,QAFc,CAEL;AAAA;AAAA,8CAAcC,QAFT,EAEmB;AAAEC,YAAAA,UAAU,EAAE;AAAA;AAAA,0CAAWC;AAAzB,WAFnB,EAGdC,QAHc,CAGL;AACRV,YAAAA,OAAO,EAAEH,MAAM,CAACG,OADR;AAERW,YAAAA,IAAI,EAAEd,MAAM,CAACc,IAFL;AAGRC,YAAAA,GAAG,EAAEf,MAAM,CAACe;AAHJ,WAHK,EAQdC,QARc,CAQL;AACRC,YAAAA,cAAc,EAAE,MAAM;AACpB,mBAAKpB,MAAL,GAAc,KAAd;AACA,mBAAKC,UAAL,GAAkB,EAAlB;AACAM,cAAAA,QAAQ,CAACc,OAAT,CAAiB;AAAA;AAAA,4CAAWN,OAA5B;AACD,aALO;AAMRO,YAAAA,eAAe,EAAE,MAAM;AACrB,mBAAKtB,MAAL,GAAc,KAAd;AACA,mBAAKC,UAAL,GAAkB,EAAlB;AACA,qBAAOI,aAAa,EAApB;AACD,aAVO;AAWRkB,YAAAA,WAAW,EAAE,MAAM;AACjB,mBAAKvB,MAAL,GAAc,KAAd;AACA,mBAAKC,UAAL,GAAkB,EAAlB;AACA,qBAAOG,SAAS,EAAhB;AACD;AAfO,WARK,CAAjB;AAyBD;;AAnC6C,O","sourcesContent":["import { baseBoardView, sourceManageSeletor } from \"../hall\";\r\nimport { LanguageItemType } from \"../language/languagePkg\";\r\nimport { EffectType } from \"../utils/NodeIOEffect\";\r\nimport Singleton from \"../utils/Singleton\";\r\nimport { Common_ModalBox, IProps, IState, IEvent } from \"./components/Common_ModalBox\";\r\nimport prefabDefine, { PrefabPathDefine } from \"./sourceDefine/prefabDefine\";\r\nimport BaseViewModel from \"./viewModel/BaseViewModel\";\r\n\r\nexport type ModalOption = {\r\n  content?: string,\r\n  url?: string,\r\n  type?: \"Prompt\" | \"Confirm\"\r\n}\r\n\r\nexport default class ModalBox extends Singleton {\r\n  constructor() {\r\n    super()\r\n  }\r\n  /**模态框是否是打开状态 */\r\n  public isShow: boolean = false\r\n  public contentStr: string = ''\r\n  public show(option: ModalOption, okHandler: () => boolean = () => true, cancleHandler: () => boolean = () => true) {\r\n    this.isShow = true\r\n    this.contentStr = option.content\r\n    const modalBox = new BaseViewModel<Common_ModalBox, IState, IProps, IEvent>(\"Common_ModalBox\")\r\n      .mountView(sourceManageSeletor(\"common\").getFile(PrefabPathDefine.MODAL_BOX).source)\r\n      .appendTo(baseBoardView.viewNode, { effectType: EffectType.EFFECT1 })\r\n      .setProps({\r\n        content: option.content,\r\n        type: option.type,\r\n        url: option.url\r\n      })\r\n      .setEvent({\r\n        onCloseHandler: () => {\r\n          this.isShow = false\r\n          this.contentStr = '';\r\n          modalBox.unMount(EffectType.EFFECT1)\r\n        },\r\n        onCancleHandler: () => {\r\n          this.isShow = false\r\n          this.contentStr = '';\r\n          return cancleHandler()\r\n        },\r\n        onOkHandler: () => {\r\n          this.isShow = false\r\n          this.contentStr = '';\r\n          return okHandler()\r\n        }\r\n      })\r\n  }\r\n}"]}