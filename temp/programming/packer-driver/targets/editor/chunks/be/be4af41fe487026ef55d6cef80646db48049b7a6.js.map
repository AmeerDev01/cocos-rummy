{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/components/phoenix_yuanbao_totalBet.ts"],"names":["_decorator","Label","Node","sp","BaseComponent","SkeletonAnimationPlayer","ccclass","property","phoenix_yuanbao_totalBet","propertyNode","props_label_total_multipl","props_label_total_winNum","props_skeleton","props","yuanBaoRate","yuanBaoWinNum","events","killSelfHandler","start","destroyView","initState","bindEvent","useProps","key","value","cur","string","Number","formatAmountWithCommas","titleSkeleton","getComponent","Skeleton","count","playAnimation","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAA8BC,MAAAA,E,OAAAA,E;;AAC5DC,MAAAA,a,iBAAAA,a;;AAEFC,MAAAA,uB;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0CAejBQ,wB,WADZF,OAAO,CAAC,0BAAD,C,gBAAR,MACaE,wBADb;AAAA;AAAA,0CACoF;AAAA;AAAA;AAAA,eAKzEC,YALyE,GAK1D;AAClBC,YAAAA,yBAAyB,EAAE,IAAIT,KAAJ,EADT;AAElBU,YAAAA,wBAAwB,EAAE,IAAIV,KAAJ,EAFR;AAGlBW,YAAAA,cAAc,EAAC,IAAIV,IAAJ;AAHG,WAL0D;AAAA,eAW5EW,KAX4E,GAW5D;AAChBC,YAAAA,WAAW,EAAE,IADG;AAEhBC,YAAAA,aAAa,EAAE;AAFC,WAX4D;AAAA,eAiB5EC,MAjB4E,GAiB3D;AACjBC,YAAAA,eAAe,EAAE,MAAM,CAAG;AADT,WAjB2D;AAAA;;AACnFC,QAAAA,KAAK,GAAG;AACD,eAAKC,WAAL;AACN;;AAmBSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAE3B;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AAC9D,cAAID,GAAG,KAAK,aAAZ,EAA2B;AACvB,gBAAIC,KAAK,CAACC,GAAV,EAAe;AACX,mBAAKhB,YAAL,CAAkBC,yBAAlB,CAA4CgB,MAA5C,GAAqDF,KAAK,CAACC,GAA3D;AACH;AACJ;;AAED,cAAIF,GAAG,KAAK,eAAZ,EAA6B;AACzB,gBAAIC,KAAK,CAACC,GAAV,EAAe;AACX,mBAAKhB,YAAL,CAAkBE,wBAAlB,CAA2Ce,MAA3C,GAAoDC,MAAM,CAACH,KAAK,CAACC,GAAP,CAAN,CAAkBG,sBAAlB,EAApD;AACH;AACJ;AACJ;;AAEOT,QAAAA,WAAW,GAAG;AAClB,gBAAMU,aAAa,GAAG,KAAKpB,YAAL,CAAkBG,cAAlB,CAAiCkB,YAAjC,CAA8C3B,EAAE,CAAC4B,QAAjD,CAAtB;AACA,cAAIC,KAAK,GAAG,CAAZ;AACA;AAAA;AAAA,kEAA4BH,aAA5B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D,MAAM;AAChEG,YAAAA,KAAK,GAD2D,CAEhE;;AACA,iBAAKhB,MAAL,CAAYC,eAAZ,GAHgE,CAIhE;AACA;AACH,WAND,EAMGgB,aANH;AAQH;;AAEMC,QAAAA,MAAM,GAAS,CAExB;;AAGDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAlEkF,O","sourcesContent":["import { _decorator, Component, Label, Node, SkeletalAnimationState, sp, tween } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { GameType } from '../type';\r\nimport SkeletonAnimationPlayer from '../SkeletonPlay';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n    yuanBaoRate: string,\r\n    yuanBaoWinNum:string,\r\n}\r\nexport interface IEvent {\r\n    killSelfHandler: () => void,\r\n}\r\n\r\n@ccclass('phoenix_yuanbao_totalBet')\r\nexport class phoenix_yuanbao_totalBet extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n        this.destroyView();\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n        props_label_total_multipl: new Label(),\r\n        props_label_total_winNum: new Label(),\r\n        props_skeleton:new Node(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n        yuanBaoRate: null,\r\n        yuanBaoWinNum: null,\r\n        \r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n        killSelfHandler: () => { },\r\n        \r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n        if (key === \"yuanBaoRate\") {\r\n            if (value.cur) {\r\n                this.propertyNode.props_label_total_multipl.string = value.cur;\r\n            }\r\n        }\r\n\r\n        if (key === \"yuanBaoWinNum\") {\r\n            if (value.cur) {\r\n                this.propertyNode.props_label_total_winNum.string = Number(value.cur).formatAmountWithCommas();\r\n            }\r\n        }\r\n    }\r\n    \r\n    private destroyView() {\r\n        const titleSkeleton = this.propertyNode.props_skeleton.getComponent(sp.Skeleton)\r\n        let count = 0;\r\n        new SkeletonAnimationPlayer(titleSkeleton, 'animation', true, () => {\r\n            count++\r\n            // if (count > 1) {\r\n            this.events.killSelfHandler()\r\n            // this.node.destroy()\r\n            // }\r\n        }).playAnimation()\r\n\r\n    }\r\n\r\n\tprotected bindUI(): void {\r\n  \r\n\t}\r\n\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}