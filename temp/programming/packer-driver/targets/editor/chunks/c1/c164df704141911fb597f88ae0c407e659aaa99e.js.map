{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fish/index.ts"],"names":["Prefab","assetManager","LoaderPanelViewModel","global","lang","SubGameRunState","getStore","addToastAction","setSubGameRunState","fishFileMap","fishBundlePkgName","PrefabPathDefine","fishStore","config","MainViewModel","TestViewModel","socketConnect","removeInstance","sourceManageMap","bundleFish","sourceManageSelector","bundleName","find","i","bundle","name","initTimeoutId","startUp","rootNode","dispatch","configureStore","loadBundle","err","load","LOAING_PANEL","progress","total","hallDispatch","LOADING","setSubGameGate","gameId","prefab","isAllowOpenSubGame","READY","loaderviweModel","mountView","appendTo","setProps","loadBarType","reverseProgress","setEvent","onLoadDone","_sourceManageMap","comp","setTipContent","window","setTimeout","closeSubGame","confirmContent","write","k","InitGameModule","GameBoardInit","content","placeStr","socketHandle","clearTimeout","mainViewModel","unMount","getFile","GAME_MAIN_PANEL","source","connect","isTest","TEST","then","catch","e","startLoad","stopGame"],"mappings":"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","sourcesContent":["import { AssetManager, Node, Prefab, assetManager } from \"cc\";\r\nimport SourceManage from \"../../base/SourceManage\";\r\nimport LoaderPanelViewModel from \"../../common/viewModel/LoaderPanelViewModel\";\r\nimport { global, lang } from \"../../hall\";\r\nimport { SubGameRunState } from \"../../hall/config\";\r\nimport { getStore } from \"../../hall/store\";\r\nimport { addToastAction, setSubGameRunState } from \"../../hall/store/actions/baseBoard\";\r\nimport fishFileMap, { fishBundlePkgName } from \"./sourceDefine\";\r\nimport { PrefabPathDefine } from \"./sourceDefine/prefabDefine\";\r\nimport fishStore from './store';\r\nimport config from \"./config\";\r\nimport MainViewModel from \"./viewModel/MainViewModel\";\r\nimport TestViewModel from \"./viewModel/TestViewModel\";\r\nimport socketConnect, { removeInstance } from \"./socketConnect\";\r\n\r\nlet sourceManageMap: Array<SourceManage> = []\r\nexport let bundleFish: AssetManager.Bundle = null\r\nexport const sourceManageSelector = (bundleName: string = fishBundlePkgName) => sourceManageMap.find(i => i.bundle.name === bundleName)\r\nexport let rootNode: Node\r\nlet initTimeoutId = 0;\r\n\r\nexport let mainViewModel: MainViewModel;\r\n\r\nexport const startUp = (rootNode: Node) => {\r\n  const dispatch = getStore().dispatch\r\n  rootNode = rootNode\r\n  fishStore.configureStore()\r\n  assetManager.loadBundle(fishBundlePkgName, (err, bundle) => {\r\n    bundleFish = bundle\r\n    bundleFish.load(PrefabPathDefine.LOAING_PANEL, Prefab, (progress, total) => {\r\n      global.hallDispatch(setSubGameRunState(SubGameRunState.LOADING))\r\n      global.setSubGameGate(config.gameId, (progress / total))\r\n    }, (err, prefab) => {\r\n      if (!global.isAllowOpenSubGame(config.gameId)) return\r\n      global.hallDispatch(setSubGameRunState(SubGameRunState.READY))\r\n      const loaderviweModel = new LoaderPanelViewModel().mountView(prefab).appendTo(rootNode).setProps({\r\n        loadBarType: 1,\r\n        reverseProgress: false\r\n      }).setEvent({\r\n        onLoadDone: (_sourceManageMap) => {\r\n          sourceManageMap = _sourceManageMap\r\n\r\n          loaderviweModel.comp.setTipContent(\"game init...\")\r\n\r\n          // 默认给10秒进入游戏超时处理，有时候socket连接成功之后，服务器没有发送进入房间 消息，导致卡住\r\n          initTimeoutId = window.setTimeout(() => {\r\n            global.closeSubGame({\r\n              confirmContent: lang.write(k => k.InitGameModule.GameBoardInit)\r\n            });\r\n            dispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"game init failed\" }) }))\r\n          }, 10000);\r\n\r\n          const socketHandle = () => {\r\n            initTimeoutId && window.clearTimeout(initTimeoutId);\r\n            mainViewModel = new MainViewModel(() => { loaderviweModel.unMount() })\r\n              .mountView(sourceManageSelector().getFile(PrefabPathDefine.GAME_MAIN_PANEL).source)\r\n              .appendTo(rootNode).connect();\r\n            if (config.isTest) {\r\n              new TestViewModel().mountView(sourceManageSelector().getFile(PrefabPathDefine.TEST).source).appendTo(rootNode).connect();\r\n            }\r\n          }\r\n          if (config.isTest) {\r\n            socketConnect();\r\n            socketHandle();\r\n          } else {\r\n            socketConnect().then(socketHandle).catch(e => loaderviweModel.comp.setTipContent(e || 'error'))\r\n          }\r\n        }\r\n      })\r\n      loaderviweModel.comp.startLoad([bundle], [...fishFileMap])\r\n    })\r\n  })\r\n}\r\n\r\nexport const stopGame = () => {\r\n  initTimeoutId && window.clearTimeout(initTimeoutId);\r\n  mainViewModel && mainViewModel.unMount();\r\n  removeInstance();\r\n}"]}