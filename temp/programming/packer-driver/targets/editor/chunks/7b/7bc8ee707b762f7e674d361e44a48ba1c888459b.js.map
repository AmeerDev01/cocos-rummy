{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/thor/viewModel/FooterViewModel.ts"],"names":["sys","ViewModel","StoreInject","getStore","AutoLauncherViewModel","thor_Audio","sourceManageSeletor","PrefabPathDefine","EffectType","BaseViewModel","SKT_MAG_TYPE","sktInstance","beginRollAction","setRollSpeed","setSmallBox","dataTransfer","DataKeyType","AutoLauncherType","GameType","changeAutoLauncherType","changeIsHasten","changeProfit","changebetAmount","setAutoLaunchedTimes","setShowAuthLaunch","setWaiting","SoundPathDefine","global","lang","addToastAction","FooterViewModel","constructor","autoLauncherPanel","helpPanelPanel","positionId","betAmount","begin","mountView","getFile","AUTO_LAUNCHER","source","appendTo","viewNode","parent","connect","setEvent","openAutoLauncher","dispatch","closeAutoLauncher","isClear","NONE","openHelpPanel","playOneShot","BUTTONCLICK","INTRODUCE","effectType","EFFECT1","isModal","closeHandler","unMount","changeBetAmount","value","bet","manualBetHandler","isHasten","bl","isConnect","comp","props","balance","hallDispatch","content","write","k","palyingModule","RechangeGlod","placeStr","openShop","GAME_TYPE","MAIN","sendSktMessage","LAUNCHER_BET","tableId","JSON","parse","localStorage","getItem","buy","getState","game","gameMode","ROLLER_BEGIN","inject","autoLauncherType","state","isRollEnd","roller","roundAllEnd","profit","subGameTimes","remainSubGameTimes","currGameType","viewGameType","isShowAutoLaunch","autoLaunchedTimes","apostille"],"mappings":"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","sourcesContent":["import { Node, UIOpacity, sys,Animation } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { Thor_Footer, IProps, IEvent } from \"../components/Thor_Footer\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { getStore } from \"../store\"\r\nimport AutoLauncherViewModel from \"./AutoLauncherViewModel\"\r\nimport { thor_Audio, sourceManageSeletor } from \"../index\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport BaseViewModel from \"../../../common/viewModel/BaseViewModel\"\r\nimport { Thor_HelpPanel, IProps as FIProps, IState as FIState, IEvent as FIEvent } from \"../components/Thor_HelpPanel\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { beginRollAction, setRollRoundEnd, setRollSpeed, setSmallBox } from \"../store/actions/roller\"\r\nimport dataTransfer, { DataKeyType } from \"../dataTransfer\"\r\nimport { AutoLauncherType, GameType } from \"../type\"\r\nimport { changeAutoLauncherType, changeGame, changeIsHasten, changeProfit, changebetAmount, setAutoLaunchedTimes, setShowAuthLaunch, setWaiting } from \"../store/actions/game\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\nimport RollerPanelViewModel from \"./RollerPanelViewModel\"\r\n\r\n@StoreInject(getStore())\r\nclass FooterViewModel extends ViewModel<Thor_Footer, IProps, IEvent> {\r\n  constructor() {\r\n    super('Thor_Footer')\r\n  }\r\n  public autoLauncherPanel: AutoLauncherViewModel\r\n  public helpPanelPanel: BaseViewModel<Thor_HelpPanel, FIState, FIProps, FIEvent>\r\n  private positionId: number = 0\r\n  private betAmount: number = 0\r\n\r\n  protected begin() {\r\n    this.autoLauncherPanel = new AutoLauncherViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.AUTO_LAUNCHER).source).appendTo(this.viewNode.parent).connect()\r\n    // this.autoLauncherPanel.viewNode.getComponent(UIOpacity).opacity = 0\r\n    this.setEvent({\r\n      openAutoLauncher: () => {\r\n        this.dispatch(setShowAuthLaunch(true));\r\n        // (this.comp.getPropertyNode().props_down_chooseBg as Node).getComponent(Animation).play('animation_autoLauncher_up')\r\n      },\r\n      closeAutoLauncher: (isClear) => {\r\n        this.dispatch(setShowAuthLaunch(false));\r\n        //  (this.comp.getPropertyNode().props_down_chooseBg as Node).getComponent(Animation).play('animation_autoLauncher_down')\r\n        isClear && this.dispatch(changeAutoLauncherType(AutoLauncherType.NONE))\r\n        isClear && this.dispatch(setAutoLaunchedTimes(0))\r\n        isClear && this.dispatch(setRollSpeed(1))\r\n      },\r\n      openHelpPanel: () => {\r\n        thor_Audio.playOneShot(SoundPathDefine.BUTTONCLICK)\r\n        this.helpPanelPanel = new BaseViewModel<Thor_HelpPanel, FIState, FIProps, FIEvent>(\"Thor_HelpPanel\").mountView(sourceManageSeletor().getFile(PrefabPathDefine.INTRODUCE).source)\r\n          .appendTo(this.viewNode.parent, { effectType: EffectType.EFFECT1, isModal: true }).setEvent({\r\n            closeHandler: () => {\r\n              this.helpPanelPanel.unMount(EffectType.EFFECT1)\r\n            }\r\n          })\r\n      },\r\n      changeBetAmount: (betAmount: number, positionId?: number, value?: number) => {\r\n        this.betAmount = betAmount\r\n        if(positionId&&value){\r\n          this.positionId = positionId\r\n          this.dispatch(changebetAmount({betAmount:this.betAmount,bet:value}))\r\n        }\r\n      },\r\n      manualBetHandler: () => {\r\n        this.manualBetHandler()\r\n      },\r\n      isHasten:(bl:boolean)=>{\r\n        thor_Audio.playOneShot(SoundPathDefine.BUTTONCLICK)\r\n        this.dispatch(changeIsHasten(bl))\r\n      }\r\n    })\r\n  }\r\n  public manualBetHandler() {\r\n    if (!sktInstance || (sktInstance && !sktInstance.isConnect)) return\r\n    if (this.comp.props&&this.comp.props.balance < this.betAmount) {\r\n      global.hallDispatch(addToastAction({ content: lang.write(k => k.palyingModule.RechangeGlod, {}, { placeStr: \"对不起，您的金币不足，请充值!\" }) }))\r\n      global.openShop()\r\n      this.dispatch(changeAutoLauncherType(AutoLauncherType.NONE))\r\n      this.dispatch(setAutoLaunchedTimes(0))\r\n      return\r\n    }\r\n    //先转起来\r\n    this.dispatch(beginRollAction(-1))\r\n    //如果主游戏，清理奖池\r\n    dataTransfer(DataKeyType.GAME_TYPE) === GameType.MAIN && this.dispatch(changeProfit(0))\r\n    //发送下注\r\n    sktInstance.sendSktMessage(SKT_MAG_TYPE.LAUNCHER_BET, {\r\n      positionId: this.positionId,\r\n      tableId: JSON.parse(sys.localStorage.getItem('thor')).tableId,\r\n      buy:getStore().getState().game.gameMode\r\n    })\r\n    this.dispatch(setWaiting(false))\r\n    this.dispatch(setSmallBox({}))\r\n    thor_Audio.playOneShot(SoundPathDefine.ROLLER_BEGIN)\r\n  }\r\n  public connect() {\r\n    this.inject({\r\n      autoLauncherType: getStore().getState().game.autoLauncherType\r\n    }, (state: StateType) => {\r\n      return {\r\n        isRollEnd: state.roller.roundAllEnd,\r\n        profit: state.game.profit,\r\n        subGameTimes: state.game.subGameTimes,\r\n        remainSubGameTimes: state.game.remainSubGameTimes,\r\n        currGameType: state.game.currGameType,\r\n        viewGameType: state.game.viewGameType,\r\n        isShowAutoLaunch: state.game.isShowAutoLaunch,\r\n        autoLauncherType: state.game.autoLauncherType,\r\n        autoLaunchedTimes: state.game.autoLaunchedTimes,\r\n        balance: state.game.balance,\r\n        apostille: state.game.apostille\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default FooterViewModel\r\n"]}