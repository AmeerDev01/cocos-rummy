{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/starlight/components/Thor_JackPot.ts"],"names":["_decorator","Node","tween","Vec3","BaseComponent","TaskScheduler","Task","footerViewModel","ccclass","property","Starlight_JackPot","taskScheduler","propertyNode","props_header","props_level_body","props_spr_jackpot_banban","props_spr_jackpot_strawberry","props_spr_jackpot_apple","props_spr_jackpot_grape","props_spr_jackpot_watermelon","props_spr_level_bg","props","fruitHeader","banana","strawberry","apple","grape","watermelon","level","events","start","initState","bindEvent","useProps","key","value","getChildByName","active","joinqQueue","done","x","y","z","position","to","call","bindUI","comp","getPositionData","getGratisAmount","amount","toFixed","destroyCallBack","destoryQueue","getHeaderNode","getLevelBodyNode","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node, tween, Vec3 } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport TaskScheduler, { Task } from '../../../utils/TaskScheduler';\r\nimport { footerViewModel } from '../index';\r\nimport config from '../config';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\tfruitHeader: {\r\n\t\tbanana: boolean,\r\n\t\tstrawberry: boolean,\r\n\t\tapple: boolean,\r\n\t\tgrape: boolean,\r\n\t\twatermelon: boolean\r\n\t},\r\n\tlevel: number\r\n}\r\nexport interface IEvent {\r\n\r\n}\r\n\r\n@ccclass('Starlight_JackPot')\r\nexport class Starlight_JackPot extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\tprivate taskScheduler: TaskScheduler = new TaskScheduler()\r\n\tprotected propertyNode = {\r\n\t\tprops_header: new Node(),\r\n\t\tprops_level_body: new Node(),\r\n\t\tprops_spr_jackpot_banban: new Node(),\r\n\t\tprops_spr_jackpot_strawberry: new Node(),\r\n\t\tprops_spr_jackpot_apple: new Node(),\r\n\t\tprops_spr_jackpot_grape: new Node(),\r\n\t\tprops_spr_jackpot_watermelon: new Node(),\r\n\t\tprops_spr_level_bg: new Node()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tfruitHeader: {\r\n\t\t\tbanana: false,\r\n\t\t\tstrawberry: false,\r\n\t\t\tapple: false,\r\n\t\t\tgrape: false,\r\n\t\t\twatermelon: false\r\n\t\t},\r\n\t\tlevel: 0\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === \"fruitHeader\") {\r\n\t\t\tthis.propertyNode.props_spr_jackpot_banban.getChildByName(\"light\").active = this.props.fruitHeader.banana\r\n\t\t\tthis.propertyNode.props_spr_jackpot_strawberry.getChildByName(\"light\").active = this.props.fruitHeader.strawberry\r\n\t\t\tthis.propertyNode.props_spr_jackpot_apple.getChildByName(\"light\").active = this.props.fruitHeader.apple\r\n\t\t\tthis.propertyNode.props_spr_jackpot_grape.getChildByName(\"light\").active = this.props.fruitHeader.grape\r\n\t\t\tthis.propertyNode.props_spr_jackpot_watermelon.getChildByName(\"light\").active = this.props.fruitHeader.watermelon\r\n\t\t}\r\n\t\tif (key === \"level\") {\r\n\t\t\tthis.taskScheduler.joinqQueue(new Task((done) => {\r\n\t\t\t\tthis.propertyNode.props_spr_level_bg.active = true\r\n\t\t\t\tconst { x, y, z } = this.propertyNode.props_spr_level_bg.position\r\n\t\t\t\ttween(this.propertyNode.props_spr_level_bg).to(0.3, { position: new Vec3(x, y + 37.8, z) }).call(() => done()).start()\r\n\t\t\t}))\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tconst value = footerViewModel.comp.getPositionData().value\r\n\t\t// this.propertyNode.props_level_body.children[0].getComponent(Label).string = \"+\" + (value * config.treasureBoxAddition.multiple1).formatAmountWithCommas()\r\n\t\t// this.propertyNode.props_level_body.children[1].getComponent(Label).string = \"+\" + (value * config.treasureBoxAddition.multiple2).formatAmountWithCommas()\r\n\t\t// // this.propertyNode.props_level_body.children[2].getComponent(Label).string = \"3 Rotasi gratis + \" + this.getGratisAmount(value * config.treasureBoxAddition.multiple3)//(value * config.treasureBoxAddition.multiple3 / 1000).toFixed(1) + \"K\"\r\n\t\t// // this.propertyNode.props_level_body.children[3].getComponent(Label).string = \"6 Rotasi gratis + \" + this.getGratisAmount(value * config.treasureBoxAddition.multiple3)\r\n\t\t// this.propertyNode.props_level_body.children[2].getComponent(Label).string = \"3 Rotasi gratis + \" + (value * config.treasureBoxAddition.multiple3).formatAmountWithLetter()\r\n\t\t// this.propertyNode.props_level_body.children[3].getComponent(Label).string = \"6 Rotasi gratis + \" + (value * config.treasureBoxAddition.multiple4).formatAmountWithLetter()\r\n\t}\r\n\r\n\tprivate getGratisAmount(amount: number) {\r\n\t\tif (amount > 1000) {\r\n\t\t\treturn (amount / 1000).toFixed(0) + \"K\"\r\n\t\t} else {\r\n\t\t\treturn amount.toFixed(0)\r\n\t\t}\r\n\t}\r\n\r\n\tprotected destroyCallBack() {\r\n\t\tthis.taskScheduler.destoryQueue()\r\n\t}\r\n\r\n\tpublic getHeaderNode() {\r\n\t\treturn this.propertyNode.props_header\r\n\t}\r\n\tpublic getLevelBodyNode() {\r\n\t\treturn this.propertyNode.props_level_body\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}