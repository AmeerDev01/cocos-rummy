{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/domino/viewModel/RoomChooseViewModel.ts"],"names":["sys","ViewModel","StoreInject","MainBoardViewModel","sourceManageSeletor","PrefabPathDefine","getStore","SKT_MAG_TYPE","sktInstance","sktMsgListener","config","DeskStatus","convertAzimuth","genCardItem","genPlayer","getRoomUpper","changeDeskStatus","changeOutCardPlayer","clearRoomData","showOutCard","updateGold","global","lang","ModalBox","RoomChooseViewModel","constructor","mainBoardViewModel","memberId","roomId","roomInfo","begin","add","AUTH","data","dispatch","gold","setProps","roomMap","dominoRoomInfoVos","JOIN_ROOM","enterGame","testConfig","wsUrl","token","localStorage","getItem","sendSktMessage","gameId","RECONNECT","reconnectHandle","GOLD_CHANGE","setEvent","beginHandler","fastEnterGame","clickRoomHandler","clickEnterGame","comp","props","lower","joinGame","getCanEnterRoom","content","write","k","palyingModule","RechangeGlod","placeStr","Instance","show","type","openShop","ExceedUpper1","format","roomName","find","v","maxRoomInfo","length","upper","myMemberId","selfPlayer","item","onComplate","forEach","isSelf","player","isValid","myChairId","chairId","tableId","mountView","getFile","MAIN_BOARD","source","appendTo","viewNode","connect","dominoMemBerInfoVo","deskStatus","convertDeskStatus","gameType","membersCards","uid","gameData","remainCardCount","cardRecordsVos","reconnectGenCardItem","readyCountdown","COUNTDOWNING","setBeginGameCountdownCount","seconds","time","seatIndex","timestamp","Date","now","PLAYING","reconnectDeal","getPlayer","thisMemberId","startCountdown","cardRecordsVo","card","undefined","cardItem","azimuth","position","isReconnect","seatMine","unMountCallBack","inject","state","deskData"],"mappings":"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","sourcesContent":["import { Node, sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { Domino_RoomChoose, IProps, IEvent } from \"../components/Domino_RoomChoose\"\r\nimport MainBoardViewModel from \"./MainBoardViewModel\"\r\nimport { sourceManageSeletor } from \"../index\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { getStore } from \"../store\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport config from \"../config\"\r\nimport { CardRecordsVo, Countdown, DeskStatus, MemberInfoVo, Player, PlayerSatus, ReconnectVo, RoomInfo, convertAzimuth, genCardItem, genPlayer, getRoomUpper } from \"../type\"\r\nimport { changeDeskStatus, changeOutCardPlayer, clearRoomData, showOutCard, updateGold } from \"../store/action/game\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\nimport ModalBox from \"../../../common/ModalBox\"\r\n\r\n@StoreInject(getStore())\r\nclass RoomChooseViewModel extends ViewModel<Domino_RoomChoose, IProps, IEvent> {\r\n  constructor() {\r\n    super('Domino_RoomChoose')\r\n  }\r\n  public mainBoardViewModel: MainBoardViewModel\r\n  public memberId: string\r\n  public roomId: string\r\n  public roomInfo: RoomInfo\r\n\r\n  protected begin() {\r\n    sktMsgListener.add(SKT_MAG_TYPE.AUTH, \"room\", (data) => {\r\n      // sys.localStorage.setItem(\"domino\", JSON.stringify({ memberId: data.memberId }))\r\n      this.dispatch(clearRoomData(0));\r\n      this.memberId = data.memberId\r\n      const gold = data ? data.gold : 0;\r\n      this.setProps({ roomMap: data.dominoRoomInfoVos })\r\n      this.dispatch(updateGold(gold));\r\n    })\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.JOIN_ROOM, \"room\", (data) => {\r\n      this.enterGame(data)\r\n    })\r\n\r\n    if (config.testConfig.wsUrl) {\r\n      const token = sys.localStorage.getItem(\"tokentest\");\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token\r\n      })\r\n    } else {\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token: sys.localStorage.getItem(\"token\"),\r\n        gameId: config.gameId\r\n      })\r\n    }\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.RECONNECT, \"room\", (data: ReconnectVo) => {\r\n      this.reconnectHandle(data);\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.GOLD_CHANGE, \"room\", (data: number) => {\r\n      this.dispatch(updateGold(data));\r\n    })\r\n\r\n    this.setEvent({\r\n      beginHandler: () => {\r\n        //快速加入\r\n        this.fastEnterGame();\r\n      },\r\n      clickRoomHandler: (roomInfo: RoomInfo) => {\r\n        this.clickEnterGame(roomInfo);\r\n      }\r\n    })\r\n  }\r\n\r\n  private clickEnterGame(roomInfo: RoomInfo) {\r\n    const gold = this.comp.props.gold;\r\n    if (roomInfo.lower <= gold && gold <= getRoomUpper(roomInfo)) {\r\n      this.joinGame(roomInfo);\r\n    } else {\r\n      roomInfo = this.getCanEnterRoom();\r\n\r\n      if (!roomInfo) {\r\n        let content = lang.write(k => k.palyingModule.RechangeGlod, {},\r\n          { placeStr: \"对不起，您的金币不足，请充值!\" });\r\n        ModalBox.Instance().show({\r\n          content: content, type: 'Prompt'\r\n        }, () => {\r\n          global.openShop();\r\n          return true\r\n        })\r\n      } else {\r\n        let content = lang.write(k => k.palyingModule.ExceedUpper1, {},\r\n          { placeStr: \"对不起，您不符合进入条件，是否进入{0}!\" });\r\n        content = content.format(roomInfo.roomName);\r\n\r\n        ModalBox.Instance().show({\r\n          content: content, type: 'Confirm'\r\n        }, () => {\r\n          this.joinGame(roomInfo);\r\n          return true\r\n        }, () => {\r\n          return true\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  private getCanEnterRoom() {\r\n    const gold = this.comp.props.gold;\r\n    return this.comp.props.roomMap.find(v => v.lower <= gold && gold <= getRoomUpper(v));\r\n  }\r\n\r\n  private fastEnterGame() {\r\n    const gold = this.comp.props.gold;\r\n    const maxRoomInfo = this.comp.props.roomMap[this.comp.props.roomMap.length - 1];\r\n    let roomInfo = this.getCanEnterRoom();\r\n    if (!roomInfo) {\r\n      // 如果余额超过了最大金额房间，直接进入到最后一个房间\r\n      if (gold > maxRoomInfo.upper || maxRoomInfo.upper === -1) {\r\n        roomInfo = maxRoomInfo;\r\n      }\r\n    }\r\n    this.joinGame(roomInfo);\r\n  }\r\n\r\n  private joinGame(roomInfo: RoomInfo) {\r\n    if (!roomInfo) {\r\n      global.openShop();\r\n      return;\r\n    }\r\n\r\n    this.roomInfo = roomInfo;\r\n    sktInstance.sendSktMessage(SKT_MAG_TYPE.JOIN_ROOM, {\r\n      memberId: this.memberId,\r\n      gameId: config.gameId,\r\n      roomId: this.roomInfo.roomId\r\n    })\r\n  }\r\n\r\n  public enterGame(data: Array<MemberInfoVo>) {\r\n\r\n    // const myMemberId = config.isTest ? JSON.parse(localStorage.getItem(\"domino\")).memberId : this.memberId;\r\n    const myMemberId = this.memberId;\r\n    const selfPlayer = data.find(item => item.memberId === myMemberId);\r\n\r\n    const onComplate = () => {\r\n      data.forEach(item => {\r\n        // const isSelf = item.memberId === JSON.parse(localStorage.getItem(\"domino\")).memberId\r\n        const isSelf = item.memberId === myMemberId\r\n        const player = genPlayer(item);\r\n        player.isSelf = isSelf;\r\n        this.mainBoardViewModel.enterGame(player);\r\n      })\r\n    }\r\n    if (!this.mainBoardViewModel || !this.mainBoardViewModel.comp || !this.mainBoardViewModel.comp.isValid) {\r\n      this.mainBoardViewModel = new MainBoardViewModel();\r\n      this.mainBoardViewModel.roomId = this.roomId;\r\n      this.mainBoardViewModel.roomInfo = this.roomInfo;\r\n      this.mainBoardViewModel.memberId = this.memberId;\r\n      this.mainBoardViewModel.myChairId = selfPlayer ? selfPlayer.chairId : 1;\r\n      this.mainBoardViewModel.tableId = selfPlayer ? selfPlayer.tableId : '';\r\n      this.mainBoardViewModel.onComplate = onComplate;\r\n      this.mainBoardViewModel.mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_BOARD).source).appendTo(this.viewNode).connect();\r\n    } else {\r\n      onComplate();\r\n    }\r\n  }\r\n\r\n  private reconnectHandle(data: ReconnectVo) {\r\n    this.roomId = data.roomId;\r\n    this.roomInfo = this.comp.props.roomMap.find(v => v.roomId === this.roomId);\r\n    const selfPlayer = data.dominoMemBerInfoVo.find(item => item.memberId === this.memberId);\r\n\r\n    const onComplate = () => {\r\n      const deskStatus = this.convertDeskStatus(data.gameType);\r\n      data.dominoMemBerInfoVo.forEach(v => {\r\n        const isSelf = v.memberId === this.memberId;\r\n        const player = genPlayer(v);\r\n        if (data.membersCards && data.membersCards[player.uid]) {\r\n          player.gameData.remainCardCount = data.membersCards[player.uid];\r\n        }\r\n        player.isSelf = isSelf;\r\n        this.mainBoardViewModel.enterGame(player);\r\n      })\r\n\r\n      data.cardRecordsVos && data.cardRecordsVos.forEach(v => {\r\n        this.reconnectGenCardItem(v);\r\n      })\r\n\r\n      let readyCountdown: Countdown;\r\n      // 这里设置开始游戏倒计时需要在切换状态之前\r\n      if (deskStatus === DeskStatus.COUNTDOWNING) {\r\n        this.mainBoardViewModel.comp.setBeginGameCountdownCount(data.seconds);\r\n        readyCountdown = {\r\n          time: data.seconds,\r\n          seatIndex: -1,\r\n          timestamp: Date.now(),\r\n        }\r\n      }\r\n\r\n      // 1.切换游戏状态\r\n      this.dispatch(changeDeskStatus(deskStatus, readyCountdown));\r\n\r\n      if (deskStatus === DeskStatus.PLAYING) {\r\n        // 2.构建自己手牌\r\n        this.reconnectDeal(data);\r\n        // 3.切换当前应该操作的用户\r\n        this.dispatch(changeOutCardPlayer(this.mainBoardViewModel.getPlayer(data.thisMemberId).seatIndex));\r\n        // 这里设置出牌倒计时需要在切换状态之后\r\n        this.mainBoardViewModel.startCountdown(data.seconds);\r\n      }\r\n    }\r\n\r\n    if (!this.mainBoardViewModel || !this.mainBoardViewModel.comp || !this.mainBoardViewModel.comp.isValid) {\r\n      this.mainBoardViewModel = new MainBoardViewModel();\r\n      this.mainBoardViewModel.roomId = this.roomId;\r\n      this.mainBoardViewModel.roomInfo = this.roomInfo;\r\n      this.mainBoardViewModel.memberId = this.memberId;\r\n      this.mainBoardViewModel.myChairId = selfPlayer.chairId;\r\n      this.mainBoardViewModel.tableId = selfPlayer.tableId;\r\n      this.mainBoardViewModel.onComplate = onComplate;\r\n      this.mainBoardViewModel.mountView(sourceManageSeletor().getFile(PrefabPathDefine.MAIN_BOARD).source).appendTo(this.viewNode).connect();\r\n    } else {\r\n      onComplate();\r\n    }\r\n  }\r\n\r\n  private convertDeskStatus(gameType: number) {\r\n    if (gameType === 1) {\r\n      return DeskStatus.COUNTDOWNING\r\n    } else if (gameType === 2) {\r\n      return DeskStatus.PLAYING\r\n    }\r\n  }\r\n\r\n  private reconnectGenCardItem(cardRecordsVo: CardRecordsVo) {\r\n    if (cardRecordsVo.card < 0 || cardRecordsVo.card === undefined) {\r\n      return;\r\n    }\r\n    const cardItem = genCardItem(cardRecordsVo.card);\r\n    cardItem.azimuth = convertAzimuth(cardRecordsVo.position);\r\n    cardItem.seatIndex = this.mainBoardViewModel.getPlayer(cardRecordsVo.memberId).seatIndex;\r\n    cardItem.isReconnect = true;\r\n    this.dispatch(showOutCard(cardItem));\r\n  }\r\n\r\n  private reconnectDeal(data: ReconnectVo) {\r\n    this.mainBoardViewModel.seatMine.comp.reconnectDeal();\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.mainBoardViewModel = undefined;\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        gold: state.deskData.gold\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RoomChooseViewModel"]}