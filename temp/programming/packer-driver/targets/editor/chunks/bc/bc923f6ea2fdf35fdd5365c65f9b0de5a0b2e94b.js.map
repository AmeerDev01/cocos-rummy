{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonTiger/socketConnect.ts"],"names":["WebSocketToDo","listenerFactoy","initConfig","subGameList","config","getStore","addToastAction","setLoadingAction","global","lang","SKT_MAG_TYPE","sktMsgListener","sktInstance","dispatch","Promise","resolve","reject","then","gameId","websocketUrl","find","i","init","sktCode","onMessage","code","data","error","dispath","undefined","onDataFail","content","write","k","WebSocketModule","socketConnectDateFail","placeStr","isShow","onAnthFail","socketConnectAuthFaild","closeSubGame","confirmContent","onDisconnect","socketConnectDisconnect","onReConnect","times","initSocket","catch","e","hallDispatch","InitGameModule","GameBoardInit","removeInstance","window","setTimeout","isPre","ConfigGameFaild","removeAll","close"],"mappings":"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","sourcesContent":["import { default as redux } from \"redux\"\r\nimport WebSocketToDo from \"../../common/WebSocketToDo\"\r\nimport { listenerFactoy } from \"../../common/listenerFactoy\"\r\nimport { initConfig, subGameList } from \"../../hall/config\"\r\nimport config from \"./config\"\r\nimport { getStore } from \"../../hall/store\"\r\nimport { ToastType, addToastAction, setLoadingAction } from \"../../hall/store/actions/baseBoard\"\r\nimport { global, lang } from \"../../hall\"\r\n\r\nexport enum SKT_MAG_TYPE {\r\n  /**心跳 */\r\n  HEART_BEAT = \"1\",\r\n  /** 认证 */\r\n  AUTH = \"2\",\r\n  /**获取用户信息 */\r\n  MY_INFO = \"4\",\r\n  /**充值返回 */\r\n  TOP_UP = \"10\",\r\n  /**游戏权限提示语 */\r\n  GAME_TIP = \"11\",\r\n  /** 倒计时 */\r\n  CRASH = \"801\",\r\n  /** 下注总金币数 */\r\n  BET_ALL = \"802\",\r\n  /**下注返回 */\r\n  BET_RESPONSE = \"803\",\r\n  /** 结算 */\r\n  SETTLEMENT = \"804\",\r\n  /** 获取牌 */\r\n  POKER = \"805\",\r\n  /** 历史记录 */\r\n  HISTORY = \"806\",\r\n  /** 所有用户信息 */\r\n  ALL_USERS = '807',\r\n  /** 其他玩家赢 */\r\n  OTHER_WIN = \"808\",\r\n  /** 重复下注 */\r\n  REPEAT_BET = \"809\",\r\n  /**游戏唤醒消息 */\r\n  GAME_SHOW = \"810\",\r\n  /**赠送礼物 */\r\n  GIVE_GIFT = \"812\",\r\n}\r\n\r\nexport const sktMsgListener = listenerFactoy<SKT_MAG_TYPE>()\r\n\r\nexport let sktInstance: WebSocketToDo<SKT_MAG_TYPE> = null\r\nconst dispatch = getStore().dispatch\r\nexport default () => {\r\n  return new Promise((resolve, reject) => {    \r\n    if (sktInstance) {\r\n      resolve(sktInstance)\r\n    } else {\r\n      sktInstance = new WebSocketToDo<SKT_MAG_TYPE>()\r\n      initConfig().then(() => {\r\n        const { gameId, websocketUrl } = subGameList.find(i => i.gameId === config.gameId)\r\n        sktInstance.init(config.sktCode, gameId, websocketUrl, {\r\n          // sktInstance.init(config.sktCode, 12, \"ws://192.168.110.243:18003/ws\", {\r\n          onMessage: (code, data, error) => {\r\n            sktMsgListener.dispath(code, data || undefined, error)\r\n          },\r\n          onDataFail: (data: any) => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDateFail, {}, { placeStr: \"连接失败\" }) }))\r\n            dispatch(setLoadingAction({ isShow: false }))\r\n          },\r\n          onAnthFail: () => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectAuthFaild, {}, { placeStr: \"Auth Faild\" }) }))\r\n            global.closeSubGame({\r\n              confirmContent: lang.write(k => k.WebSocketModule.socketConnectAuthFaild)\r\n            });\r\n          },\r\n          onDisconnect: (data: any) => {\r\n            // dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDisconnect, {}, { placeStr: \"socket disconnect\" }), type: ToastType.ERROR }))\r\n            // dispatch(setLoadingAction({ isShow: false }))\r\n            global.closeSubGame({ confirmContent: lang.write(k => k.WebSocketModule.socketConnectDisconnect) })\r\n          },\r\n          onReConnect: (times) => {\r\n            if (times >= 5) {\r\n              global.closeSubGame({\r\n                confirmContent: lang.write(k => k.WebSocketModule.socketConnectDisconnect)\r\n              } );\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          }\r\n        })\r\n        sktInstance.initSocket().then(() => {\r\n          resolve(sktInstance)\r\n        }).catch(e => {\r\n          global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"游戏初始化失败\" }) }))\r\n          removeInstance()\r\n          window.setTimeout(() => {\r\n            global.closeSubGame({ isPre: true })\r\n          }, 1500)\r\n        })\r\n      }).catch(e => {\r\n        global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"游戏初始化失败\" }) }))\r\n        global.closeSubGame({\r\n          confirmContent: lang.write(k =>  k.WebSocketModule.ConfigGameFaild)\r\n        } );\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport const removeInstance = () => {\r\n  sktMsgListener && sktMsgListener.removeAll()\r\n  sktInstance && sktInstance.close()\r\n  sktInstance = null\r\n}\r\n"]}