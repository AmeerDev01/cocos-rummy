{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth/Slot/utils/NumberRoller.ts"],"names":["NumberRoller","constructor","rolling","startTime","duration","startNumber","endNumber","targetLabel","updateCallback","onUpdate","dt","elapsed","Date","now","progress","Math","min","currentNumber","string","floor","formatAmountWithCommas","startRolling","onComplete","update"],"mappings":";;;kEAEaA,Y;;;;;;;;;;;;;;;;;8BAAAA,Y,GAAN,MAAMA,YAAN,CAAmB;AAStBC,QAAAA,WAAW,GAAG;AAAA,eARNC,OAQM,GARa,KAQb;AAAA,eAPNC,SAOM,GAPc,CAOd;AAAA,eANNC,QAMM,GANa,CAMb;AAAA,eALNC,WAKM,GALgB,CAKhB;AAAA,eAJNC,SAIM,GAJc,CAId;AAAA,eAHNC,WAGM,GAHsB,IAGtB;AAAA,eAFNC,cAEM,GAF4B,IAE5B;AAAE;;AAERC,QAAAA,QAAQ,CAACC,EAAD,EAAa;AACzB,cAAI,KAAKR,OAAT,EAAkB;AACd,kBAAMS,OAAO,GAAGC,IAAI,CAACC,GAAL,KAAa,KAAKV,SAAlC;AACA,kBAAMW,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,OAAO,GAAG,KAAKP,QAA3B,CAAjB;AAEA,kBAAMa,aAAa,GAAG,KAAKZ,WAAL,GAAmB,CAAC,KAAKC,SAAL,GAAiB,KAAKD,WAAvB,IAAsCS,QAA/E;AACA,iBAAKP,WAAL,CAAkBW,MAAlB,GAA2BH,IAAI,CAACI,KAAL,CAAWF,aAAX,EAA0BG,sBAA1B,EAA3B;;AAEA,gBAAIN,QAAQ,IAAI,CAAhB,EAAmB;AACf,mBAAKZ,OAAL,GAAe,KAAf;;AACA,kBAAI,KAAKM,cAAT,EAAyB;AACrB,qBAAKA,cAAL;AACH;AACJ;AACJ;AACJ;;AAEMa,QAAAA,YAAY,CAAChB,WAAD,EAAsBC,SAAtB,EAAyCF,QAAzC,EAA2DG,WAA3D,EAA+Ee,UAA/E,EAAsG;AACrH,cAAI,KAAKpB,OAAT,EAAkB;AACd;AACH;;AAED,eAAKG,WAAL,GAAmBA,WAAnB;AACA,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKF,QAAL,GAAgBA,QAAhB;AACA,eAAKG,WAAL,GAAmBA,WAAnB;AACA,eAAKJ,SAAL,GAAiBS,IAAI,CAACC,GAAL,EAAjB;AACA,eAAKX,OAAL,GAAe,IAAf;AACA,eAAKM,cAAL,GAAsBc,UAAU,IAAI,IAApC;AACH,SAxCqB,CA0CtB;;;AACOC,QAAAA,MAAM,CAACb,EAAD,EAAa;AACtB,eAAKD,QAAL,CAAcC,EAAd;AACH;;AA7CqB,O","sourcesContent":["import { Label } from 'cc';\r\n\r\nexport class NumberRoller {\r\n    private rolling: boolean = false;\r\n    private startTime: number = 0;\r\n    private duration: number = 0;\r\n    private startNumber: number = 0;\r\n    private endNumber: number = 0;\r\n    private targetLabel: Label | null = null;\r\n    private updateCallback: Function | null = null;\r\n\r\n    constructor() {}\r\n\r\n    private onUpdate(dt: number) {\r\n        if (this.rolling) {\r\n            const elapsed = Date.now() - this.startTime;\r\n            const progress = Math.min(1, elapsed / this.duration);\r\n\r\n            const currentNumber = this.startNumber + (this.endNumber - this.startNumber) * progress;\r\n            this.targetLabel!.string = Math.floor(currentNumber).formatAmountWithCommas();\r\n\r\n            if (progress >= 1) {\r\n                this.rolling = false;\r\n                if (this.updateCallback) {\r\n                    this.updateCallback();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public startRolling(startNumber: number, endNumber: number, duration: number, targetLabel: Label, onComplete?: Function) {\r\n        if (this.rolling) {\r\n            return;\r\n        }\r\n\r\n        this.startNumber = startNumber;\r\n        this.endNumber = endNumber;\r\n        this.duration = duration;\r\n        this.targetLabel = targetLabel;\r\n        this.startTime = Date.now();\r\n        this.rolling = true;\r\n        this.updateCallback = onComplete || null;\r\n    }\r\n\r\n    // 新增的方法，用于手动触发滚动逻辑\r\n    public update(dt: number) {\r\n        this.onUpdate(dt);\r\n    }\r\n}\r\n"]}