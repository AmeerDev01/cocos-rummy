{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/egypt/Slot/Mediator/RollerMediator.ts"],"names":["RollerMediator","Prefab","find","CommandDefine","PrefabDefine","BaseMediator","BgMediatorConst","BgCommandConst","goldState","getBgProxy","ApplicationGlobal","TaskScheduler","Task","ROLL_TIME","RollerMediatorConst","constructor","mediatorName","viewComponent","taskScheduler","sourceMap","key","path","SLOT_PANEL","sourceType","source","stopRollHandle","stopTimeId","listNotificationConst","name","INIT_ROLLER_PANEL","handler","notification","init","setDisable","window","setTimeout","sendNotification","BG","AUTO_LAUNCH","REMOVE_THECHEST_LAYER","iconStay","getBody","rollerComp","wrapView","getChildByName","getComponent","togglesALLLayer","BEGIN_ROLL","stopIndex","targetList","dockIocn","startAllRoll","isSpeed","stopQueue","i","flickerFn","forEach","item","iconFlicker","length","clearStatus","doneFinish","flashLine","res","index","task","done","joinqQueue","order","SHOW_DIALOG_WIN","doneTmp","iconDock","TOGGLETHESTARTBUTTON","state","autoLaunch","GAME_TYPE_CHANGE","isManualStop","undefined","stopAllRoll","UPDATE_USER_GOLD","OLD_GOLD","UPDATE_CURRENT_SCORE","END_ROLL","clearTimeout","UNINSTALL_ROLLER_PANEL","console","log","uninstall","mainPrefabSource","getSource","mainPanel","addChild","listenerEvent","fbp"],"mappings":"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","sourcesContent":["import { Prefab, Vec3, color, find, tween } from \"cc\";\r\nimport { INotification } from \"../../Framework/interfaces/INotification\";\r\nimport Mediator from \"../../Framework/patterns/mediator/Mediator\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { PrefabDefine } from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\";\r\nimport { IlistTypeHander } from \"../types/IlistTypeHander\";\r\nimport { ISourceFile } from \"../types/ISourceFile\";\r\nimport { Egypt_Roller } from \"../Component/Egypt_Roller\";\r\nimport { Egypt_RollerPanel } from \"../Component/Egypt_RollerPanel\";\r\nimport { BgMediatorConst } from \"./BgMediator\";\r\nimport { SocketProxy, SubGameType } from \"../Proxy/SocketProxy\";\r\nimport { ProxyDefine } from \"../Const/ProxyDefine\";\r\nimport { BgProxy } from \"../Proxy/BgProxy\";\r\nimport { BgCommandConst } from \"../Command/BgCommand\";\r\nimport { goldState } from \"../Proxy/SocketProxy\";\r\nimport { getBgProxy, getSocketProxy } from \"../utils\";\r\nimport { ApplicationGlobal } from \"../Const/ApplicationGlobal\";\r\nimport { Egypt_SlotPanel } from \"../Component/Egypt_SlotPanel\";\r\nimport { AudioManager, SoundList } from \"../Managr/AudioManager\";\r\nimport TaskScheduler, { Task } from \"../../../../utils/TaskScheduler\";\r\nimport { AutoLaunchType } from \"../Repositories/BgRepository\";\r\nimport { ROLL_TIME } from \"../../../../utils/SlotSpeedConfig\";\r\nexport enum RollerMediatorConst {\r\n  /**初始化滑槽面板 */\r\n  INIT_ROLLER_PANEL = \"initRollerPanel\",\r\n  /**卸载滑槽游戏面板 */\r\n  UNINSTALL_ROLLER_PANEL = \"uninstallRollerPanel\",\r\n  /*更新状态游戏*/\r\n  REMOVE_THECHEST_LAYER = 'removeThechestLayer',\r\n  /**开始滑动 */\r\n  BEGIN_ROLL = \"beginRoll\",\r\n  /**结束滑动 */\r\n  END_ROLL = \"endRoll\",\r\n}\r\nexport default class RollerMediator extends BaseMediator {\r\n  public taskScheduler: TaskScheduler = new TaskScheduler()\r\n  public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n    super(mediatorName, viewComponent)\r\n  }\r\n  public sourceMap: Array<ISourceFile> = [\r\n    {\r\n      key: 'slotPanel',\r\n      path: PrefabDefine.SLOT_PANEL,\r\n      sourceType: Prefab,\r\n      source: null\r\n    }\r\n  ]\r\n  private stopRollHandle;\r\n  private stopTimeId;\r\n\r\n  protected init(): void {\r\n    //this.viewComponent.addChild(this.getSource(PrefabDefine.SLOT_PANEL))\r\n    this.wrapView = this.getSource(this.sourceMap[0].path)\r\n    // this.viewComponent.getChildByName(\"gameArea\").addChild(this.wrapView);\r\n    find(\"slotBg/gameArea\", ApplicationGlobal.mainPanel).addChild(this.wrapView)\r\n    this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n    this.listenerEvent();\r\n  }\r\n\r\n  protected listenerEvent() {\r\n\r\n  }\r\n\r\n  protected listNotificationConst: Array<IlistTypeHander<RollerMediator>> = [\r\n    {\r\n      name: RollerMediatorConst.INIT_ROLLER_PANEL,\r\n      handler(notification: INotification) {\r\n        this.init();\r\n        getBgProxy().setDisable(false)\r\n        window.setTimeout(() => {\r\n          // 可能有动画\r\n          this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n        }, 2500)\r\n      }\r\n    },\r\n    {\r\n      name: RollerMediatorConst.REMOVE_THECHEST_LAYER,\r\n      handler(notification: INotification) {\r\n        let { iconStay } = notification.getBody()\r\n        const rollerComp = (<Egypt_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"Egypt_RollerPanel\"));\r\n        rollerComp.togglesALLLayer(iconStay === 1)\r\n      }\r\n    },\r\n    {\r\n      name: RollerMediatorConst.BEGIN_ROLL,\r\n      handler(notification: INotification) {\r\n        const { stopIndex, targetList, dockIocn } = notification.getBody();\r\n        const rollerComp = (<Egypt_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"Egypt_RollerPanel\"));\r\n        rollerComp.startAllRoll(stopIndex, getBgProxy().isSpeed());\r\n        getBgProxy().setDisable(true)\r\n        this.taskScheduler.stopQueue(false)\r\n        //闪动图标\r\n        let i = 0\r\n        const flickerFn = () => {\r\n          targetList.forEach(item => {\r\n            rollerComp.iconFlicker('coord', item, true, () => {\r\n              i++\r\n              if (i === targetList.length) { //全部闪动完成\r\n                rollerComp.clearStatus()\r\n                setTimeout(() => {\r\n                  doneFinish()\r\n                  flashLine()\r\n                }, 500)\r\n              }\r\n            });\r\n          })\r\n        }\r\n        const flashLine = () => {\r\n          targetList.forEach((res, index) => {\r\n            const task = new Task((done) => {\r\n              rollerComp.iconFlicker('coord', targetList[index], false)\r\n              //闪烁2秒钟就结束\r\n              window.setTimeout(() => done(), 1000)\r\n            })\r\n            this.taskScheduler.joinqQueue(task, false)\r\n          })\r\n        }\r\n        const doneFinish = () => {\r\n          this.taskScheduler.joinqQueue(new Task((done) => {\r\n            this.sendNotification(CommandDefine.BG, { order: \"curr\", done }, BgMediatorConst.SHOW_DIALOG_WIN)\r\n          })).joinqQueue(new Task((doneTmp) => {\r\n            this.sendNotification(CommandDefine.BG, {\r\n              done: () => {\r\n                // console.log('doneFinish ===================================================== done');\r\n                rollerComp.iconDock('coord', dockIocn)\r\n                this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true })\r\n               window.setTimeout(()=>{\r\n                doneTmp()\r\n               },1000)\r\n                getBgProxy().setDisable(false)\r\n                this.autoLaunch()\r\n              }\r\n            }, BgCommandConst.GAME_TYPE_CHANGE);\r\n          }))\r\n        }\r\n        this.stopRollHandle = (isManualStop: boolean = false) => {\r\n          this.stopRollHandle = undefined;\r\n          this.stopTimeId = undefined;\r\n          rollerComp && rollerComp.stopAllRoll(isManualStop, () => {\r\n            this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD, { state: goldState.OLD_GOLD })\r\n            //更新游戏奖励\r\n            this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n            // // 开始轮流闪动图标\r\n            rollerComp.clearStatus()\r\n            if (!targetList.length) {\r\n              doneFinish()\r\n            } else {\r\n              flickerFn()\r\n            }\r\n          })\r\n        }\r\n        // 多少秒钟后开始停止转动\r\n        this.stopTimeId = window.setTimeout(this.stopRollHandle, ROLL_TIME)\r\n      }\r\n    },\r\n    {\r\n      name: RollerMediatorConst.END_ROLL,\r\n      handler(notification: INotification) {\r\n        this.stopTimeId && window.clearTimeout(this.stopTimeId)\r\n        this.stopRollHandle && this.stopRollHandle(true);\r\n      }\r\n    },\r\n    {\r\n      name: RollerMediatorConst.UNINSTALL_ROLLER_PANEL,\r\n      handler(notification: INotification) {\r\n        console.log(\"uninstallTheChuteGame\")\r\n        const rollerComp = (<Egypt_RollerPanel>this.wrapView.getChildByName(\"slotListPanel\").getComponent(\"Egypt_RollerPanel\"));\r\n        rollerComp.uninstall()\r\n      }\r\n    },\r\n  ]\r\n  private autoLaunch() {\r\n    const fbp = getBgProxy();\r\n    // if (fbp.getIsChangeGameRunning() === -1) {\r\n    // 没有跳转游戏才自动发\r\n    this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n    // }\r\n  }\r\n  protected mainPrefabSource = {\r\n    key: 'slotPanel',\r\n    path: PrefabDefine.SLOT_PANEL,\r\n    sourceType: Prefab,\r\n    source: null\r\n  }\r\n}\r\n"]}