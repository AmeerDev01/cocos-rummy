{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/base/BaseComponent.ts"],"names":["BaseComponent","Component","find","viewModelMap","copy","equalValue","constructor","root","renderQueue","key","renderHandlerMap","nodeMap","state","dispatch","forceListen","proxyProps","setState","bind","destroyCallBack","iniProperty","propertyNode","name","comp","getComponent","console","error","node","useState","render","keyArr","isLoop","_keyArr","Array","from","Set","length","forEach","renderItem","i","push","newState","isDeep","compos","oldState","hasOwnProperty","preValue","undefined","indexOf","newValue","Error","filter","item","pre","cur","propsProxy","self","proxy","Proxy","props","get","target","set","value","oldValue","useProps","e","onLoad","tiledNode","initState","bindUI","bindEvent","setProps","force","Object","assign","setEvent","events","getPropertyNode","parent","isPropsNode","warn","children","onDestroy","uuid","unMount"],"mappings":"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","sourcesContent":["import { Button, Component, find, instantiate, Label, log, Node, sys, view } from \"cc\";\r\n// import isEqual from \"fast-deep-equal\"\r\nimport { SoundPathDefine } from \"../hall/sourceDefine/soundDefine\";\r\nimport { viewModelMap } from \"./ViewModel\";\r\nimport { copy, equalValue } from \"../utils/tool\";\r\n// import { copy } from 'copy-anything'\r\nexport abstract class BaseComponent<IState, IProps, IEvent> extends Component {\r\n  constructor() {\r\n    super()\r\n    this.root = find(\"Canvas\")\r\n    this.setState = this.setState.bind(this)\r\n  }\r\n\r\n  protected root: Node\r\n  private renderQueue: Array<{\r\n    key: string,\r\n    renderHandlerMap: Array<(key: keyof IState | \"state\", value: { pre: any, cur: any }) => void>\r\n  }> = [{ key: \"*\", renderHandlerMap: [] }, { key: \"state\", renderHandlerMap: [] }]\r\n  private nodeMap: object = {}\r\n  protected state: IState\r\n  public abstract props: IProps\r\n  public abstract events: IEvent\r\n  /**在这里绑定节点事件 */\r\n  protected abstract bindEvent(): void\r\n  /**初始化state数据 */\r\n  protected abstract initState(props: IProps): IState\r\n  /**当传入的props发生变化，要执行的函数(key=_setDone表示一次setProps执行完毕且数据有变更的时候执行) */\r\n  protected abstract useProps(key: (keyof IProps) | '_setDone', value: { pre: any, cur: any }): void\r\n  /**绑定UI，界面的初始化工作，也可以在这里做一些useState等操作 */\r\n  protected abstract bindUI(): void\r\n  public dispatch: (action: any) => void\r\n  /**是否强制触发，不进行props数据对比 */\r\n  protected forceListen: boolean = false\r\n  private proxyProps: IProps\r\n  /**脚本需要实例化的节点或者节点挂载的组件，这里的key名，必须在被挂载的预制体中存在，否则会异常 */\r\n  protected abstract propertyNode: { [key: string]: Node | Component }\r\n  /**销毁之前的回调 */\r\n  protected destroyCallBack() { }\r\n  /**初始化需要用的节点变量 */\r\n  private iniProperty() {\r\n    for (let key in this.propertyNode) {\r\n      if (this.nodeMap[key]) {\r\n        // 打包web桌面版同时release版本时，引擎会替换 Node 这些函数名，Node替换为i,非node替换为了e\r\n        // 节点\r\n        if (this.propertyNode[key].constructor.name === \"Node\" || this.propertyNode[key].constructor.name === \"i\") {\r\n          this.propertyNode[key] = this.nodeMap[key]\r\n        } else {\r\n          const comp = this.nodeMap[key].getComponent(this.propertyNode[key].constructor)\r\n          if (comp) {\r\n            this.propertyNode[key] = comp\r\n          } else {\r\n            console.error(`${this.node.name}的节点${key}未找到对对应的组件${this.propertyNode[key].constructor.name}`)\r\n          }\r\n        }\r\n      } else {\r\n        console.error(`${this.node.name}未找到脚本需要的成员节点${key}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 订阅值变更的渲染\r\n   * @param render 订阅变化的回调函数\r\n   * @param keyArr 需要订阅的键\r\n   * @param isLoop 是否循环，当keyArr=[]的时候，此值有效，若=true，state有几个值变化，rander函数就会触发几次，并给予更新前后相应的值，若=false，无论多少个state值有多少个值变化，只会在完成后调用一次，并给予更新前后的state，且key=state\r\n   */\r\n  protected useState(render: (key: keyof IState | \"state\", value: { pre: any, cur: any }) => void, keyArr: Array<keyof IState> = [], isLoop: boolean = true) {\r\n    const _keyArr = Array.from(new Set(keyArr))\r\n    if (_keyArr.length) {\r\n      _keyArr.forEach(key => {\r\n        const renderItem = this.renderQueue.find(i => i.key === key)\r\n        renderItem ? renderItem.renderHandlerMap.push(render) : this.renderQueue.push({ key: key as string, renderHandlerMap: [render] })\r\n      })\r\n    } else {\r\n      this.renderQueue.find(i => i.key === (isLoop ? \"*\" : \"state\")).renderHandlerMap.push(render)\r\n    }\r\n    // console.log(this.renderQueue)\r\n  }\r\n  /**\r\n   * 配置state\r\n   * @param newState 新值\r\n   * @param isDeep 是否深度对比（属性有数组才用）\r\n   * @returns \r\n   */\r\n  protected setState(newState: Partial<IState>, isDeep: boolean = false): void {\r\n    if (!this.state) return;\r\n    const compos: Array<{ key: string, preValue: any, newValue: any }> = []\r\n    const oldState = copy(this.state || {})\r\n    for (const key in newState) {\r\n      if (this.state.hasOwnProperty(key)) {\r\n        let preValue = this.state[key]\r\n        if (this.state[key] !== undefined && this.state[key] !== null) {\r\n          preValue = [\"object\", \"function\"].indexOf(typeof (this.state[key])) !== -1 ? (copy(this.state[key] as any)) : this.state[key]\r\n        }\r\n        if (!equalValue(preValue, newState[key], isDeep)) {\r\n          this.state[key] = newState[key]\r\n          compos.push({\r\n            key, preValue, newValue: newState[key]\r\n          })\r\n        }\r\n      } else {\r\n        throw new Error(`Invalid key: ${key}`)\r\n      }\r\n    }\r\n\r\n    compos.forEach(({ key, preValue, newValue }) => {\r\n      this.renderQueue.filter(item => (item.key === key || item.key === \"*\")).forEach(item => item.renderHandlerMap.forEach(render => render(key as keyof IState, { pre: preValue, cur: newValue })))\r\n    })\r\n    compos.length && this.renderQueue.filter(item => (item.key === \"state\")).forEach(item => item.renderHandlerMap.forEach(render => render(\"state\", { pre: oldState, cur: this.state })))\r\n  }\r\n\r\n  private propsProxy() {\r\n    const self = this\r\n    let proxy = new Proxy(this.props as object, {\r\n      get(target, key) {\r\n        return target[key]\r\n      },\r\n      set(target, key, value) {\r\n        // if (!this.forceListen) return true\r\n        // const oldValue = [\"object\", \"function\"].indexOf(typeof (target[key])) !== -1 ? instantiate(target[key]) : target[key]\r\n        const oldValue = target[key]\r\n        if (!equalValue(oldValue, value) || self.forceListen) {\r\n          target[key] = value\r\n          try {\r\n            self.useProps(key as keyof IProps, { pre: oldValue, cur: value })\r\n          } catch (e) {\r\n            console.error(e)\r\n          }\r\n        }\r\n        return true\r\n      }\r\n    })\r\n    this.proxyProps = proxy as IProps\r\n  }\r\n\r\n  protected onLoad(): void {\r\n    this.tiledNode()\r\n    this.iniProperty()\r\n    this.state = this.initState(this.props)\r\n    this.bindUI()\r\n    this.bindEvent()\r\n    this.propsProxy()\r\n    // this.setState({ ...this.state })\r\n  }\r\n\r\n\r\n  /**\r\n   * 初始化props，此函数在节点被挂载后调用才会触发订阅事件\r\n   * @param props 新的props\r\n   * @param force 是否强制触发更新（新旧数据不一致也要触发useProps函数）\r\n   * @param isDeep 是否深度对比（属性有数组才用）\r\n   */\r\n  public setProps(props: Partial<IProps>, force: boolean = false, isDeep: boolean = false) {\r\n    this.forceListen = force\r\n    if (this.proxyProps) {\r\n      const oldValue = copy(this.props as any)\r\n      for (let key in props) {\r\n        if (this.proxyProps.hasOwnProperty(key)) {\r\n          this.proxyProps[key] = props[key]\r\n        }\r\n      }\r\n      (!equalValue(oldValue, this.props, isDeep)) && this.useProps('_setDone', { pre: oldValue, cur: this.props })\r\n    } else {\r\n      this.props = Object.assign({}, this.props, props)\r\n    }\r\n    this.forceListen && (this.forceListen = false)\r\n  }\r\n\r\n  /**\r\n   * 配置事件列表\r\n   * @param events 事件列表\r\n   */\r\n  public setEvent(events: Partial<IEvent>) {\r\n    if (!this.events) return;\r\n    for (let key in events) {\r\n      if (this.events.hasOwnProperty(key)) {\r\n        this.events[key] = events[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**获取挂载的节点列表 */\r\n  public getPropertyNode() {\r\n    return this.propertyNode\r\n  }\r\n\r\n  /**平铺节点 */\r\n  private tiledNode(parent: Node = this.node) {\r\n    let isPropsNode = parent.name.indexOf(\"props_\") !== -1\r\n    this.nodeMap[parent.name] && isPropsNode && console.warn(`${this.node.name}在初始化nodeMap时发现同名节点${parent.name}，将覆盖为最后一个`)\r\n    isPropsNode && (this.nodeMap[parent.name] = parent)\r\n    parent.children.length && parent.children.forEach(node => this.tiledNode(node))\r\n  }\r\n\r\n  protected onDestroy(): void {\r\n    this.destroyCallBack()\r\n    if (viewModelMap[this.node.uuid]) {\r\n      viewModelMap[this.node.uuid].unMount()\r\n    }\r\n  }\r\n}"]}