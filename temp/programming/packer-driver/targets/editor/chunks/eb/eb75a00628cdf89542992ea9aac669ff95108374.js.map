{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenix/Slot/Proxy/BgProxy.ts"],"names":["BgProxy","BaseProxy","AutoLaunchType","BgRepository","StopMode","BgMediatorConst","RollerType","constructor","proxyName","data","freeGamePositionId","repository","setIsChangeNextGameType","gameTypePre","gameTypeNew","isChangeGame","lastGame","nextGame","getFreeGamePositionId","setFreeGamePositionId","num","getIsChangeGameRunning","getNextGame","getLastGame","getCurrentGame","currentGame","setCurrentGame","game","getGameCount","numberOfTimesRemaining","setGameCount","getGameTotalNumber","totalNumberOfTimes","setGameTotalNumber","setDisable","disable","isDisable","sendNotification","UPDATE_GAME_STATUS","getDisable","setAutoLaunchType","type","autoLaunchType","UPDATE_AUTO_LAUNCH","DISABLE","reaminAutoLaunchTimes","isUNLIMT","T10","T20","T50","T100","T500","getAutoLaunchType","isSpeed","UNLIMT_FAST","getStopMode","QUEUE_STOP","stopMode","setStopMode","getTotal","total","subtractAutoLaunchTimes","UNLIMT","getAutoLaunchNum","checkAutoLaunch"],"mappings":"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","sourcesContent":["import BaseProxy from \"./BaseProxy\"\r\nimport {AutoLaunchType, BgRepository, StopMode} from \"../Repositories/BgRepository\";\r\nimport {BgMediatorConst} from \"../Mediator/BgMediator\";\r\nimport {SubGameType} from \"./SocketProxy\";\r\nimport { sys } from \"cc\";\r\n\r\nexport enum RollerType {\r\n    /**普通的5列小滑槽 */\r\n    NORMAL = \"iconRollerQueue\",\r\n    /**3列滑槽，中间为大滑槽 */\r\n    LARGE = \"largeIconRollerQueue\"\r\n}\r\n\r\nexport class BgProxy extends BaseProxy<BgRepository> {\r\n    public freeGamePositionId:number=1\r\n    public constructor(proxyName: string = null, data: any = null) {\r\n        super(proxyName, data);\r\n        this.repository = new BgRepository()\r\n    }\r\n    /**配置将要运行的子游戏 */\r\n    public setIsChangeNextGameType(gameTypePre: SubGameType, gameTypeNew: SubGameType) {\r\n        // console.log(gameTypePre !== gameTypeNew,gameTypePre , gameTypeNew)\r\n        this.repository.isChangeGame = (gameTypePre !== gameTypeNew)\r\n        this.repository.lastGame = gameTypePre\r\n        this.repository.nextGame = gameTypeNew\r\n    }\r\n    public getFreeGamePositionId(){\r\n        return this.freeGamePositionId\r\n    }\r\n    public setFreeGamePositionId(num:number){\r\n        this.freeGamePositionId=num\r\n    }\r\n    /**从缓存数据重获取是否切换游戏模块游戏模块,若返回-1 则不切换，若切换直接返回下一个游戏代码 */\r\n    public getIsChangeGameRunning() {\r\n        if (this.repository.isChangeGame) {\r\n            return this.repository.nextGame\r\n        }\r\n        return -1\r\n    }\r\n\r\n    /**获取将要正在进行的游戏 */\r\n    public getNextGame() {\r\n        return this.repository.nextGame\r\n    }\r\n\r\n    /**获取上一个游戏 */\r\n    public getLastGame() {\r\n        return this.repository.lastGame\r\n    }\r\n\r\n    public getCurrentGame(){\r\n        return this.repository.currentGame;\r\n    }\r\n\r\n    public setCurrentGame(game: SubGameType){\r\n        this.repository.currentGame = game;\r\n    }\r\n\r\n    /**小游戏剩余次数 */\r\n    public getGameCount(){\r\n        return this.repository.numberOfTimesRemaining\r\n    }\r\n    public setGameCount(num){\r\n        this.repository.numberOfTimesRemaining=num\r\n    }\r\n    /**小游戏总次数 */\r\n    public getGameTotalNumber(){\r\n        return this.repository.totalNumberOfTimes\r\n    }\r\n    public setGameTotalNumber(num){\r\n         this.repository.totalNumberOfTimes=num\r\n    }\r\n    /**设置自动下注的类型 */\r\n    public setDisable(disable: boolean) {\r\n        this.repository.isDisable = disable\r\n        this.sendNotification(BgMediatorConst.UPDATE_GAME_STATUS)\r\n    }\r\n\r\n    /**获取禁用状态 */\r\n    public getDisable() {\r\n        return this.repository.isDisable\r\n    }\r\n\r\n    /**设置自动下注的类型 */\r\n    public setAutoLaunchType(type: AutoLaunchType) {\r\n        this.repository.autoLaunchType = type\r\n        this.sendNotification(BgMediatorConst.UPDATE_AUTO_LAUNCH)\r\n        if (type === AutoLaunchType.DISABLE) {\r\n            this.repository.reaminAutoLaunchTimes = 0\r\n        } else if (!this.isUNLIMT()) {\r\n            switch (type) {\r\n                case AutoLaunchType.T10:\r\n                    this.repository.reaminAutoLaunchTimes = 10;\r\n                    break;\r\n                case AutoLaunchType.T20:\r\n                    this.repository.reaminAutoLaunchTimes = 20;\r\n                    break;\r\n                case AutoLaunchType.T50:\r\n                    this.repository.reaminAutoLaunchTimes = 50;\r\n                    break;\r\n                case AutoLaunchType.T100:\r\n                    this.repository.reaminAutoLaunchTimes = 100;\r\n                    break;\r\n                case AutoLaunchType.T500:\r\n                    this.repository.reaminAutoLaunchTimes = 500;\r\n                    break;\r\n            }\r\n        } else if (this.isUNLIMT()) {\r\n            //无限\r\n        }\r\n    }\r\n\r\n    /**获取正在运行的游戏模块 */\r\n    public getAutoLaunchType() {\r\n        return this.repository.autoLaunchType\r\n    }\r\n    public isSpeed(){\r\n        return this.getAutoLaunchType() === AutoLaunchType.UNLIMT_FAST || this.getStopMode() === StopMode.QUEUE_STOP;\r\n    }\r\n    /**获得停止模式 */\r\n    public getStopMode(){\r\n        return this.repository.stopMode;\r\n    }\r\n    public setStopMode(stopMode: StopMode){\r\n        this.repository.stopMode = stopMode;\r\n    }\r\n    public getTotal(){\r\n        let total\r\n        switch (this.repository.autoLaunchType) {\r\n            case AutoLaunchType.T10:\r\n                total = 10;\r\n                break;\r\n            case AutoLaunchType.T20:\r\n                total = 20;\r\n                break;\r\n            case AutoLaunchType.T50:\r\n                total = 50;\r\n                break;\r\n            case AutoLaunchType.T100:\r\n                total = 100;\r\n                break;\r\n            case AutoLaunchType.T500:\r\n                total = 500;\r\n                break;\r\n        }\r\n        return total\r\n    }\r\n    /**减去自动执行次数 */\r\n    public subtractAutoLaunchTimes() {\r\n        if (!this.isUNLIMT()) {\r\n            // 无限次数的时候不关注剩余次数\r\n            if (this.repository.reaminAutoLaunchTimes > 0) {\r\n                this.repository.reaminAutoLaunchTimes--\r\n            }\r\n            if (this.repository.reaminAutoLaunchTimes <= 0) {\r\n                this.repository.reaminAutoLaunchTimes = 0\r\n                this.repository.autoLaunchType = AutoLaunchType.DISABLE\r\n            }\r\n        }\r\n        this.sendNotification(BgMediatorConst.UPDATE_AUTO_LAUNCH)\r\n    }\r\n    public isUNLIMT(){\r\n\t\treturn this.repository.autoLaunchType == AutoLaunchType.UNLIMT || this.repository.autoLaunchType == AutoLaunchType.UNLIMT_FAST\r\n\t}\r\n\tpublic getAutoLaunchNum(){\r\n\t\treturn this.getTotal() - this.repository.reaminAutoLaunchTimes\r\n\t}\r\n    /**检查自动启动 */\r\n    public checkAutoLaunch() {\r\n        // console.log('reaminAutoLaunchTimes', this.repository.reaminAutoLaunchTimes)\r\n        if (this.repository.autoLaunchType === AutoLaunchType.DISABLE) {\r\n            return false\r\n        } else {\r\n            if (this.isUNLIMT()) {\r\n                return true\r\n            } else {\r\n                if (this.repository.reaminAutoLaunchTimes <= 0) {\r\n                    this.repository.reaminAutoLaunchTimes = 0\r\n                    this.repository.autoLaunchType = AutoLaunchType.DISABLE\r\n                }\r\n                return this.repository.reaminAutoLaunchTimes > 0\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}