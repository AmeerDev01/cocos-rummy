{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fruit777/store/actions/roller.ts"],"names":["reduxAct","default","IconEffectType","initState","rollerMap","roundAllEnd","iconEffectData","iconEffect","NONE","coord","ActionTypes","initRollAction","createAction","FRUIT777_INIT_ROLL","beginRollAction","FRUIT777_BEGIN_ROLL","rollerIndex","speed","direction","setStopRollAction","FRUIT777_SET_STOP_ROLL","stopIconIndex","endRollingAction","FRUIT777_END_ROLLING","rolling","setIconEffect","FRUIT777_SET_FLICKER","flickerCoord","setRollRoundEnd","FRUIT777_SET_ROUNT_END","setRollSpeed","FRUIT777_SET_ROLL_SPEED","speedMultiple"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;AACeC,MAAAA,c,iBAAAA,c;;;;;;;2BAcXC,S,GAA2B;AACtCC,QAAAA,SAAS,EAAE,EAD2B;AAEtCC,QAAAA,WAAW,EAAE,IAFyB;AAGtCC,QAAAA,cAAc,EAAE;AACdC,UAAAA,UAAU,EAAE;AAAA;AAAA,gDAAeC,IADb;AAEdC,UAAAA,KAAK,EAAE;AAFO;AAHsB,O;AAQxC;;;6BACYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAWZ;;;gCAWaC,c,GAAiB;AAAA;AAAA,gCAASC,YAAT,CAAsBF,WAAW,CAACG,kBAAlC,EAC3BT,SAAD,IAA4E;AAC1E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAH2B,C;;iCAMjBU,e,GAAkB;AAAA;AAAA,gCAASF,YAAT,CAAsBF,WAAW,CAACK,mBAAlC,EAC7B,CAACC,WAAD,EAAsBC,KAAtB,EAAsCC,SAAtC,KAAoH;AAClH,eAAO;AAAEF,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBC,UAAAA;AAAtB,SAAP;AACD,OAH4B,C;;mCAKlBC,iB,GAAoB;AAAA;AAAA,gCAASP,YAAT,CAAsBF,WAAW,CAACU,sBAAlC,EAC/B,CAACJ,WAAD,EAAsBK,aAAtB,KAAmG;AACjG,eAAO;AAAEL,UAAAA,WAAF;AAAeK,UAAAA;AAAf,SAAP;AACD,OAH8B,C;;kCAKpBC,gB,GAAmB;AAAA;AAAA,gCAASV,YAAT,CAAsBF,WAAW,CAACa,oBAAlC,EAC9B,CAACP,WAAD,EAAsBQ,OAAtB,KAA4F;AAC1F,eAAO;AAAER,UAAAA,WAAF;AAAeQ,UAAAA;AAAf,SAAP;AACD,OAH6B,C;;+BAKnBC,a,GAAgB;AAAA;AAAA,gCAASb,YAAT,CAAsBF,WAAW,CAACgB,oBAAlC,EAC3B,CAACnB,UAAD,EAA6BoB,YAA7B,KAA2G;AACzG,eAAO;AAAEpB,UAAAA,UAAF;AAAcoB,UAAAA;AAAd,SAAP;AACD,OAH0B,C;;iCAKhBC,e,GAAkB;AAAA;AAAA,gCAAShB,YAAT,CAAsBF,WAAW,CAACmB,sBAAlC,EAC5BxB,WAAD,IAA6E;AAC3E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAH4B,C;;8BAKlByB,Y,GAAe;AAAA;AAAA,gCAASlB,YAAT,CAAsBF,WAAW,CAACqB,uBAAlC,EAC1B,CAACC,aAAD,EAAwBhB,WAAxB,KAAqG;AACnG,eAAO;AAAEgB,UAAAA,aAAF;AAAiBhB,UAAAA;AAAjB,SAAP;AACD,OAHyB,C","sourcesContent":["import { default as reduxAct } from 'redux-act'\r\nimport { DirectionType, IconEffectType, RollerType } from '../../type';\r\nimport config from '../../config';\r\n\r\n\r\nexport type InitStateType = {\r\n  rollerMap: RollerType[],\r\n  /**本轮是否全部转动结束 */\r\n  roundAllEnd: boolean,\r\n  iconEffectData: {\r\n    iconEffect: IconEffectType,\r\n    /**示例数据：[[0,1],[1,2],[2,1]] */\r\n    coord: number[][]\r\n  }\r\n}\r\nexport const initState: InitStateType = {\r\n  rollerMap: [],\r\n  roundAllEnd: true,\r\n  iconEffectData: {\r\n    iconEffect: IconEffectType.NONE,\r\n    coord: []\r\n  }\r\n}\r\n/**必须大写，不然redux-act这货要自动加序列号 */\r\nexport enum ActionTypes {\r\n  FRUIT777_INIT_ROLL = 'FRUIT777_INIT_ROLL',\r\n  FRUIT777_BEGIN_ROLL = 'FRUIT777_BEGIN_ROLL',\r\n  FRUIT777_SET_STOP_ROLL = 'FRUIT777_SET_STOP_ROLL',\r\n  FRUIT777_END_ROLLING = 'FRUIT777_END_ROLL',\r\n  FRUIT777_SET_FLICKER = 'FRUIT777_SET_FLICKER',\r\n  FRUIT777_SET_ROUNT_END = 'FRUIT777_SET_ROUNT_END',\r\n  FRUIT777_SET_ROLL_SPEED = 'FRUIT777_SET_ROLL_SPEED',\r\n  \r\n}\r\n\r\n/**定义action的payLoad类型 */\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.FRUIT777_INIT_ROLL ? { rollerMap: RollerType[] } :\r\n  A extends ActionTypes.FRUIT777_BEGIN_ROLL ? { rollerIndex: number, speed?: number, direction?: DirectionType } :\r\n  A extends ActionTypes.FRUIT777_SET_STOP_ROLL ? { rollerIndex: number, stopIconIndex: number } :\r\n  A extends ActionTypes.FRUIT777_END_ROLLING ? { rollerIndex: number, rolling: boolean } :\r\n  A extends ActionTypes.FRUIT777_SET_FLICKER ? { iconEffect: IconEffectType, flickerCoord: number[][] } :\r\n  A extends ActionTypes.FRUIT777_SET_ROUNT_END ? { roundAllEnd: boolean } :\r\n  A extends ActionTypes.FRUIT777_SET_ROLL_SPEED ? { speedMultiple: number, rollerIndex?: number } :\r\n  never;\r\n\r\nexport const initRollAction = reduxAct.createAction(ActionTypes.FRUIT777_INIT_ROLL,\r\n  (rollerMap: RollerType[]): ActionPayLoad<ActionTypes.FRUIT777_INIT_ROLL> => {\r\n    return { rollerMap }\r\n  })\r\n\r\n\r\nexport const beginRollAction = reduxAct.createAction(ActionTypes.FRUIT777_BEGIN_ROLL,\r\n  (rollerIndex: number, speed?: number, direction?: DirectionType): ActionPayLoad<ActionTypes.FRUIT777_BEGIN_ROLL> => {\r\n    return { rollerIndex, speed, direction }\r\n  })\r\n\r\nexport const setStopRollAction = reduxAct.createAction(ActionTypes.FRUIT777_SET_STOP_ROLL,\r\n  (rollerIndex: number, stopIconIndex: number): ActionPayLoad<ActionTypes.FRUIT777_SET_STOP_ROLL> => {\r\n    return { rollerIndex, stopIconIndex }\r\n  })\r\n\r\nexport const endRollingAction = reduxAct.createAction(ActionTypes.FRUIT777_END_ROLLING,\r\n  (rollerIndex: number, rolling: boolean): ActionPayLoad<ActionTypes.FRUIT777_END_ROLLING> => {\r\n    return { rollerIndex, rolling }\r\n  })\r\n\r\nexport const setIconEffect = reduxAct.createAction(ActionTypes.FRUIT777_SET_FLICKER,\r\n  (iconEffect: IconEffectType, flickerCoord: number[][]): ActionPayLoad<ActionTypes.FRUIT777_SET_FLICKER> => {\r\n    return { iconEffect, flickerCoord }\r\n  })\r\n\r\nexport const setRollRoundEnd = reduxAct.createAction(ActionTypes.FRUIT777_SET_ROUNT_END,\r\n  (roundAllEnd: boolean): ActionPayLoad<ActionTypes.FRUIT777_SET_ROUNT_END> => {\r\n    return { roundAllEnd }\r\n  })\r\n\r\nexport const setRollSpeed = reduxAct.createAction(ActionTypes.FRUIT777_SET_ROLL_SPEED,\r\n  (speedMultiple: number, rollerIndex?: number): ActionPayLoad<ActionTypes.FRUIT777_SET_ROLL_SPEED> => {\r\n    return { speedMultiple, rollerIndex }\r\n  })\r\n"]}