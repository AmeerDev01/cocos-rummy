{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/store/actions/pokerDetail.ts"],"names":["reduxAct","default","initState","bankerPoker","newBankerPoker","newBlackPoker","blackPoker","redPoker","newRedPoker","plumPoker","newPlumPoker","newDiamondPoker","diamondPoker","winArea","jackpotCard","farmhouse","blockNum","heartNum","sakuraNum","spadeNum","allCardType","ActionTypes","setBankerPokerAction","createAction","BANDAR_BANKER_POKER","setBlackPokerAction","BANDAR_BLACK_POKER","setRedPokerAction","BANDAR_RED_POKER","setPlumPokerAction","BANDAR_PLUM_POKER","setDiamondPokerAction","BANDAR_DIAMOND_POKER","setWinAreaAction","BANDAR_WIN_AREA","setJackpotWinAction","BANDAR_JACKPOT_WIN_CARD","setBlockNumAction","BANDAR_BLOCK_NUM","setHeartNumAction","BANDAR_HEART_NUM","setSakuraNumAction","BANDAR_SAKURA_NUM","setSpadeNumAction","BANDAR_SPADE_NUM","setFarmhouseNumAction","BANDAR_FARMHOUSE_NUM","setAllCardTypeAction","BANDAR_ALL_CARD_TYPE"],"mappings":"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","sourcesContent":["import { default as reduxAct } from \"redux-act\";\r\n\r\nexport interface Poker {\r\n  num1:number,\r\n  num2:number,\r\n  num3:number,\r\n  num4:number,\r\n}\r\n\r\nexport interface CardNum {\r\n  num1: number,\r\n  num2: number,\r\n  win?: number,\r\n  \r\n}\r\n\r\n\r\nexport type InitStateType = {\r\n  /** 庄家牌信息 */\r\n  bankerPoker: number[];\r\n  newBankerPoker:number[];\r\n  /** 黑桃区域牌信息*/\r\n  blackPoker: number[];\r\n  newBlackPoker: number[];\r\n  /** 红桃区域牌信息*/\r\n  redPoker: number[];\r\n  newRedPoker: number[];\r\n  /** 梅花区域牌信息*/\r\n  plumPoker: number[];\r\n  newPlumPoker: number[];\r\n  /** 方块区域牌信息*/\r\n  diamondPoker: number[];\r\n  newDiamondPoker: number[];\r\n  /**赢的区域 */\r\n  winArea: number[];\r\n  /** jackpot赢的最多的牌型 */\r\n  jackpotCard:number[];\r\n  // 结算阶段进入房间时，展示的牌点数 及类型\r\n  farmhouse:CardNum,\r\n  blockNum: CardNum,\r\n  heartNum: CardNum,\r\n  sakuraNum: CardNum,\r\n  spadeNum: CardNum,\r\n  allCardType:number[]\r\n};\r\n\r\nexport const initState: InitStateType = {\r\n  bankerPoker: null,\r\n  newBankerPoker:null,\r\n  newBlackPoker:null,\r\n  blackPoker: null,\r\n  redPoker: null,\r\n  newRedPoker:null,\r\n  plumPoker: null,\r\n  newPlumPoker:null,\r\n  newDiamondPoker:null,\r\n  diamondPoker: null,\r\n  winArea: null,\r\n  jackpotCard: null,\r\n  farmhouse:null,\r\n  blockNum: null,\r\n  heartNum: null,\r\n  sakuraNum: null,\r\n  spadeNum: null,\r\n  allCardType:null,\r\n};\r\n\r\n/**必须大写，不然redux-act要自动加序列号 */\r\n\r\nexport enum ActionTypes {\r\n  BANDAR_BANKER_POKER = \"BANDAR_BANKER_POKER\",\r\n  BANDAR_BLACK_POKER = \"BANDAR_BLACK_POKER\",\r\n  BANDAR_RED_POKER = \"BANDAR_RED_POKER\",\r\n  BANDAR_PLUM_POKER = \"BANDAR_PLUM_POKER\",\r\n  BANDAR_DIAMOND_POKER = \"BANDAR_DIAMOND_POKER\",\r\n  BANDAR_WIN_AREA = \"BANDAR_WIN_AREA\",\r\n  BANDAR_JACKPOT_WIN_CARD = \"BANDAR_JACKPOT_WIN_CARD\",\r\n  BANDAR_FARMHOUSE_NUM = \"BANDAR_FARMHOUSE_NUM\",\r\n  BANDAR_BLOCK_NUM = \"BANDAR_BLOCK_NUM\",\r\n  BANDAR_HEART_NUM = \"BANDAR_HEART_NUM\",\r\n  BANDAR_SAKURA_NUM = \"BANDAR_SAKURA_NUM\",\r\n  BANDAR_SPADE_NUM = \"BANDAR_SPADE_NUM\",\r\n  BANDAR_ALL_CARD_TYPE = \"BANDAR_ALL_CARD_TYPE\",\r\n}\r\n\r\n/**定义action的payLoad类型 */\r\n\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\n  A extends ActionTypes.BANDAR_BANKER_POKER\r\n    ? { bankerPoker: number[] }\r\n    : A extends ActionTypes.BANDAR_BLACK_POKER\r\n    ? { blackPoker: number[] }\r\n    : A extends ActionTypes.BANDAR_RED_POKER\r\n    ? { redPoker: number[] }\r\n    : A extends ActionTypes.BANDAR_PLUM_POKER\r\n    ? { plumPoker: number[] }\r\n    : A extends ActionTypes.BANDAR_DIAMOND_POKER\r\n    ? { diamondPoker: number[] }\r\n    : A extends ActionTypes.BANDAR_WIN_AREA\r\n    ? { winArea: number[] }\r\n    : A extends ActionTypes.BANDAR_JACKPOT_WIN_CARD\r\n    ? { jackpotCard: number[] }\r\n    : A extends ActionTypes.BANDAR_FARMHOUSE_NUM\r\n    ? { farmhouse: CardNum }\r\n    : A extends ActionTypes.BANDAR_BLOCK_NUM\r\n    ? { blockNum: CardNum }\r\n    : A extends ActionTypes.BANDAR_HEART_NUM\r\n    ? { heartNum: CardNum }\r\n    : A extends ActionTypes.BANDAR_SAKURA_NUM\r\n    ? { sakuraNum: CardNum}\r\n    : A extends ActionTypes.BANDAR_SPADE_NUM\r\n    ? {  spadeNum: CardNum, }\r\n    : A extends ActionTypes.BANDAR_ALL_CARD_TYPE\r\n    ? { allCardType:number[] }\r\n    : never;\r\n\r\n\r\n\r\n/**更新庄家牌信息*/\r\nexport const setBankerPokerAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_BANKER_POKER,\r\n  (bankerPoker: number[]): ActionPayLoad<ActionTypes.BANDAR_BANKER_POKER> => {\r\n    return { bankerPoker };\r\n  }\r\n);\r\n/**更新黑桃牌信息*/\r\nexport const setBlackPokerAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_BLACK_POKER,\r\n  (blackPoker: number[]): ActionPayLoad<ActionTypes.BANDAR_BLACK_POKER> => {\r\n    return { blackPoker };\r\n  }\r\n);\r\n/**更新红桃牌信息*/\r\nexport const setRedPokerAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_RED_POKER,\r\n  (redPoker: number[]): ActionPayLoad<ActionTypes.BANDAR_RED_POKER> => {\r\n    return { redPoker };\r\n  }\r\n);\r\n/**更新梅花牌信息*/\r\nexport const setPlumPokerAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_PLUM_POKER,\r\n  (plumPoker: number[]): ActionPayLoad<ActionTypes.BANDAR_PLUM_POKER> => {\r\n    return { plumPoker };\r\n  }\r\n);\r\n/**更新方块牌信息*/\r\nexport const setDiamondPokerAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_DIAMOND_POKER,\r\n  (diamondPoker: number[]): ActionPayLoad<ActionTypes.BANDAR_DIAMOND_POKER> => {\r\n    return { diamondPoker };\r\n  }\r\n);\r\n/**更新赢的区域*/\r\nexport const setWinAreaAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_WIN_AREA,\r\n  (winArea: number[]): ActionPayLoad<ActionTypes.BANDAR_WIN_AREA> => {\r\n    return { winArea };\r\n  }\r\n);\r\n/**更新中奖框的牌*/\r\nexport const setJackpotWinAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_JACKPOT_WIN_CARD,\r\n  (jackpotCard:number[]): ActionPayLoad<ActionTypes.BANDAR_JACKPOT_WIN_CARD> => {\r\n    return { jackpotCard };\r\n  }\r\n);\r\n/**二阶段进入游戏 更新方块牌信息*/\r\nexport const setBlockNumAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_BLOCK_NUM,\r\n  (blockNum: CardNum): ActionPayLoad<ActionTypes.BANDAR_BLOCK_NUM> => {\r\n    return { blockNum };\r\n  }\r\n);\r\n/**二阶段进入游戏 更新红桃牌信息*/\r\nexport const setHeartNumAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_HEART_NUM,\r\n  (heartNum: CardNum): ActionPayLoad<ActionTypes.BANDAR_HEART_NUM> => {\r\n    return { heartNum };\r\n  }\r\n);\r\n/**二阶段进入游戏 更新梅花牌信息*/\r\nexport const setSakuraNumAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_SAKURA_NUM,\r\n  (sakuraNum: CardNum): ActionPayLoad<ActionTypes.BANDAR_SAKURA_NUM> => {\r\n    return { sakuraNum };\r\n  }\r\n);\r\n/**二阶段进入游戏 更新黑桃牌信息*/\r\nexport const setSpadeNumAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_SPADE_NUM,\r\n  (spadeNum: CardNum): ActionPayLoad<ActionTypes.BANDAR_SPADE_NUM> => {\r\n    return { spadeNum };\r\n  }\r\n);\r\n/**二阶段进入游戏 更新庄家牌信息*/\r\nexport const setFarmhouseNumAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_FARMHOUSE_NUM,\r\n  (farmhouse: CardNum): ActionPayLoad<ActionTypes.BANDAR_FARMHOUSE_NUM> => {\r\n    return { farmhouse };\r\n  }\r\n);\r\n/** 更新所有特殊牌型 QIuQiu twins*/\r\nexport const setAllCardTypeAction = reduxAct.createAction(\r\n  ActionTypes.BANDAR_ALL_CARD_TYPE,\r\n  (allCardType: number[]): ActionPayLoad<ActionTypes.BANDAR_ALL_CARD_TYPE> => {\r\n    return { allCardType };\r\n  }\r\n);\r\n\r\n"]}