{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/phoenix/Slot/Component/phoenix_DynamicNumber.ts"],"names":["_decorator","Font","Label","phoenix_BaseComponent","ccclass","property","phoenix_DynamicNumber","currNumber","fromNumber","time","cb","timer","targetNumber","start","window","setTimeout","update","deltaTime","bindEvent","onLoad","slef","labelObj","getComponent","Object","defineProperty","get","label","node","getChildByName","string","set","newValue","value","startEffect","bindUI","setFont","fontCode","fontSize","font","resetNumber","setOption","unitNum","toFixed","formatAmountWithCommas","dynamicNum","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import {_decorator, Font, Label} from 'cc';\r\nimport phoenix_BaseComponent from './phoenix_BaseComponent';\r\n\r\nconst {ccclass, property} = _decorator;\r\n\r\n@ccclass('phoenix_DynamicNumber')\r\nexport class phoenix_DynamicNumber extends phoenix_BaseComponent {\r\n    @property(Font)\r\n    font1: Font = null\r\n\r\n    @property(Font)\r\n    font2: Font = null\r\n\r\n    private currNumber = 0\r\n    private fromNumber: number = 0\r\n    private time: number = 1000\r\n    private cb: () => void\r\n    private timer: number\r\n    private targetNumber: number = 0\r\n\r\n    start() {\r\n\r\n        window.setTimeout(() => {\r\n\r\n        }, 10)\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    protected bindEvent(): void {\r\n\r\n    }\r\n\r\n    onLoad(): void {\r\n        const slef = this\r\n        let labelObj = this.getComponent(Label)\r\n        Object.defineProperty(labelObj, \"string\", {\r\n            get: function () {\r\n                const label = slef.node.getChildByName(\"number\").getComponent(Label)\r\n                // return self.currNumber\r\n                return label.string\r\n            },\r\n            set: function (newValue) {\r\n                if (newValue) {\r\n                    this.value = newValue\r\n                    // const label = this.node.getChildByName(\"number\").getComponent(Label)\r\n                    // label.string = newValue\r\n                    slef.startEffect(+newValue)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    protected bindUI(): void {\r\n\r\n    }\r\n\r\n    public setFont(fontCode: 'font1' | 'font2', fontSize: number) {\r\n        const label = this.node.getComponent(Label)\r\n        label.font = this[fontCode]\r\n        label.fontSize = fontSize\r\n    }\r\n\r\n    public resetNumber() {\r\n        this.fromNumber = 0\r\n    }\r\n\r\n    public setOption(fromNumber: number, time: number, cb: () => void) {\r\n        this.fromNumber = fromNumber\r\n        this.time = time\r\n        this.cb = cb\r\n    }\r\n\r\n    /**数字渐变效果 */\r\n    private startEffect(targetNumber: number) {\r\n        this.targetNumber = targetNumber\r\n        const label = this.node.getChildByName(\"number\").getComponent(Label)\r\n        // if (this.timer) {\r\n        // \t// 如果有在进行的动作\r\n        // \tlabel.string = this.targetNumber.formatAmountWithCommas()\r\n        // \tthis.fromNumber = this.targetNumber\r\n        // \twindow.clearInterval(this.timer)\r\n        // \tthis.timer = 0\r\n        // \treturn\r\n        // }\r\n\r\n        //每20毫秒要增加的数字\r\n        const unitNum = +((this.targetNumber - this.fromNumber) * 20 / this.time).toFixed(0)\r\n        if (unitNum <= 0) {\r\n            label.string = this.targetNumber.formatAmountWithCommas()\r\n            this.fromNumber = this.targetNumber\r\n            return\r\n        }\r\n        let dynamicNum = this.fromNumber\r\n        !this.timer && (this.timer = window.setInterval(() => {\r\n            dynamicNum += unitNum\r\n            if (this.targetNumber - dynamicNum < unitNum) {\r\n                label.string = this.targetNumber.formatAmountWithCommas()\r\n                this.currNumber = dynamicNum\r\n                window.clearInterval(this.timer)\r\n                this.timer = 0\r\n                this.cb && this.cb()\r\n                this.fromNumber = this.targetNumber\r\n            } else {\r\n                label.string = dynamicNum.formatAmountWithCommas()\r\n                this.currNumber = dynamicNum\r\n            }\r\n        }, 20))\r\n        // this.schedule(() => {\r\n        // \tlabel.string = (fromNumber + unitNum) + ''\r\n        // }, 0.02)\r\n    }\r\n}\r\n\r\n"]}