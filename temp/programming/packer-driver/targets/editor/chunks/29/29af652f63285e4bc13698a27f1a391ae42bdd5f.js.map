{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/socketConnect.ts"],"names":["WebSocketToDo","initConfig","hallConfig","config","subGameList","ToastType","addToastAction","setLoadingAction","setSocketConnectStatus","listenerFactoy","getStore","baseBoardView","global","lang","SKT_MAG_TYPE","sktMsgListener","sktInstance","dispatch","Promise","resolve","reject","maxReConnectTimes","then","gameId","websocketUrl","find","i","init","sktCode","onMessage","code","data","isConnect","retryConnectTimes","dispath","undefined","onDataFail","content","write","k","WebSocketModule","socketConnectDateFail","placeStr","type","ERROR","isShow","onAnthFail","mainPanelViewModel","logOut","onDisconnect","socketConnectDisconnect","onReConnect","times","console","log","initSocket","hallDispatch","catch","e","removeInstance"],"mappings":"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","sourcesContent":["import { default as redux } from \"redux\"\r\nimport WebSocketToDo from \"../common/WebSocketToDo\"\r\nimport { initConfig, config as hallConfig, subGameList, config } from \"./config\"\r\nimport { ToastType, addToastAction, setLoadingAction, setSocketConnectStatus } from \"./store/actions/baseBoard\"\r\nimport { listenerFactoy } from \"../common/listenerFactoy\"\r\nimport { getStore } from \"./store\"\r\nimport { baseBoardView, global } from \"./index\"\r\nimport { lang } from \"./index\"\r\n\r\nexport enum SKT_MAG_TYPE {\r\n  /**强制退出 */\r\n  LOG_EXIT = \"0\",\r\n  /**心跳 */\r\n  HEART_BEAT = \"1\",\r\n  /**认证 */\r\n  AUTH = \"2\",\r\n  /**退出 */\r\n  EXIT = \"3\",\r\n  /**获取充值渠道 */\r\n  GET_WITH_DRAW_CHANNEL = \"411\",\r\n  /**充值下单 */\r\n  RECHARGE_ORDER = \"412\",\r\n  /**获取用户信息 */\r\n  MEMBER_INFO = \"400\",\r\n  /**修改用户信息 */\r\n  MODIFY_MEMBER_INFO = \"416\",\r\n  /**修改绑定手机 */\r\n  MODIFY_BIND_PHONE = \"408\",\r\n  /**跑马灯 */\r\n  MAEQUEE = \"404\",\r\n  /**提现人员列表 */\r\n  WITH_DRAW_LIST = \"419\",\r\n  /**VIP变化 */\r\n  VIP_CHANGE = \"420\",\r\n  /**赠送的金币 */\r\n  GIVE_GLOD = \"423\",\r\n  /**礼包列表 */\r\n  GIFT_LIST = \"424\",\r\n  /**中奖广播 */\r\n  WINNING_BOX = \"425\",\r\n  /**转盘数据 */\r\n  TURNTABLEDATA = \"426\",\r\n  /**转盘发送数据 */\r\n  TURNTABLESEND = \"427\",\r\n  /**转盘消息通知 */\r\n  TURNTABLETNOTIFICATION = \"428\",\r\n  /**充值回调 */\r\n  RECHANGE_CALLBACK = \"429\",\r\n  /**首次登录 */\r\n  FRIST_LOGIN = \"430\"\r\n}\r\n\r\nexport const sktMsgListener = listenerFactoy<SKT_MAG_TYPE>()\r\n\r\nexport let sktInstance: WebSocketToDo<SKT_MAG_TYPE> = null\r\n\r\nexport default () => {\r\n  const dispatch = getStore().dispatch\r\n  return new Promise((resolve, reject) => {\r\n    if (sktInstance) {\r\n      resolve(sktInstance)\r\n    } else {\r\n      sktInstance = new WebSocketToDo<SKT_MAG_TYPE>()\r\n      sktInstance.maxReConnectTimes = 5\r\n      initConfig().then((config) => {\r\n        const { gameId, websocketUrl } = subGameList.find(i => i.gameId === hallConfig.gameId)\r\n        sktInstance.init(config.sktCode, gameId, websocketUrl, {\r\n          onMessage: (code, data) => {\r\n            dispatch(setSocketConnectStatus({ isConnect: true, retryConnectTimes: 1 }))\r\n            sktMsgListener.dispath(code, data || undefined)\r\n          },\r\n          onDataFail: (data: any) => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDateFail, {}, { placeStr: \"连接失败~\" }), type: ToastType.ERROR }))\r\n            dispatch(setLoadingAction({ isShow: false }))\r\n          },\r\n          onAnthFail: () => {\r\n            baseBoardView && baseBoardView.mainPanelViewModel && baseBoardView.mainPanelViewModel.logOut()\r\n          },\r\n          onDisconnect: (data: any) => {\r\n            dispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDisconnect, {}, { placeStr: \"Network disconnect\" }), type: ToastType.ERROR }))\r\n            dispatch(setLoadingAction({ isShow: false }))\r\n            dispatch(setSocketConnectStatus({ isConnect: false }))\r\n          },\r\n          onReConnect: (times) => {\r\n            console.log('retry', times)\r\n            if (times > sktInstance.maxReConnectTimes) {\r\n              return false\r\n            }\r\n            return true\r\n          }\r\n        })\r\n        sktInstance.initSocket().then(() => {\r\n          // dispatch(addToastAction({ content: \"socket已连接\" }))\r\n          dispatch(setSocketConnectStatus({ isConnect: true, retryConnectTimes: 1 }))\r\n          global.hallDispatch(setLoadingAction({ isShow: false }))\r\n          resolve(sktInstance)\r\n        })\r\n      }).catch((e) => {\r\n        reject(e)\r\n        // dispatch(addToastAction({ content: \"配置文件获取失败:\" + e }))\r\n      })\r\n      // sktInstance.initSocket().then(() => {\r\n      //   // dispatch(addToastAction({ content: \"socket已连接\" }))\r\n      //   resolve(sktInstance)\r\n      // })\r\n      // initConfig().then((config) => {\r\n\r\n      // }).catch((e) => {\r\n      //   reject(e)\r\n      //   // dispatch(addToastAction({ content: \"配置文件获取失败:\" + e }))\r\n      // })\r\n    }\r\n  })\r\n}\r\n\r\nexport const removeInstance = () => {\r\n  sktInstance = null\r\n}"]}