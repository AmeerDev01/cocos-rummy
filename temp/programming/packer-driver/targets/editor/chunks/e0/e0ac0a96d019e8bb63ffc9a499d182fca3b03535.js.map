{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth111/components/GodWealth_jackPot.ts"],"names":["_decorator","instantiate","Label","Node","Sprite","BaseComponent","getNodeByNameDeep","omitStr","global","ccclass","property","GodWealth_jackPot","propertyNode","props_content","props_item","props","jackPotUserArr","events","start","initState","bindEvent","useProps","key","value","cur","removeAllChildren","forEach","item","index","userItem","loadHeadSprite","avatarIndex","getComponent","string","winningAmount","formatAmountWithCommas","nickName","addChild","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA+BC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;AACzDC,MAAAA,a,iBAAAA,a;;AAGAC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,O,iBAAAA,O;;AACnBC,MAAAA,M,iBAAAA,M;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;mCAajBW,iB,WADZF,OAAO,CAAC,mBAAD,C,gBAAR,MACaE,iBADb;AAAA;AAAA,0CAC6E;AAAA;AAAA;AAAA,eAK/DC,YAL+D,GAKhD;AACrBC,YAAAA,aAAa,EAAC,IAAIV,IAAJ,EADO;AAErBW,YAAAA,UAAU,EAAE,IAAIX,IAAJ,EAFS,CAGrB;AACA;AACA;;AALqB,WALgD;AAAA,eAiBrEY,KAjBqE,GAiBrD;AAChBC,YAAAA,cAAc,EAAC;AADC,WAjBqD;AAAA,eAqBrEC,MArBqE,GAqBpD,EArBoD;AAAA;;AAC5EC,QAAAA,KAAK,GAAG,CAEP;;AAqBSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAE3B;;AAEYC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AACjE,cAAID,GAAG,KAAK,gBAAZ,EAA8B;AAC1B,gBAAIC,KAAK,CAACC,GAAV,EAAe;AACX,mBAAKZ,YAAL,CAAkBC,aAAlB,CAAgCY,iBAAhC;AACAF,cAAAA,KAAK,CAACC,GAAN,CAAUE,OAAV,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,oBAAIC,QAAQ,GAAG5B,WAAW,CAAC,KAAKW,YAAL,CAAkBE,UAAnB,CAA1B;AACA;AAAA;AAAA,sCAAOgB,cAAP,CAAsBH,IAAI,CAACI,WAA3B,EAAwC;AAAA;AAAA,4DAAkB,MAAlB,EAA0BF,QAA1B,EAAoCG,YAApC,CAAiD5B,MAAjD,CAAxC,EAF+B,CAEmE;;AAClG;AAAA;AAAA,4DAAkB,YAAlB,EAAgCyB,QAAhC,EAA0CG,YAA1C,CAAuD9B,KAAvD,EAA8D+B,MAA9D,GAAuEN,IAAI,CAACO,aAAL,CAAmBC,sBAAnB,EAAvE;AACA;AAAA;AAAA,4DAAkB,WAAlB,EAA+BN,QAA/B,EAAyCG,YAAzC,CAAsD9B,KAAtD,EAA6D+B,MAA7D,GAAsE;AAAA;AAAA,wCAAQN,IAAI,CAACS,QAAL,GAAgB,EAAxB,EAA4B,EAA5B,CAAtE;AACA,qBAAKxB,YAAL,CAAkBC,aAAlB,CAAgCwB,QAAhC,CAAyCR,QAAzC;AACH,eAND;AAOH;AACJ;AAEP;;AAESS,QAAAA,MAAM,GAAS,CAExB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAxD2E,O","sourcesContent":["import { _decorator, Button, Component, instantiate, Label, Node, Sprite } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { playBtnClick, playTurn } from '../index';\r\nimport { JackPotUserType } from '../type';\r\nimport { getNodeByNameDeep, omitStr } from '../../../utils/tool';\r\nimport { global } from '../../../hall';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n    jackPotUserArr:Array<JackPotUserType>\r\n}\r\nexport interface IEvent {\r\n}\r\n\r\n@ccclass('GodWealth_jackPot')\r\nexport class GodWealth_jackPot extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n    protected propertyNode = {\r\n        props_content:new Node(),\r\n        props_item: new Node(),\r\n        // props_gold_label:new Node(),\r\n        // props_head: new Node(),\r\n        // props_user_name:new Node(),\r\n        \r\n\r\n        \r\n\t\t\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n        jackPotUserArr:[],\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t}\r\n\r\n    protected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n        if (key === \"jackPotUserArr\") {\r\n            if (value.cur) {\r\n                this.propertyNode.props_content.removeAllChildren()\r\n                value.cur.forEach((item, index) => {\r\n                    let userItem = instantiate(this.propertyNode.props_item);\r\n                    global.loadHeadSprite(item.avatarIndex, getNodeByNameDeep(\"head\", userItem).getComponent(Sprite));//加载头像\r\n                    getNodeByNameDeep(\"gold_label\", userItem).getComponent(Label).string = item.winningAmount.formatAmountWithCommas();\r\n                    getNodeByNameDeep(\"user_name\", userItem).getComponent(Label).string = omitStr(item.nickName + \"\", 20);\r\n                    this.propertyNode.props_content.addChild(userItem)\r\n                })\r\n            }\r\n        }\r\n        \r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}