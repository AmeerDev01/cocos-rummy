{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fruit777/dataTransfer.ts"],"names":["instantiate","DataKeyType","useMock","mockData","dataCacheNackUp","dl","si","bl","blab","blb","bubble","cs","ctw","fireRingSwitch","freeCount","freeGameAmount","gameType","iconStay","indexGameType","lw","magnification","np","rl","rollerId","sc","sgb","tb","tbb","tw","wp","dataCache","resetData","setData","key","value","refreshData","data","dataKey","console","error","ROLLER_STOP_INDEX_ID","ICON_EFFECT_DATA","result","push","BALANCE","PROFIT_MULTIPLE","GAME_TYPE","AWARD_INFO","SUBGAME_TIMES","PROFIT_AMOUNT","FREE_GAME_AMOUNT"],"mappings":"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","sourcesContent":["import { instantiate } from \"cc\"\r\n\r\nexport enum DataKeyType {\r\n  /**5条滚轴对应的道具ID【上升或下降前】 */\r\n  ROLLER_STOP_INDEX_ID = \"ROLLER_STOP_INDEX_ID\",\r\n  /**余额 */\r\n  BALANCE = \"BALANCE\",\r\n  /**获取闪动数据 */\r\n  ICON_EFFECT_DATA = \"ICON_EFFECT_DATA\",\r\n  /**获取盈利倍数信息，用于显示爆奖效果 */\r\n  PROFIT_MULTIPLE = \"PROFIT_MULTIPLE\",\r\n  /**游戏类型 */\r\n  GAME_TYPE = \"GAME_TYPE\",\r\n  /**开宝箱的中奖信息 */\r\n  AWARD_INFO = \"AWARD_INFO\",\r\n  /**小游戏剩余次数 */\r\n  SUBGAME_TIMES = \"SUBGAME_TIMES\",\r\n  /**获取盈利 */\r\n  PROFIT_AMOUNT = \"PROFIT_AMOUNT\",\r\n  /**小游戏盈亏 */\r\n  FREE_GAME_AMOUNT = \"FREE_GAME_AMOUNT\"\r\n}\r\nexport let useMock: boolean = false\r\n\r\nconst mockData: any = {\r\n  \"dl\": {\r\n    \"si\": [\r\n      {\r\n        \"bl\": 5695641,\r\n        \"blab\": 5694591,\r\n        \"blb\": 5694591,\r\n        \"bubble\": 0,\r\n        \"change\": {},\r\n        \"cs\": 0,\r\n        \"ctw\": 0,\r\n        \"esb\": {},\r\n        \"fireRingSwitch\": 0,\r\n        \"fixedChessboardIcon\": [],\r\n        \"freeCount\": 3,\r\n        \"freeGameAmount\": 1050,\r\n        \"freegame\": {},\r\n        \"gameType\": 2,\r\n        \"iconStay\": 0,\r\n        \"indexGameType\": 0,\r\n        \"lw\": {\r\n          \"1\": 1050\r\n        },\r\n        \"magnification\": 525,\r\n        \"np\": 1040,\r\n        \"rl\": [\r\n          [\r\n            6,\r\n            2,\r\n            3\r\n          ],\r\n          [\r\n            18\r\n          ],\r\n          [\r\n            6,\r\n            3,\r\n            2\r\n          ]\r\n        ],\r\n        \"rollerId\": [\r\n          3,\r\n          24,\r\n          45\r\n        ],\r\n        \"sc\": 0,\r\n        \"sgb\": 0,\r\n        \"tb\": 2,\r\n        \"tbb\": 0,\r\n        \"totalFreeGameCount\": 0,\r\n        \"tw\": 1050,\r\n        \"wp\": {\r\n          \"1\": [\r\n            [\r\n              0,\r\n              0\r\n            ],\r\n            [\r\n              1,\r\n              0\r\n            ],\r\n            [\r\n              2,\r\n              0\r\n            ]\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n// \"dl\": {\r\n//   \"si\": [\r\n//     {\r\n//       \"bl\": 2310,\r\n//       \"blab\": 2310,\r\n//       \"blb\": 2310,\r\n//       \"bubble\": 0,\r\n//       \"cs\": 0,\r\n//       \"ctw\": 0,\r\n//       \"fireRingSwitch\": 0,\r\n//       \"fixedChessboardIcon\": [],\r\n//       \"freeCount\": 6,\r\n//       \"freeGameAmount\": 1830,\r\n//       \"gameType\": 2,\r\n//       \"iconStay\": 0,\r\n//       \"indexGameType\": 0,\r\n//       \"lw\": {\r\n//         \"6\": 0,\r\n//         \"BONUS\": 1500\r\n//       },\r\n//       \"magnification\": 0,\r\n//       \"np\": 0,\r\n//       \"sc\": 1,\r\n//       \"sgb\": 0,\r\n//       \"tb\": 0,\r\n//       \"tbb\": 0,\r\n//       \"tw\": 1500\r\n//     }\r\n//   ]\r\n// }\r\n\r\n/**此数据用于缓存，正常情况下，游戏初始化、或skt返回数据之后就应该更新这个值，在下一次更新之前，此值不应该变化\r\n * \r\n * 为什么不用store呢，因为store的值一般和界面关联，数据一变更就有视图变化，但缓存数据没有，主要考虑到有特效缓动，要延迟更新\r\n */\r\nlet dataCacheNackUp: MockDataType = {\r\n  dl: {\r\n    si: [{\r\n      bl: 0,\r\n      blab: 99975,\r\n      blb: 100000,\r\n      bubble: 0,\r\n      cs: 0,\r\n      ctw: 0,\r\n      fireRingSwitch: 0,\r\n      freeCount: 0,\r\n      freeGameAmount: 0,\r\n      gameType: 0,\r\n      iconStay: 0,\r\n      indexGameType: 0,\r\n      lw: {},\r\n      magnification: 0,\r\n      np: 0,\r\n      rl: [[7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1]],\r\n      rollerId: [64, 3, 7, 45, 26],\r\n      sc: 0,\r\n      sgb: 0,\r\n      tb: 1,\r\n      tbb: 25,\r\n      tw: 0,\r\n      wp: {}\r\n    }]\r\n  }\r\n}\r\nlet dataCache: MockDataType = instantiate(dataCacheNackUp)\r\n\r\n/**重置数据 */\r\nexport const resetData = () => {\r\n  dataCache = instantiate(dataCacheNackUp)\r\n}\r\n/**用于手动更新某个值，一般用于初始化游戏时候局部变量更新 */\r\nexport const setData = (key: string, value: any) => {\r\n  // console.log(key, value)\r\n  if (useMock) { return }\r\n  const si = (useMock ? mockData : dataCache).dl.si[0]\r\n  si[key] = value\r\n}\r\n\r\n/**刷新缓存数据 */\r\nexport const refreshData = (data: MockDataType) => {\r\n  if (!useMock) {\r\n    (dataCache = data)\r\n  }\r\n  // console.log('dataCache', dataCache.dl.si[0])\r\n}\r\n\r\nexport default (dataKey: DataKeyType): any => {\r\n  // window.setTimeout(() => {\r\n  //   useMock = true\r\n  //   console.log('useMock', useMock)\r\n  // }, 5000)\r\n  if (!dataCache) {\r\n    console.error(\"dataCache is null\")\r\n    throw ('dataCache is null')\r\n  }\r\n  const si = (useMock ? mockData : dataCache).dl.si[0]\r\n  // console.log(dataKey, si)\r\n  // console.log('gameType', si.gameType)\r\n  switch (dataKey) {\r\n    case DataKeyType.ROLLER_STOP_INDEX_ID:\r\n      return si.rollerId\r\n    case DataKeyType.ICON_EFFECT_DATA:\r\n      const wp = si.wp\r\n      const result: number[][] = []\r\n      for (let key in wp) {\r\n        result.push(wp[key])\r\n      }\r\n      return result\r\n    case DataKeyType.BALANCE:\r\n      return si.bl\r\n    case DataKeyType.PROFIT_MULTIPLE:\r\n      return si.magnification\r\n    case DataKeyType.GAME_TYPE:\r\n      return si.gameType\r\n    case DataKeyType.AWARD_INFO:\r\n      return si.lw\r\n    case DataKeyType.SUBGAME_TIMES:\r\n      return si.freeCount\r\n    case DataKeyType.PROFIT_AMOUNT:\r\n      return si.tw\r\n    case DataKeyType.FREE_GAME_AMOUNT:\r\n      return si.freeGameAmount\r\n  }\r\n\r\n  // if (dataKey === DataKeyType.ROLLER_STOP_INDEX_ID) {\r\n  //   return si.rollerId\r\n  // }\r\n  // if (dataKey === DataKeyType.ICON_EFFECT_DATA) {\r\n  //   const wp = si.wp\r\n  //   const result: number[][] = []\r\n  //   for (let key in wp) {\r\n  //     result.push(wp[key])\r\n  //   }\r\n  //   return result\r\n  // }\r\n  // if (dataKey === DataKeyType.PROFIT_MULTIPLE) {\r\n\r\n  // }\r\n}\r\n\r\ntype MockDataType = {\r\n  dl: {\r\n    si: [\r\n      {\r\n        bl: number,\r\n        blab: number,\r\n        blb: number,\r\n        bubble: number,\r\n        cs: number,\r\n        ctw: number,\r\n        fireRingSwitch: number,\r\n        freeCount: number,\r\n        freeGameAmount: number,\r\n        gameType: number,\r\n        iconStay: number,\r\n        indexGameType: number,\r\n        lw: object,\r\n        /**倍率  图标数量X图标倍率 */\r\n        magnification: number,\r\n        np: number,\r\n        rl: number[][],//[[7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1], [7, 3, 1]],\r\n        rollerId: number[],//[64, 3, 7, 45, 26],\r\n        sc: number,\r\n        sgb: number,\r\n        tb: number,\r\n        tbb: number,\r\n        tw: number,\r\n        wp: object\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n"]}