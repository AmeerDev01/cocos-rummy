{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/utils/UseSetOption.ts"],"names":["UseSetOption","sys","Singleton","hallAudio","SoundPathDefine","setActiveAudio","_audio","audio","constructor","option","music","sound","vibration","language","gameSet","localStorage","getItem","setItem","JSON","stringify","parse","setOption","key","value","play","MAIN_BGM","stop","resume","pause","setGameOption","gameKey","Instance","Object","assign"],"mappings":";;;2HAkBqBA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBJC,MAAAA,G,OAAAA,G;;AACVC,MAAAA,S;;AACEC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,e,iBAAAA,e;;;;;;;;;gCAWIC,c,GAAkBC,MAAD,IAA2B;AACvDC,QAAAA,KAAK,GAAGD,MAAR;AACD,O;;yBAEoBN,Y,GAAN,MAAMA,YAAN;AAAA;AAAA,kCAAqC;AAClDQ,QAAAA,WAAW,GAAG;AACZ;AADY,eAUPC,MAVO,GAUc;AAC1BC,YAAAA,KAAK,EAAE,IADmB;AAE1BC,YAAAA,KAAK,EAAE,IAFmB;AAG1BC,YAAAA,SAAS,EAAE,IAHe;AAI1BC,YAAAA,QAAQ,EAAE,SAJgB;AAK1BC,YAAAA,OAAO,EAAE;AALiB,WAVd;AAEZ,gBAAML,MAAM,GAAGR,GAAG,CAACc,YAAJ,CAAiBC,OAAjB,CAAyB,QAAzB,CAAf;;AACA,cAAI,CAACP,MAAL,EAAa;AACXR,YAAAA,GAAG,CAACc,YAAJ,CAAiBE,OAAjB,CAAyB,QAAzB,EAAmCC,IAAI,CAACC,SAAL,CAAe,KAAKV,MAApB,CAAnC;AACD,WAFD,MAEO;AACL,iBAAKA,MAAL,GAAcS,IAAI,CAACE,KAAL,CAAWnB,GAAG,CAACc,YAAJ,CAAiBC,OAAjB,CAAyB,QAAzB,CAAX,CAAd;AACA,aAAC,KAAKP,MAAL,CAAYK,OAAb,KAAyB,KAAKL,MAAL,CAAYK,OAAZ,GAAsB,EAA/C;AACD;AACF;;AAQDO,QAAAA,SAAS,CAACC,GAAD,EAAwBC,KAAxB,EAAoC;AAC3C,eAAKd,MAAL,CAAYa,GAAZ,IAA6BC,KAA7B;AACAtB,UAAAA,GAAG,CAACc,YAAJ,CAAiBE,OAAjB,CAAyB,QAAzB,EAAmCC,IAAI,CAACC,SAAL,CAAe,KAAKV,MAApB,CAAnC;;AACA,cAAIa,GAAG,KAAK,OAAZ,EAAqB;AACnBC,YAAAA,KAAK,GAAG;AAAA;AAAA,2CAAa;AAAA;AAAA,wCAAUC,IAAV,CAAe;AAAA;AAAA,oDAAgBC,QAA/B,EAAyC,IAAzC,CAAhB,GAAiE;AAAA;AAAA,2CAAa;AAAA;AAAA,wCAAUC,IAAV,EAAnF;;AACA,gBAAInB,KAAJ,EAAW;AACTgB,cAAAA,KAAK,GAAGhB,KAAK,CAACoB,MAAN,EAAH,GAAoBpB,KAAK,CAACqB,KAAN,EAAzB;AACD;AACF;AACF;AACD;;;AACAC,QAAAA,aAAa,CAACC,OAAD,EAAkBP,KAAlB,EAAiC;AAC5C,gBAAMd,MAAM,GAAGT,YAAY,CAAC+B,QAAb,GAAwBtB,MAAxB,CAA+BK,OAA9C;;AACA,cAAI,CAACL,MAAM,CAACqB,OAAD,CAAX,EAAsB;AACpBrB,YAAAA,MAAM,CAACqB,OAAD,CAAN,GAAkBP,KAAlB;AACD,WAFD,MAEO;AACLS,YAAAA,MAAM,CAACC,MAAP,CAAcxB,MAAM,CAACqB,OAAD,CAApB,EAA+BP,KAA/B;AACD;;AACD,eAAKF,SAAL,CAAe,SAAf,EAA0BW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,MAAL,CAAYK,OAA9B,EAAuC;AAAE,aAACgB,OAAD,GAAWrB,MAAM,CAACqB,OAAD;AAAnB,WAAvC,CAA1B;AACD;;AArCiD,O","sourcesContent":["import { assert, sys } from \"cc\"\r\nimport Singleton from \"./Singleton\"\r\nimport { hallAudio } from \"../hall/index\"\r\nimport { SoundPathDefine } from \"../hall/sourceDefine/soundDefine\"\r\nimport { AudioMgr } from \"./AudioMgr\"\r\n\r\ntype OptionType = {\r\n  music: boolean,\r\n  sound: boolean,\r\n  vibration: boolean,\r\n  language: 'default' | 'english',\r\n  gameSet: { [key: string]: any }\r\n}\r\nlet audio: AudioMgr<any>\r\nexport const setActiveAudio = (_audio: AudioMgr<any>) => {\r\n  audio = _audio\r\n}\r\n\r\nexport default class UseSetOption extends Singleton {\r\n  constructor() {\r\n    super()\r\n    const option = sys.localStorage.getItem('option')\r\n    if (!option) {\r\n      sys.localStorage.setItem('option', JSON.stringify(this.option))\r\n    } else {\r\n      this.option = JSON.parse(sys.localStorage.getItem('option'))\r\n      !this.option.gameSet && (this.option.gameSet = {})\r\n    }\r\n  }\r\n  public option: OptionType = {\r\n    music: true,\r\n    sound: true,\r\n    vibration: true,\r\n    language: 'english',\r\n    gameSet: {}\r\n  }\r\n  setOption(key: keyof OptionType, value: any) {\r\n    this.option[key as string] = value\r\n    sys.localStorage.setItem('option', JSON.stringify(this.option))\r\n    if (key === \"music\") {\r\n      value ? hallAudio && hallAudio.play(SoundPathDefine.MAIN_BGM, true) : hallAudio && hallAudio.stop()\r\n      if (audio) {\r\n        value ? audio.resume() : audio.pause()\r\n      }\r\n    }\r\n  }\r\n  /**专门用于设置gameSet */\r\n  setGameOption(gameKey: string, value: object) {\r\n    const option = UseSetOption.Instance().option.gameSet\r\n    if (!option[gameKey]) {\r\n      option[gameKey] = value\r\n    } else {\r\n      Object.assign(option[gameKey], value)\r\n    }\r\n    this.setOption('gameSet', Object.assign({}, this.option.gameSet, { [gameKey]: option[gameKey] }))\r\n  }\r\n}"]}