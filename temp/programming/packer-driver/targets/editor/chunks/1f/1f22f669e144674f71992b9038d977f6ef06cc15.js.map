{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonV2/components/DragonV2_RollerPanel.ts"],"names":["_decorator","instantiate","Layout","Node","tween","UITransform","Vec3","BaseComponent","IconPool","config","DragonV2RollerViewModel","DialogType","GameType","IconId","isAuto","isSubGameToSubGame","RollerStatus","updateRollerStatus","cacheData","changeGame","updateGold","updateSubGameAnimationPlayInfo","updateWinloss","Dragonv2_Audio","mainViewModel","SoundPathDefine","ccclass","property","DragonV2_RollerPanel","rollerViewModelArr","iconPool","icon","isManualStop","inStop","isWaitEnding","propertyNode","props_column_list","props_roller_column","props_column_effect","props","rollerStatus","END","isSpeed","autoLauncherInfo","gameTypeInfo","lastGameType","NONE","currGameType","viewGameType","leftCount","winloss","events","start","initState","initRoller","i","columnCount","column","roller","mountViewNode","appendTo","connect","push","comp","setColumnEffectNode","setEvent","onCheckNextLeftCount","checkNextLeftCount","initSlot","forEach","v","index","nextLeftCount","isSubGame2","dispatch","undefined","startRoll","isMainGame","MAIN","unscheduleAllCallbacks","endRoll","rollTime","scheduleOnce","rollerLaunchResult","node","isValid","stopRollAll","RUNNING","ENDING","stopRoll","rollEndHandle","bind","hidePyrosphere","state","joinTheRingOfFire","key","callback","thePresenceOrAbsenceOfARingOfFire","res","joinringOfFireIcon","oldFireCircle","renderTheRingOfFire","getDragonBalls","dl","si","fixedChessboardIcon","magnification","showTheNumberOfDragonBalls","length","bigWinConfig","getBigWinConfig","isSubGameLastPoint","auto","winLine","startPlayWinIcon","normalRollOption","winIconFlickerTime","updateRollerStatusEnd","roundTw","tw","isMain","isChangeGame","SUBGAME2","bl","isSubGame1","freeGameAmount","isEnterSubGame2","isNextSubGame2","SUBGAME1","playOneShot","ling","dialogCallback","playBeeteFlyAmount","changeGameHandle","showDialogWin","dialogType","name","params","playBaoHeAnimation","count","done","nodes","ParticleNodes","concat","getBeetleAmountNode","getBaoHeParticleNode","endPos","parent","getComponent","convertToNodeSpaceAR","getGoodLuckPos","p","startPos","getWorldPosition","cloneNode","active","addChild","setPosition","to","subGameRollOption","beetleFlyTime","position","call","destroy","isSubGame","changeToSubGame","changeToMainGame","viewGameCountOver","changeSubGameToSubGame","console","log","FREE_GAME_ENTRY","BAO_HE_GAME_ENTRY","freeCount","gameType","param","FREE_GAME_SETTLEMENT","BAO_HE_GAME_SETTLEMENT","initOfDragonBalls","winning","find","minRate","maxRate","callBack","time","isEnd","rollerComp","stopIconIndex","rollerId","scatterCount","getScatterCount","nextColmunIsBorder","isSpeedBorder","endColumnIndex","scatter","iconIndex","queue","iconRollerQueue","showIconCount","SCATTER","linePlayTime","wp","lines","executeWinIcon","lineNumber","winIconArr","pauseWinIcon","columnIndex","playWinIcon","bindEvent","useProps","value","cur","shell_end","columnListLayout","rollerWindowX","rollerWindowY","spacingX","columnInterval","replaceMultiRollerIcon","bindUI","removeAllChildren","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, instantiate, Layout, log, Node, tween, UITransform, Vec2, Vec3 } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { IconPool } from '../IconPool';\r\nimport config from '../config';\r\nimport DragonV2RollerViewModel from '../viewModel/DragonV2RollerViewModel';\r\nimport { AutoLauncherInfo, DialogType, GameType, GameTypeInfo, IconId, isAuto, isSubGameToSubGame, RollerStatus } from '../type';\r\nimport { updateRollerStatus } from '../store/actions/roller';\r\nimport { cacheData } from '../dataTransfer';\r\nimport { changeGame, updateGold, updateSubGameAnimationPlayInfo, updateWinloss } from '../store/actions/game';\r\nimport { Dragonv2_Audio, mainViewModel } from '../index';\r\nimport { SoundPathDefine } from '../sourceDefine/soundDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\t/**滚动状态 */\r\n\trollerStatus: RollerStatus,\r\n\t/**是否加速 */\r\n\tisSpeed: boolean,\r\n\t/** 自动运行信息 */\r\n\tautoLauncherInfo: AutoLauncherInfo,\r\n\t/**游戏类型信息 */\r\n\tgameTypeInfo: GameTypeInfo,\r\n\t/**总输赢 */\r\n\twinloss: number,\r\n}\r\nexport interface IEvent {\r\n\r\n}\r\n\r\n@ccclass('DragonV2_RollerPanel')\r\nexport class DragonV2_RollerPanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\t}\r\n\tprivate rollerViewModelArr: DragonV2RollerViewModel[] = [];\r\n\tprivate iconPool: IconPool = new IconPool(config.icon);\r\n\tprivate isManualStop: boolean = false;\r\n\tprivate inStop = false;\r\n\r\n\tprivate isWaitEnding = false;\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_column_list: new Node(),\r\n\t\tprops_roller_column: new Node(),\r\n\t\tprops_column_effect: new Node(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\t/**滚动状态 */\r\n\t\trollerStatus: RollerStatus.END,\r\n\t\tisSpeed: false,\r\n\t\tautoLauncherInfo: null,\r\n\t\tgameTypeInfo: {\r\n\t\t\tlastGameType: GameType.NONE,\r\n\t\t\tcurrGameType: GameType.NONE,\r\n\t\t\tviewGameType: GameType.NONE,\r\n\t\t\tleftCount: 0\r\n\t\t},\r\n\t\twinloss: 0,\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {}\r\n\t}\r\n\tprivate initRoller() {\r\n\t\tfor (let i = 0; i < config.columnCount; i++) {\r\n\t\t\tconst column = instantiate(this.propertyNode.props_roller_column);\r\n\t\t\tconst roller = new DragonV2RollerViewModel().mountViewNode(column).appendTo(this.propertyNode.props_column_list).connect();\r\n\t\t\tthis.rollerViewModelArr.push(roller);\r\n\t\t\troller.comp.setColumnEffectNode(this.propertyNode.props_column_effect);\r\n\t\t\troller.setEvent({\r\n\t\t\t\tonCheckNextLeftCount: () => {\r\n\t\t\t\t\tthis.checkNextLeftCount()\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tpublic initSlot() {\r\n\t\tthis.rollerViewModelArr.forEach((v, index) => {\r\n\t\t\tv.comp.initSlot(index, this.iconPool);\r\n\t\t})\r\n\t}\r\n\tprivate checkNextLeftCount() {\r\n\t\tconst nextLeftCount = this.props.gameTypeInfo.nextLeftCount;\r\n\t\t// 在转动结束之后如果发现下一局的剩余局数有值，就变更一次\r\n\t\tif (this.isSubGame2() && nextLeftCount >= 0) {\r\n\t\t\tthis.dispatch(changeGame({\r\n\t\t\t\t...this.props.gameTypeInfo,\r\n\t\t\t\tleftCount: nextLeftCount,\r\n\t\t\t\tnextLeftCount: undefined\r\n\t\t\t}))\r\n\t\t}\r\n\t}\r\n\tprivate startRoll() {\r\n\t\tconst isMainGame = this.props.gameTypeInfo.viewGameType === GameType.MAIN;\r\n\t\tif (isMainGame) {\r\n\t\t\tthis.dispatch(updateWinloss(0))\r\n\t\t}\r\n\t\tthis.unscheduleAllCallbacks();\r\n\t\tthis.rollerViewModelArr.forEach((v, index) => {\r\n\t\t\tv.comp.startRoll()\r\n\t\t});\r\n\t\tthis.endRoll();\r\n\t}\r\n\r\n\tprivate endRoll() {\r\n\t\t// 前期滚动的事件\r\n\t\tconst rollTime = this.props.isSpeed ? 0.1 : 1;\r\n\t\tthis.scheduleOnce(() => {\r\n\t\t\tif (!cacheData.rollerLaunchResult) {\r\n\t\t\t\tthis.isWaitEnding = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.node && this.node.isValid && this.stopRollAll();\r\n\t\t\t}\r\n\t\t}, rollTime)\r\n\t}\r\n\r\n\tprivate stopRollAll(isManualStop: boolean = false) {\r\n\t\tif (this.inStop) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.unscheduleAllCallbacks();\r\n\t\tthis.inStop = true;\r\n\t\tthis.isManualStop = isManualStop;\r\n\t\tif (RollerStatus.RUNNING === this.props.rollerStatus) {\r\n\t\t\tthis.dispatch(updateRollerStatus(RollerStatus.ENDING))\r\n\t\t}\r\n\t\tthis.stopRoll(0, this.rollEndHandle.bind(this));\r\n\t}\r\n\t/* 移除隐藏火圈 */\r\n\thidePyrosphere(state) {\r\n\t\tthis.rollerViewModelArr.forEach((v, index) => {\r\n\t\t\tv.comp.hidePyrosphere(state)\r\n\t\t});\r\n\t}\r\n\t/* 加入火圈 */\r\n\tpublic joinTheRingOfFire(key, callback?) {\r\n\t\tfor (let i in key) {\r\n\t\t\tthis.rollerViewModelArr.forEach((v, index) => {\r\n\t\t\t\tif (index == key[i][0]) {\r\n\t\t\t\t\tv.comp.thePresenceOrAbsenceOfARingOfFire(key[i], (res) => {\r\n\t\t\t\t\t\tif (!res) {\r\n\t\t\t\t\t\t\tv.comp.joinringOfFireIcon(key[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tcallback && callback()\r\n\t}\r\n\t/* 先移动老火圈 */\r\n\tpublic oldFireCircle() {\r\n\t\tthis.rollerViewModelArr.forEach((v, index) => {\r\n\t\t\tv.comp.renderTheRingOfFire(() => { })\r\n\t\t})\r\n\t}\r\n\tpublic getDragonBalls() {\r\n\t\treturn cacheData.rollerLaunchResult.dl.si[0].fixedChessboardIcon\r\n\t}\r\n\t/**\r\n\t * 动画滚动结束处理\r\n\t */\r\n\tprivate rollEndHandle() {\r\n\t\tconst magnification = cacheData.rollerLaunchResult.dl.si[0].magnification;\r\n\t\tif (this.isSubGame2()) { //如果小游戏2刷新龙珠状态\r\n\t\t\tmainViewModel.showTheNumberOfDragonBalls(this.getDragonBalls().length)\r\n\t\t}\r\n\t\tconst bigWinConfig = this.getBigWinConfig(magnification)\r\n\t\t// 是否小游戏最后一局\r\n\t\tconst isSubGameLastPoint = this.props.gameTypeInfo.leftCount <= 1;\r\n\t\tthis.inStop = false;\r\n\t\tconst auto = isAuto(this.props.autoLauncherInfo, this.props.gameTypeInfo);\r\n\t\tthis.scheduleOnce(() => {\r\n\t\t\tconst winLine = this.startPlayWinIcon(config.normalRollOption.winIconFlickerTime, () => {\r\n\t\t\t});\r\n\t\t\tif (!auto || winLine === 0) {\r\n\t\t\t\tthis.updateRollerStatusEnd(bigWinConfig, auto, isSubGameLastPoint);\r\n\t\t\t} else {\r\n\t\t\t\t// 中奖之后延迟一点结束\r\n\t\t\t\tthis.scheduleOnce(() => {\r\n\t\t\t\t\tthis.updateRollerStatusEnd(bigWinConfig, auto, isSubGameLastPoint);\r\n\t\t\t\t}, 1)\r\n\t\t\t}\r\n\t\t},0.8)\r\n\r\n\r\n\t\tif (!bigWinConfig) {\r\n\t\t\tthis.updateWinloss();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateWinloss() {\r\n\t\tconst si = cacheData.rollerLaunchResult.dl.si[0]\r\n\t\t// 本局输赢\r\n\t\tconst roundTw = si.tw\r\n\t\tif (this.isMain()) {\r\n\t\t\tif (roundTw <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// 在切到小游戏2时，输赢金额不更新，因为中奖的金额在加到小游戏里\r\n\t\t\tif (!this.isChangeGame() || this.props.gameTypeInfo.currGameType !== GameType.SUBGAME2) {\r\n\t\t\t\tthis.scheduleOnce(() => {\r\n\t\t\t\t\tthis.dispatch(updateWinloss(roundTw))\r\n\t\t\t\t\t// 小游戏要在结算时更新余额\r\n\t\t\t\t\tthis.dispatch(updateGold(si.bl))\r\n\t\t\t\t},0.8)\r\n\t\t\t} else {\r\n\t\t\t\tif (this.props.gameTypeInfo.currGameType === GameType.SUBGAME2) {\r\n\t\t\t\t\tif (roundTw > 0) {\r\n\t\t\t\t\t\tthis.dispatch(updateWinloss(roundTw))\r\n\t\t\t\t\t\tthis.dispatch(updateGold(si.bl))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 小游戏1在游戏中余额之后在切换到主游戏时才加上去\r\n\t\t\tif (this.isSubGame1()) {\r\n\t\t\t\tthis.scheduleOnce(() => {\r\n\t\t\t\t\tthis.dispatch(updateWinloss(si.freeGameAmount))\r\n\t\t\t\t},1)\r\n\t\t\t}\r\n\t\t\tif (this.isChangeGame()) {\r\n\t\t\t\tif (this.isSubGame2()) {\r\n\t\t\t\t\tthis.dispatch(updateWinloss(roundTw))\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatch(updateGold(si.bl))\r\n\t\t\t\tthis.dispatch(updateWinloss(si.freeGameAmount))\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 更新结束滚动状态\r\n\t * @param bigWinConfig 大奖配置\r\n\t * @param auto \r\n\t * @param isSubGameLastPoint 是否小游戏最后一局\r\n\t */\r\n\tprivate updateRollerStatusEnd(bigWinConfig, auto: boolean, isSubGameLastPoint: boolean) {\r\n\t\t/// 是否进入小游戏2\r\n\t\t// let isEnterSubGame2 = this.props.gameTypeInfo.viewGameType !== GameType.SUBGAME2 && this.props.gameTypeInfo.currGameType === GameType.SUBGAME2;\r\n\t\tlet isEnterSubGame2 = false;\r\n\t\t// 是否小游戏2，包含下一次游戏\r\n\t\tconst isSubGame2 = this.props.gameTypeInfo.viewGameType === GameType.SUBGAME2 || this.props.gameTypeInfo.currGameType === GameType.SUBGAME2;\r\n\t\t// 是否下一次小游戏2\r\n\t\tlet isNextSubGame2 = this.props.gameTypeInfo.currGameType === GameType.SUBGAME2;\r\n\t\tconst isChangeGame = this.isChangeGame();\r\n\t\tif (!isEnterSubGame2 && bigWinConfig) {\r\n\t\t\t// let time = this.props.gameTypeInfo.viewGameType === GameType.SUBGAME2 && isSubGameLastPoint  ? config.subGameRollOption.beetleFlyTime * cacheData.fixedChessboardIcon.length : 1;\r\n\t\t\tif (this.props.gameTypeInfo.viewGameType !== GameType.SUBGAME1 && this.props.gameTypeInfo.currGameType === GameType.SUBGAME1) {\r\n\t\t\t\tDragonv2_Audio.playOneShot(SoundPathDefine.ling)\r\n\t\t\t}\r\n\t\t\t// 大奖提示框消失后的回调\r\n\t\t\tconst dialogCallback = () => {\r\n\t\t\t\tif (isChangeGame) {\r\n\t\t\t\t\tthis.dispatch(updateWinloss(cacheData.rollerLaunchResult.dl.si[0].tw))\r\n\t\t\t\t\tif (this.props.gameTypeInfo.viewGameType === GameType.SUBGAME2 && this.props.gameTypeInfo.currGameType !== GameType.SUBGAME2) {\r\n\t\t\t\t\t\tthis.playBeeteFlyAmount(() => {\r\n\t\t\t\t\t\t\t// this.rollerViewModelArr.forEach((v, i) => {\r\n\t\t\t\t\t\t\t// \tv.comp.removeLockIcon()\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\tthis.dispatch(updateWinloss(cacheData.rollerLaunchResult.dl.si[0].freeGameAmount))\r\n\t\t\t\t\t\t\t// this.changeGameHandle(isSubGameLastPoint);\r\n\t\t\t\t\t\t\tthis.dispatch(updateGold(cacheData.rollerLaunchResult.dl.si[0].bl))\r\n\t\t\t\t\t\t\t// 如果是免费游戏，要接着弹出的免费次数框\r\n\t\t\t\t\t\t\tthis.changeGameHandle(isSubGameLastPoint);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (this.props.gameTypeInfo.currGameType === GameType.SUBGAME1) {\r\n\t\t\t\t\t\t\t// godWealthV2_Audio.playOneShot(SoundPathDefine.LING)\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 如果是免费游戏，要接着弹出的免费次数框\r\n\t\t\t\t\t\tthis.changeGameHandle(isSubGameLastPoint);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.dispatch(updateRollerStatus(RollerStatus.END))\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// 延迟一点点播放大奖\r\n\t\t\tthis.scheduleOnce(() => {\r\n\t\t\t\tconst si = cacheData.rollerLaunchResult.dl.si[0];\r\n\t\t\t\tconst winloss = this.isSubGame2() && isSubGameLastPoint ? si.freeGameAmount : si.tw;\r\n\t\t\t\t// 中大奖提示框\r\n\t\t\t\tthis.node && this.node.isValid && mainViewModel.showDialogWin({\r\n\t\t\t\t\tdialogType: bigWinConfig.name,\r\n\t\t\t\t\tparams: [winloss],\r\n\t\t\t\t}, () => dialogCallback())\r\n\r\n\t\t\t\tthis.updateWinloss();\r\n\t\t\t}, 1)\r\n\r\n\t\t} else {\r\n\t\t\tif (isChangeGame) {\r\n\t\t\t\tif (this.props.gameTypeInfo.currGameType === GameType.SUBGAME2) {\r\n\t\t\t\t\tDragonv2_Audio.playOneShot(SoundPathDefine.ling)\r\n\t\t\t\t\tthis.playBaoHeAnimation(isSubGameLastPoint);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.props.gameTypeInfo.viewGameType === GameType.SUBGAME2) {\r\n\t\t\t\t\t\tthis.playBeeteFlyAmount(() => {\r\n\t\t\t\t\t\t\t// this.rollerViewModelArr.forEach((v, i) => {\r\n\t\t\t\t\t\t\t// \tv.comp.removeLockIcon()\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\tthis.dispatch(updateWinloss(cacheData.rollerLaunchResult.dl.si[0].freeGameAmount))\r\n\t\t\t\t\t\t\tthis.changeGameHandle(isSubGameLastPoint);\r\n\t\t\t\t\t\t\tthis.dispatch(updateGold(cacheData.rollerLaunchResult.dl.si[0].bl))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.changeGameHandle(isSubGameLastPoint);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.dispatch(updateRollerStatus(RollerStatus.END))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**播放宝盒动画，播放完成之后进去切换游戏 */\r\n\tprivate playBaoHeAnimation(isSubGameLastPoint: boolean) {\r\n\t\tlet count = 0;\r\n\t\tthis.rollerViewModelArr.forEach(v => {\r\n\t\t\tv.comp.playBaoHeAnimation(() => {\r\n\t\t\t\tcount++;\r\n\t\t\t\tif (count >= this.rollerViewModelArr.length) {\r\n\t\t\t\t\tthis.changeGameHandle(isSubGameLastPoint);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**播放宝盒的飞数字动画 */\r\n\tprivate playBeeteFlyAmount(done) {\r\n\t\tlet nodes: Node[] = [];\r\n\t\tlet ParticleNodes: Node[] = [];\r\n\t\tthis.rollerViewModelArr.forEach(v => {\r\n\t\t\tnodes = nodes.concat(v.comp.getBeetleAmountNode());\r\n\t\t\tParticleNodes = ParticleNodes.concat(v.comp.getBaoHeParticleNode());\r\n\t\t})\r\n\t\tconst endPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(mainViewModel.getGoodLuckPos());\r\n\t\tlet count = 0;\r\n\t\tif (ParticleNodes.length > 0 && cacheData.fixedChessboardIcon.length > 0) {\r\n\t\t\tParticleNodes.forEach((p, i) => {\r\n\t\t\t\tconst startPos = this.node.parent.getComponent(UITransform).convertToNodeSpaceAR(p.getWorldPosition());\r\n\t\t\t\tconst cloneNode = instantiate(p)\r\n\t\t\t\tcloneNode.active = true;\r\n\t\t\t\tthis.node.parent.addChild(cloneNode);\r\n\t\t\t\tcloneNode.setPosition(startPos)\r\n\t\t\t\tnodes[i].active = false;\r\n\t\t\t\ttween(cloneNode).to(config.subGameRollOption.beetleFlyTime, { position: endPos }).call(() => {\r\n\t\t\t\t\tcloneNode.destroy();\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count >= nodes.length) {\r\n\t\t\t\t\t\tdone && done();\r\n\t\t\t\t\t}\r\n\t\t\t\t}).start()\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdone && done();\r\n\t\t}\r\n\t\t// })\r\n\t}\r\n\r\n\tprivate changeGameHandle(isSubGameLastPoint: boolean) {\r\n\r\n\t\tif (this.isSubGame(this.props.gameTypeInfo.currGameType)) {\r\n\t\t\tthis.dispatch(updateWinloss(0))\r\n\t\t\tthis.changeToSubGame(this.props.gameTypeInfo.currGameType, isSubGameLastPoint);\r\n\t\t} else if (this.props.gameTypeInfo.currGameType === GameType.MAIN) {\r\n\t\t\tthis.scheduleOnce(() => {\r\n\t\t\t\tthis.changeToMainGame(this.props.gameTypeInfo.viewGameType)\r\n\t\t\t}, 1.5)\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 切换到小游戏处理\r\n\t * @param currGameType 当前游戏\r\n\t * @param viewGameCountOver 当前小游戏次数是否结束\r\n\t * @param nextGameType 下一个游戏\r\n\t */\r\n\tprivate changeToSubGame(currGameType: GameType, viewGameCountOver: boolean) {\r\n\t\tif (viewGameCountOver) {\r\n\t\t\tthis.changeSubGameToSubGame(currGameType);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"changeToSubGame````` gameTypeInfo\", this.props.gameTypeInfo);\r\n\t\t\t// 如果是免费游戏，要接着弹出的免费次数框\r\n\t\t\tmainViewModel.showDialogWin({\r\n\t\t\t\tdialogType: this.props.gameTypeInfo.currGameType === GameType.SUBGAME1 ? DialogType.FREE_GAME_ENTRY : DialogType.BAO_HE_GAME_ENTRY,\r\n\t\t\t\tparams: [cacheData.rollerLaunchResult.dl.si[0].freeCount],\r\n\t\t\t}, () => {\r\n\t\t\t\tconsole.log(\"dispatch updateSubGameAnimationPlayInfo\", currGameType);\r\n\t\t\t\tthis.dispatch(updateSubGameAnimationPlayInfo({\r\n\t\t\t\t\tgameType: currGameType,\r\n\t\t\t\t\tparam: 0 //开门类型\r\n\t\t\t\t}))\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**切换到主游戏的处理 */\r\n\tprivate changeToMainGame(gameType: GameType) {\r\n\t\tconsole.log(\"changeToMainGame  this.props.gameTypeInfo``````````\", this.props.gameTypeInfo);\r\n\t\tconsole.log(\"this.isSubGame(gameType)\", this.isSubGame(gameType));\r\n\t\tif (this.isSubGame(gameType)) {\r\n\t\t\t// 弹出结算面板\r\n\t\t\tmainViewModel.showDialogWin({\r\n\t\t\t\tdialogType: this.props.gameTypeInfo.viewGameType === GameType.SUBGAME1 ? DialogType.FREE_GAME_SETTLEMENT : DialogType.BAO_HE_GAME_SETTLEMENT,\r\n\t\t\t\tparams: [cacheData.rollerLaunchResult.dl.si[0].freeGameAmount],\r\n\t\t\t}, () => {\r\n\t\t\t\tconsole.log(\"dispatch updateSubGameAnimationPlayInfo222\", gameType);\r\n\t\t\t\t// 播放切换游戏动画\r\n\t\t\t\tthis.dispatch(updateSubGameAnimationPlayInfo({\r\n\t\t\t\t\tgameType: gameType,\r\n\t\t\t\t\tparam: 1 // 关门动画\r\n\t\t\t\t}))\r\n\t\t\t\t// 在开始切回主游戏时，就要把插槽的位置重置，等到gameTypeInfo数据变化时已经晚了，会看到坐标不正确\r\n\t\t\t\tthis.changeGame(GameType.MAIN);\r\n\t\t\t\tmainViewModel.initOfDragonBalls()\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.changeGame(GameType.MAIN);\r\n\t\t\tthis.dispatch(updateRollerStatus(RollerStatus.END))\r\n\t\t}\r\n\t}\r\n\r\n\t/**切换小游戏到小游戏 */\r\n\tprivate changeSubGameToSubGame(gameType: GameType) {\r\n\t\t// 弹出结算面板\r\n\t\tmainViewModel.showDialogWin({\r\n\t\t\tdialogType: DialogType.FREE_GAME_SETTLEMENT,\r\n\t\t\tparams: [cacheData.rollerLaunchResult.dl.si[0].freeGameAmount],\r\n\t\t}, () => {\r\n\t\t\t// 播放切换游戏动画\r\n\t\t\tthis.dispatch(updateSubGameAnimationPlayInfo({\r\n\t\t\t\tgameType: gameType,\r\n\t\t\t\tparam: 1 // 关门动画\r\n\t\t\t}))\r\n\t\t\t// 在开始切回主游戏时，就要把插槽的位置重置，等到gameTypeInfo数据变化时已经晚了，会看到坐标不正确\r\n\t\t\tthis.changeGame(gameType);\r\n\t\t})\r\n\t}\r\n\r\n\t/**是否准备切换游戏 */\r\n\tprivate isChangeGame() {\r\n\t\tif (!this.props.gameTypeInfo) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (isSubGameToSubGame(this.props.gameTypeInfo.viewGameType, this.props.gameTypeInfo.currGameType)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn this.props.gameTypeInfo.viewGameType !== this.props.gameTypeInfo.currGameType;\r\n\t}\r\n\r\n\tprivate isMain() {\r\n\t\treturn this.props.gameTypeInfo.viewGameType === GameType.MAIN;\r\n\t}\r\n\r\n\tprivate isSubGame(gameType: GameType) {\r\n\t\treturn gameType === GameType.SUBGAME1 || gameType === GameType.SUBGAME2\r\n\t}\r\n\r\n\tprivate getBigWinConfig(magnification: number) {\r\n\t\treturn config.winning.find(v => v.minRate <= magnification && magnification <= v.maxRate)\r\n\t}\r\n\r\n\tprivate stopRoll(i: number, callBack: () => void) {\r\n\t\tconst isSpeed = this.isManualStop ? true : this.props.isSpeed;\r\n\t\t// 这里调停止滚动的速度\r\n\t\tconst time = isSpeed ? 0 : 0.2;\r\n\t\tconst isEnd = i >= this.rollerViewModelArr.length - 1;\r\n\t\tconst rollerComp = this.rollerViewModelArr[i];\r\n\t\t// const stopIconIndex = Math.floor(Math.random() * config.iconRollerQueue[i].length);\r\n\t\t// 获得停下来的数据\r\n\t\tconst stopIconIndex = cacheData.rollerLaunchResult.dl.si[0].rollerId[i];\r\n\r\n\t\tconst scatterCount = this.getScatterCount(i);\r\n\t\t// 下一个列是否有边框\r\n\t\tconst nextColmunIsBorder = this.getScatterCount(i + 1) >= 2;\r\n\r\n\t\t// console.log(\"scatterCount\", scatterCount, i, stopIconIndex);\r\n\t\t// 是否快速边框，前面出现2个以上的scatter，这个参数才为true\r\n\t\tconst isSpeedBorder = scatterCount >= 2;\r\n\t\trollerComp.comp.stopRoll(stopIconIndex, () => {\r\n\t\t\tif (this.node && this.node.isValid) {\r\n\t\t\t\tif (isEnd) {\r\n\t\t\t\t\tcallBack()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextColmunIsBorder && this.stopRoll(i + 1, callBack)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, isSpeedBorder)\r\n\t\t// 小游戏2滚轴一起停\r\n\t\tif (this.isSubGame2()) {\r\n\t\t\tif (!isEnd) {\r\n\t\t\t\tthis.stopRoll(i + 1, callBack)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t!nextColmunIsBorder && this.scheduleOnce(() => {\r\n\t\t\t\tif (this.node && this.node.isValid) {\r\n\t\t\t\t\tif (!isEnd) {\r\n\t\t\t\t\t\tthis.stopRoll(i + 1, callBack)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, time)\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isSubGame2() {\r\n\t\treturn this.props.gameTypeInfo.viewGameType === GameType.SUBGAME2;\r\n\t}\r\n\tprivate isSubGame1() {\r\n\t\treturn this.props.gameTypeInfo.viewGameType === GameType.SUBGAME1;\r\n\t}\r\n\t/**获得前面几列的scatter个数 */\r\n\tprivate getScatterCount(endColumnIndex: number) {\r\n\t\t// 前两列不计算数量或者小游戏2也不计算\r\n\t\tif (endColumnIndex < 2 || this.isSubGame2()) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tendColumnIndex = endColumnIndex >= this.rollerViewModelArr.length ? this.rollerViewModelArr.length : endColumnIndex;\r\n\t\tconst rollerId = cacheData.rollerLaunchResult.dl.si[0].rollerId;\r\n\t\tlet scatter = 0;\r\n\t\tfor (let i = 0; i < endColumnIndex; i++) {\r\n\t\t\tlet iconIndex = rollerId[i] as number;\r\n\t\t\tconst queue = config.iconRollerQueue[i]\r\n\t\t\tfor (let i = 0; i < config.normalRollOption.showIconCount; i++) {\r\n\t\t\t\tif (queue[iconIndex] === IconId.SCATTER) {\r\n\t\t\t\t\tscatter++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (++iconIndex >= queue.length) {\r\n\t\t\t\t\ticonIndex = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn scatter;\r\n\t}\r\n\r\n\t/**\r\n\t * 显示中奖图标\r\n\t * @param linePlayTime \r\n\t * @param done 所有线路播放完之后执行\r\n\t */\r\n\tprivate startPlayWinIcon(linePlayTime: number, done) {\r\n\t\tlet winLine = 0;\r\n\t\tif (cacheData.rollerLaunchResult) {\r\n\t\t\tconst wp = cacheData.rollerLaunchResult.dl.si[0].wp\r\n\t\t\tconst lines: any[] = [];\r\n\t\t\tfor (const key in wp) {\r\n\t\t\t\tlines.push(key);\r\n\t\t\t}\r\n\r\n\t\t\twinLine = lines.length;\r\n\t\t\tif (lines.length > 0) {\r\n\t\t\t\tthis.executeWinIcon(-1, lines, wp, linePlayTime, done);\r\n\t\t\t} else {\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn winLine;\r\n\t}\r\n\r\n\t/**\r\n\t * 播放赢的图标\r\n\t * @param index 线的索引\r\n\t * @param lines 中奖线的数组\r\n\t * @param wp 中间对象\r\n\t * @param linePlayTime 播放一条线的时间\r\n\t * @param done\r\n\t * @returns \r\n\t */\r\n\tprivate executeWinIcon(index: number, lines: any[], wp, linePlayTime: number, done) {\r\n\t\tif (!cacheData.rollerLaunchResult) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (index >= lines.length) {\r\n\t\t\tindex = -1;\r\n\t\t\tdone && done();\r\n\t\t}\r\n\t\tconst lineNumber = lines[index];\r\n\t\tlet winIconArr = [];\r\n\t\tif (index === -1) {\r\n\t\t\tlinePlayTime = 2;\r\n\t\t\tfor (const key in wp) {\r\n\t\t\t\twinIconArr = winIconArr.concat(wp[key])\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twinIconArr = winIconArr.concat(wp[lineNumber])\r\n\t\t\t// 一条线中了几个图标就播放多少秒\r\n\t\t\tlinePlayTime = winIconArr.length;\r\n\t\t}\r\n\t\tthis.rollerViewModelArr.forEach(v => v.comp.pauseWinIcon())\r\n\t\twinIconArr.forEach(v => {\r\n\t\t\tconst columnIndex = v[0];\r\n\t\t\tconst iconIndex = v[1];\r\n\t\t\tthis.rollerViewModelArr[columnIndex].comp.playWinIcon(iconIndex);\r\n\t\t})\r\n\r\n\t\tthis.scheduleOnce(() => {\r\n\t\t\tthis.executeWinIcon(++index, lines, wp, linePlayTime, done);\r\n\t\t}, linePlayTime);\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === 'rollerStatus') {\r\n\t\t\tif (RollerStatus.RUNNING === value.cur) {\r\n\t\t\t\tthis.startRoll();\r\n\t\t\t} else if (RollerStatus.ENDING === value.cur) {\r\n\t\t\t\tthis.stopRollAll(true);\r\n\t\t\t\tDragonv2_Audio.playOneShot(SoundPathDefine.shell_end)\r\n\t\t\t}\r\n\t\t} else if (key === 'gameTypeInfo') {\r\n\t\t\tthis.changeGame(this.props.gameTypeInfo.viewGameType);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate changeGame(gameType: GameType) {\r\n\t\tconst columnListLayout = this.propertyNode.props_column_list.getComponent(Layout);\r\n\t\tconst isSubGame2 = gameType === GameType.SUBGAME2;\r\n\t\tconst isMain = gameType === GameType.MAIN;\r\n\t\tif (isMain || isSubGame2) {\r\n\t\t\tthis.node.position = new Vec3(config.normalRollOption.rollerWindowX, config.normalRollOption.rollerWindowY);\r\n\t\t\tcolumnListLayout.spacingX = config.normalRollOption.columnInterval;\r\n\t\t} else {\r\n\t\t\tthis.node.position = new Vec3(config.subGameRollOption.rollerWindowX, config.subGameRollOption.rollerWindowY);\r\n\t\t\tcolumnListLayout.spacingX = config.subGameRollOption.columnInterval;\r\n\t\t}\r\n\t\tif (isMain) {\r\n\t\t\tthis.rollerViewModelArr.forEach(v => v.comp.replaceMultiRollerIcon());\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t\tthis.propertyNode.props_column_list.removeAllChildren();\r\n\r\n\t\tthis.initRoller();\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\t\tif (this.isWaitEnding && cacheData.rollerLaunchResult) {\r\n\t\t\tthis.isWaitEnding = false;\r\n\t\t\tthis.node && this.node.isValid && this.stopRollAll();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"]}