{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/thor/components/Thor_RoleView.ts"],"names":["_decorator","Node","sp","BaseComponent","GameType","SkeletonAnimationPlayer","thor_Audio","SoundPathDefine","ccclass","property","Thor_RoleView","ani","propertyNode","props_thor","props","roleAttack","gameType","events","start","initState","bindEvent","useProps","key","value","MAIN","getComponent","Skeleton","ROLE_STATE","playAnimation","SUBGAME1","cur","playOneShot","THOR_SMILES","ATTACK","changeAnimation","startFalling","clearTheDrop","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, Label, Layout, Node, ScrollView, sp } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { GameType } from '../type';\r\nimport SkeletonAnimationPlayer from '../SkeletonPlay';\r\nimport { thor_Audio } from '../index';\r\nimport { SoundPathDefine } from '../sourceDefine/soundDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\troleAttack?: boolean,\r\n\tgameType?: number\r\n\r\n}\r\nexport interface IEvent {\r\n\r\n}\r\nconst enum ROLE_STATE {\r\n\tMAIN = 'anima_3',\r\n\tSUBGAME1 = 'anima_2',\r\n\tATTACK = 'anima_1',\r\n}\r\n@ccclass('Thor_RoleView')\r\nexport class Thor_RoleView extends BaseComponent<IState, IProps, IEvent> {\r\n\tprivate ani\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_thor: new Node()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\troleAttack: false,\r\n\t\tgameType: 0\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === 'gameType') {\r\n\t\t\tif (this.props.gameType === GameType.MAIN) {\r\n\t\t\t\tnew SkeletonAnimationPlayer(this.propertyNode.props_thor.getComponent(sp.Skeleton), ROLE_STATE.MAIN, true).playAnimation();\r\n\t\t\t} else if (this.props.gameType === GameType.SUBGAME1) {\r\n\t\t\t\tnew SkeletonAnimationPlayer(this.propertyNode.props_thor.getComponent(sp.Skeleton), ROLE_STATE.SUBGAME1, true).playAnimation();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (key === 'roleAttack') {\r\n\t\t\tif (!value.cur) {\r\n\t\t\t\tif (!this.ani) {\r\n\t\t\t\t\tthor_Audio.playOneShot(SoundPathDefine.THOR_SMILES)\r\n\t\t\t\t\tthis.ani = this.propertyNode.props_thor && new SkeletonAnimationPlayer(this.propertyNode.props_thor.getComponent(sp.Skeleton), ROLE_STATE.ATTACK, false, () => {\r\n\t\t\t\t\t\tif (this.props.gameType === GameType.MAIN) {\r\n\t\t\t\t\t\t\tthis.ani.changeAnimation(ROLE_STATE.MAIN, true, () => {\r\n\t\t\t\t\t\t\t\tthis.ani = null\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.ani.changeAnimation(ROLE_STATE.SUBGAME1, true, () => {\r\n\t\t\t\t\t\t\t\tthis.ani = null\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.ani.playAnimation()\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate startFalling() {\r\n\r\n\t}\r\n\tprivate clearTheDrop() {\r\n\r\n\t}\r\n\tprotected bindUI(): void {\r\n\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}