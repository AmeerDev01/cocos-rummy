{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/components/phoenix_helpPanel.ts"],"names":["_decorator","Button","Node","PageView","BaseComponent","playBtnClick","playTurn","ccclass","property","phoenix_helpPanel","propertyNode","props_btn_insst5roduce_close","props_img_rule_1","props_img_rule_2","props_img_rule_3","props_indexMark","props_PageView","props_indicator","props_indicator_toggle1","props_indicator_toggle2","props_indicator_toggle3","props","events","closeHandler","start","initState","bindEvent","node","on","EventType","CLICK","TOUCH_MOVE","scrollPageViewListener","useProps","key","value","SCROLL_ENDED","pageView","curPageIdx","scrollToPage","getPages","length","showIndex","page","num","arr","children","filter","v","name","startsWith","forEach","item","i","getChildByName","active","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAgCC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;;AAClDC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OAEjB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;mCAcjBS,iB,WADZF,OAAO,CAAC,mBAAD,C,gBAAR,MACaE,iBADb;AAAA;AAAA,0CAC6E;AAAA;AAAA;AAAA,eAKlEC,YALkE,GAKnD;AACxBC,YAAAA,4BAA4B,EAAE,IAAIV,MAAJ,EADN;AAExBW,YAAAA,gBAAgB,EAAE,IAAIV,IAAJ,EAFM;AAGxBW,YAAAA,gBAAgB,EAAE,IAAIX,IAAJ,EAHM;AAIxBY,YAAAA,gBAAgB,EAAE,IAAIZ,IAAJ,EAJM;AAKxBa,YAAAA,eAAe,EAAE,IAAIb,IAAJ,EALO;AAMxBc,YAAAA,cAAc,EAAE,IAAIb,QAAJ,EANQ;AAOxBc,YAAAA,eAAe,EAAC,IAAIf,IAAJ,EAPQ;AAQxBgB,YAAAA,uBAAuB,EAAE,IAAIhB,IAAJ,EARD;AASxBiB,YAAAA,uBAAuB,EAAC,IAAIjB,IAAJ,EATA;AAUxBkB,YAAAA,uBAAuB,EAAE,IAAIlB,IAAJ;AAVD,WALmD;AAAA,eAmBrEmB,KAnBqE,GAmBrD,EAnBqD;AAAA,eAuBrEC,MAvBqE,GAuBpD;AACvBC,YAAAA,YAAY,EAAE,MAAM,CAAG;AADA,WAvBoD;AAAA;;AAC5EC,QAAAA,KAAK,GAAG,CAEP;;AAwBSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS;AAE3B,eAAKhB,YAAL,CAAkBC,4BAAlB,CAA+CgB,IAA/C,CAAoDC,EAApD,CAAuD3B,MAAM,CAAC4B,SAAP,CAAiBC,KAAxE,EAA+E,MAAM;AACpF;AAAA;AAAA;AACA,iBAAKR,MAAL,CAAYC,YAAZ;AACA,WAHD,EAGG,IAHH;AAIA,eAAKb,YAAL,CAAkBE,gBAAlB,CAAmCgB,EAAnC,CAAsC1B,IAAI,CAAC2B,SAAL,CAAeE,UAArD,EAAiE,MAAM;AACtE;AAAA;AAAA;AACA,iBAAKC,sBAAL;AAEA,WAJD;AAKA,eAAKtB,YAAL,CAAkBG,gBAAlB,CAAmCe,EAAnC,CAAsC1B,IAAI,CAAC2B,SAAL,CAAeE,UAArD,EAAiE,MAAM;AACtE;AAAA;AAAA;AACA,iBAAKC,sBAAL;AAEA,WAJD;AAKA,eAAKtB,YAAL,CAAkBI,gBAAlB,CAAmCc,EAAnC,CAAsC1B,IAAI,CAAC2B,SAAL,CAAeE,UAArD,EAAiE,MAAM;AACtE;AAAA;AAAA;AACA,iBAAKC,sBAAL;AACA,WAHD;AAIA;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CAEpE;;AAEOH,QAAAA,sBAAsB,GAAG;AAChC,cAAI,CAAC,KAAKtB,YAAV,EAAwB;AACxB,eAAKA,YAAL,CAAkBM,cAAlB,CAAiCW,IAAjC,CAAsCC,EAAtC,CAAyCzB,QAAQ,CAAC0B,SAAT,CAAmBO,YAA5D,EAA2EC,QAAD,IAAwB;AACjG,gBAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC9BD,cAAAA,QAAQ,CAACE,YAAT,CAAsBF,QAAQ,CAACG,QAAT,GAAoBC,MAApB,GAA6B,CAAnD,EAAsD,CAAtD;AACG,mBAAKC,SAAL,CAAe,CAAf;AAEH,aAJD,MAIO,IAAIL,QAAQ,CAACC,UAAT,GAAsB,CAAtB,KAA4BD,QAAQ,CAACG,QAAT,GAAoBC,MAApB,GAA6B,CAA7D,EAAgE;AACtEJ,cAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,CAAzB;AACG,mBAAKG,SAAL,CAAe,CAAf;AAEH,aAJM,MAIA,IAAIL,QAAQ,CAACC,UAAT,GAAsB,CAAtB,KAA4BD,QAAQ,CAACG,QAAT,GAAoBC,MAApD,EAA4D;AAClEJ,cAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,CAAzB;AACG,mBAAKG,SAAL,CAAe,CAAf;AACH;;AACD,kBAAMC,IAAI,GAAGN,QAAQ,CAACG,QAAT,GAAoBH,QAAQ,CAACC,UAA7B,CAAb;AACA,WAdD;AAeA;;AAEOI,QAAAA,SAAS,CAACE,GAAD,EAAM;AACtB,cAAI,CAAC,KAAKlC,YAAV,EAAwB;AACrB,cAAImC,GAAG,GAAG,KAAKnC,YAAL,CAAkBO,eAAlB,CAAkC6B,QAAlC,CAA2CC,MAA3C,CAAkDC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,UAAP,CAAkB,wBAAlB,CAAvD,CAAV;AACHL,UAAAA,GAAG,CAACM,OAAJ,CAAY,CAACC,IAAD,EAAMC,CAAN,KAAY;AACvB,gBAAIA,CAAC,KAAKT,GAAV,EAAe;AACdQ,cAAAA,IAAI,CAACE,cAAL,CAAoB,WAApB,EAAiCC,MAAjC,GAA0C,IAA1C;AACA,aAFD,MAEO;AACNH,cAAAA,IAAI,CAACE,cAAL,CAAoB,WAApB,EAAiCC,MAAjC,GAA0C,KAA1C;AACA;AACD,WAND;AAOA;;AAISC,QAAAA,MAAM,GAAS,CAExB;;AAIDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AApG2E,O","sourcesContent":["import { _decorator, Button, Component, instantiate, Node, PageView } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { playBtnClick, playTurn } from '../index';\r\nimport { getNodeByNameDeep } from '../../../utils/tool';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\r\n}\r\nexport interface IEvent {\r\n\tcloseHandler: () => void\r\n}\r\n\r\n@ccclass('phoenix_helpPanel')\r\nexport class phoenix_helpPanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_insst5roduce_close: new Button(),\r\n\t\tprops_img_rule_1: new Node(),\r\n\t\tprops_img_rule_2: new Node(),\r\n\t\tprops_img_rule_3: new Node(),\r\n\t\tprops_indexMark: new Node(),\r\n\t\tprops_PageView: new PageView(),\r\n\t\tprops_indicator:new Node(),\r\n\t\tprops_indicator_toggle1: new Node(),\r\n\t\tprops_indicator_toggle2:new Node(),\r\n\t\tprops_indicator_toggle3: new Node(),\r\n\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tcloseHandler: () => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t\tthis.propertyNode.props_btn_insst5roduce_close.node.on(Button.EventType.CLICK, () => {\r\n\t\t\tplayBtnClick()\r\n\t\t\tthis.events.closeHandler()\r\n\t\t}, true)\r\n\t\tthis.propertyNode.props_img_rule_1.on(Node.EventType.TOUCH_MOVE, () => {\r\n\t\t\tplayTurn()\r\n\t\t\tthis.scrollPageViewListener()\r\n\r\n\t\t})\r\n\t\tthis.propertyNode.props_img_rule_2.on(Node.EventType.TOUCH_MOVE, () => {\r\n\t\t\tplayTurn()\r\n\t\t\tthis.scrollPageViewListener()\r\n\r\n\t\t})\r\n\t\tthis.propertyNode.props_img_rule_3.on(Node.EventType.TOUCH_MOVE, () => {\r\n\t\t\tplayTurn()\r\n\t\t\tthis.scrollPageViewListener()\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\r\n\t}\r\n\r\n\tprivate scrollPageViewListener() {\r\n\t\tif (!this.propertyNode) return\r\n\t\tthis.propertyNode.props_PageView.node.on(PageView.EventType.SCROLL_ENDED, (pageView: PageView) => {\t\t\t\r\n\t\t\tif (pageView.curPageIdx === 0) {\r\n\t\t\t\tpageView.scrollToPage(pageView.getPages().length - 3, 0);\r\n\t\t\t    this.showIndex(0)\r\n\r\n\t\t\t} else if (pageView.curPageIdx + 1 === pageView.getPages().length - 1) {\r\n\t\t\t\tpageView.scrollToPage(1, 0)\r\n\t\t\t    this.showIndex(1)\r\n\r\n\t\t\t} else if (pageView.curPageIdx + 1 === pageView.getPages().length) {\r\n\t\t\t\tpageView.scrollToPage(2, 0)\r\n\t\t\t    this.showIndex(2)\r\n\t\t\t}\r\n\t\t\tconst page = pageView.getPages()[pageView.curPageIdx];\r\n\t\t})\r\n\t}\r\n\r\n\tprivate showIndex(num) {\r\n\t\tif (!this.propertyNode) return\r\n\t    let arr = this.propertyNode.props_indicator.children.filter(v => v.name.startsWith(\"props_indicator_toggle\"));\r\n\t\tarr.forEach((item,i) => {\r\n\t\t\tif (i === num) {\r\n\t\t\t\titem.getChildByName(\"CheckMark\").active = true;\r\n\t\t\t} else {\r\n\t\t\t\titem.getChildByName(\"CheckMark\").active = false;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n\tprotected bindUI(): void {\r\n\r\n\t}\r\n\r\n\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n"]}