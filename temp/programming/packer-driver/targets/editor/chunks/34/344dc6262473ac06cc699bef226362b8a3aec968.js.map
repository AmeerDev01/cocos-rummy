{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/gxfc/Slot/Mediator/RollerMediator.ts"],"names":["RollerMediator","find","Prefab","CommandDefine","PrefabDefine","BaseMediator","BgMediatorConst","BgCommandConst","ApplicationGlobal","getBgProxy","getSocketProxy","goldState","AudioManager","SoundList","TaskScheduler","Task","ROLL_TIME","RollerMediatorConst","constructor","mediatorName","viewComponent","taskScheduler","sourceMap","key","path","SLOT_PANEL","sourceType","source","isFlickerDone","stopRollHandle","stopTimeId","listNotificationConst","name","INIT_ROLLER_PANEL","handler","notification","init","gameType","getBody","_gameRunner","getTransferGameInfo","sendNotification","CHANGE_BG","setDisable","window","setTimeout","BG","AUTO_LAUNCH","REMOVE_THECHEST_LAYER","iconStay","rollerComp","wrapView","getChildByName","getComponent","togglesALLLayer","BEGIN_ROLL","stopIndex","targetList","dockIocn","startAllRoll","isSpeed","iconDock","stopQueue","i","flickerFn","forEach","item","iconFlicker","length","clearStatus","done","flashLine","res","index","task","joinqQueue","order","SHOW_DIALOG_WIN","NUMBEROFDISPLAYS","amount","getRemainTimes","keepTime","getIsChangeGameRunning","GAME_TYPE_CHANGE","TOGGLETHESTARTBUTTON","state","isManualStop","undefined","stopAllRoll","UPDATE_USER_GOLD","OLD_GOLD","UPDATE_CURRENT_SCORE","END_ROLL","clearTimeout","UNINSTALL_ROLLER_PANEL","uninstall","UPDATE_ICON_STATE","bgIndex","setIconBG","mainPrefabSource","getSource","mainPanel","addChild","listenerEvent","judgeTheGamePopUp","cb","getInstance","playSound","theRollerStops"],"mappings":"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","sourcesContent":["import {find, Prefab} from \"cc\";\r\nimport {INotification} from \"../../Framework/interfaces/INotification\";\r\nimport {CommandDefine} from \"../Const/CommandDefine\";\r\nimport {PrefabDefine} from \"../Const/PrefabDefine\";\r\nimport BaseMediator from \"./BaseMediator\";\r\nimport {IlistTypeHander} from \"../types/IlistTypeHander\";\r\nimport {ISourceFile} from \"../types/ISourceFile\";\r\nimport {gxfc_RollerPanel} from \"../Component/gxfc_RollerPanel\";\r\nimport {BgMediatorConst} from \"./BgMediator\";\r\nimport {BgCommandConst} from \"../Command/BgCommand\";\r\nimport { ApplicationGlobal } from \"../Const/ApplicationGlobal\";\r\nimport {getBgProxy, getSlotProxy, getSocketProxy} from \"../utils\";\r\nimport {goldState, SubGameType} from \"../Proxy/SocketProxy\";\r\nimport {AudioManager, SoundList, } from \"../Managr/AudioManager\";\r\nimport TaskScheduler, {Task} from \"../../../../utils/TaskScheduler\";\r\nimport { AutoLaunchType } from \"../Repositories/BgRepository\";\r\nimport { ROLL_TIME } from \"../../../../utils/SlotSpeedConfig\";\r\nexport enum RollerMediatorConst {\r\n    /**初始化滑槽面板 */\r\n    INIT_ROLLER_PANEL = \"initgxfc_RollerPanel\",\r\n    /**卸载滑槽游戏面板 */\r\n    UNINSTALL_ROLLER_PANEL = \"uninstallgxfc_RollerPanel\",\r\n    /**开始滑动 */\r\n    BEGIN_ROLL = \"beginRoll\",\r\n    /**结束滑动 */\r\n    END_ROLL = \"endRoll\",\r\n   /* 闪动停止*/\r\n    FORCE_STOP = 'forceStop',\r\n    /*更新状态游戏*/\r\n    REMOVE_THECHEST_LAYER = 'removeThechestLayer',\r\n    UPDATE_ICON_STATE=\"updateIconState\"\r\n}\r\n\r\nexport default class RollerMediator extends BaseMediator {\r\n    public taskScheduler: TaskScheduler = new TaskScheduler()\r\n    public sourceMap: Array<ISourceFile> = [\r\n        {\r\n            key: 'slotPanel',\r\n            path: PrefabDefine.SLOT_PANEL,\r\n            sourceType: Prefab,\r\n            source: null\r\n        }\r\n    ]\r\n    private isFlickerDone:boolean=true\r\n    private stopRollHandle;\r\n    private stopTimeId;\r\n    protected listNotificationConst: Array<IlistTypeHander<RollerMediator>> = [\r\n        {\r\n            name: RollerMediatorConst.INIT_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                this.init();\r\n                const { gameType } = notification.getBody() || {}\r\n\t\t\t\t//在初始化界面之前要初始化数据 'iconRollerQueue' | 'largeIconRollerQueue'\r\n\t\t\t\tconst _gameRunner: SubGameType = gameType || getSocketProxy().getTransferGameInfo().gameType()\r\n                this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType: _gameRunner })\r\n                getBgProxy().setDisable(false)\r\n                window.setTimeout(() => {\r\n                    // 可能有动画\r\n                    this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                }, 2500)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.REMOVE_THECHEST_LAYER,\r\n            handler(notification: INotification) {\r\n                let {iconStay}=notification.getBody()\r\n                const rollerComp = (<gxfc_RollerPanel>this.wrapView.getChildByName('Mask').getChildByName(\"slotListPanel\").getComponent(\"gxfc_RollerPanel\"));\r\n                rollerComp.togglesALLLayer(iconStay)\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.BEGIN_ROLL,\r\n            handler(notification: INotification) {\r\n                const {stopIndex, targetList, dockIocn} = notification.getBody();\r\n                const rollerComp = (<gxfc_RollerPanel>this.wrapView.getChildByName('Mask').getChildByName(\"slotListPanel\").getComponent(\"gxfc_RollerPanel\"));\r\n                rollerComp.startAllRoll(stopIndex, getBgProxy().isSpeed());\r\n                rollerComp.iconDock('coord', dockIocn)\r\n                getBgProxy().setDisable(true)\r\n                this.taskScheduler.stopQueue(false)\r\n                //闪动图标\r\n                let i = 0\r\n                const flickerFn = () => {\r\n                    targetList.forEach(item => {\r\n                        rollerComp.iconFlicker('coord', item, true, () => {\r\n                            i++\r\n                            if (i === targetList.length) { //全部闪动完成\r\n                                rollerComp.iconDock('coord', dockIocn)\r\n                                rollerComp.clearStatus()\r\n                                setTimeout(() => {\r\n                                    done()\r\n                                    flashLine()\r\n                                }, 500)\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n                const flashLine = () => {\r\n                    targetList.forEach((res,index)=>{\r\n                        const task = new Task((done) => {\r\n                            rollerComp.iconFlicker('coord', targetList[index], false)\r\n                            //闪烁2秒钟就结束\r\n                            window.setTimeout(() => done(), 1000)\r\n                        })\r\n                        this.taskScheduler.joinqQueue(task, false)\r\n                    })\r\n                }\r\n                const done = () => {\r\n                    // 闪动效果播放完毕，判断是否要切换游戏\r\n                    this.taskScheduler.joinqQueue(new Task((done)=>{\r\n                        this.sendNotification(CommandDefine.BG, {order: \"curr\",done}, BgMediatorConst.SHOW_DIALOG_WIN)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        this.sendNotification(BgMediatorConst.NUMBEROFDISPLAYS,{amount: getSocketProxy().getTransferGameInfo().getRemainTimes(),keepTime:2000,done},)\r\n                    })).joinqQueue(new Task((done)=>{\r\n                        if(getBgProxy().getIsChangeGameRunning()!==-1){\r\n                            this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                        }else {\r\n                            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON,{state:true})\r\n                            this.sendNotification(CommandDefine.BG, {}, BgCommandConst.AUTO_LAUNCH)\r\n                        }\r\n                        rollerComp.iconDock('coord', dockIocn)\r\n                        done()\r\n                        getBgProxy().setDisable(false)\r\n                    }))\r\n                    // this.judgeTheGamePopUp(()=>{\r\n                    //     this.sendNotification(CommandDefine.BG, {}, BgCommandConst.GAME_TYPE_CHANGE);\r\n                    //     this.autoLaunch()\r\n                    // })\r\n                }\r\n                this.stopRollHandle = (isManualStop:boolean=false) => {\r\n\t\t\t\t\t\t\t\t\t\tthis.stopRollHandle = undefined;\r\n\t\t\t\t\t\t\t\t\t\tthis.stopTimeId = undefined;\r\n                    rollerComp && rollerComp.stopAllRoll(isManualStop, () => {\r\n                        this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD,{state:goldState.OLD_GOLD})\r\n                        //更新游戏奖励\r\n                        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n                        // // 开始轮流闪动图标\r\n                        rollerComp.clearStatus()\r\n                        if (!targetList.length) {\r\n                            done()\r\n                            getBgProxy().setDisable(false)\r\n                        } else {\r\n                            flickerFn()\r\n                        }\r\n                    })\r\n                }\r\n                // 多少秒钟后开始停止转动\r\n                this.stopTimeId = window.setTimeout(this.stopRollHandle, ROLL_TIME)\r\n            }\r\n            },\r\n        {\r\n            name: RollerMediatorConst.END_ROLL,\r\n            handler(notification: INotification) {\r\n                this.stopTimeId && window.clearTimeout(this.stopTimeId)\r\n                this.stopRollHandle && this.stopRollHandle(true);\r\n            }\r\n        },\r\n        {\r\n            name: RollerMediatorConst.UNINSTALL_ROLLER_PANEL,\r\n            handler(notification: INotification) {\r\n                // console.log(\"卸载滑槽游戏\")\r\n                const rollerComp = (<gxfc_RollerPanel>this.wrapView.getChildByName('Mask').getChildByName(\"slotListPanel\").getComponent(\"gxfc_RollerPanel\"));\r\n                rollerComp.uninstall()\r\n            }\r\n        },  {\r\n            name: RollerMediatorConst.UPDATE_ICON_STATE,\r\n            handler(notification: INotification) {\r\n                let {bgIndex}=notification.getBody()\r\n                const rollerComp = (<gxfc_RollerPanel>this.wrapView.getChildByName('Mask').getChildByName(\"slotListPanel\").getComponent(\"gxfc_RollerPanel\"));\r\n                rollerComp.setIconBG(bgIndex)\r\n            }\r\n        },\r\n    ]\r\n    protected mainPrefabSource = {\r\n        key: 'slotPanel',\r\n        path: PrefabDefine.SLOT_PANEL,\r\n        sourceType: Prefab,\r\n        source: null\r\n    }\r\n\r\n    public constructor(mediatorName: string = null, viewComponent: any = null) {\r\n        super(mediatorName, viewComponent)\r\n    }\r\n\r\n    protected init(): void {\r\n        //this.viewComponent.addChild(this.getSource(PrefabDefine.SLOT_PANEL))\r\n        this.wrapView = this.getSource(this.sourceMap[0].path)\r\n        // this.viewComponent.getChildByName(\"gameArea\").addChild(this.wrapView);\r\n        find(\"slotBg/gameArea\",ApplicationGlobal.mainPanel).addChild(this.wrapView)\r\n        this.sendNotification(BgMediatorConst.UPDATE_CURRENT_SCORE)\r\n        this.listenerEvent()\r\n    }\r\n\r\n    protected listenerEvent() {\r\n\r\n    }\r\n\r\n    private  judgeTheGamePopUp(cb){\r\n        AudioManager.getInstance().playSound(SoundList.theRollerStops)\r\n        // const fbp = getBgProxy();\r\n        // const nextGame = fbp.getIsChangeGameRunning()\r\n        // if (nextGame !== -1) {\r\n        //\r\n        // }else {\r\n        // }\r\n        // this.sendNotification(CommandDefine.BG, { dialogType: DialogType.BIG_WIN, order: \"total\", keeptime: 3000 }, BgMediatorConst.SHOW_DIALOG_WIN)\r\n        window.setTimeout(()=>{\r\n          cb()\r\n        },1000)\r\n    }\r\n}\r\n"]}