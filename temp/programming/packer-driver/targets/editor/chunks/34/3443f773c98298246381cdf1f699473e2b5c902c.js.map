{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/gxfc/Slot/Command/BgCommand.ts"],"names":["BgCommand","DialogType","BgMediatorConst","SubGameType","config","getBgProxy","getSocketProxy","BaseCommand","UseSetOption","BgCommandConst","listExecute","type","INIT_MAIN_PANEL","handler","notification","AUTH","sendAnth","GAME_TYPE_CHANGE","fbp","nextGame","getIsChangeGameRunning","gameTypePre","getLastGame","gameTypeNew","sendNotification","START_FLY_BG","INITSCORE","state","window","setTimeout","_gameRunner","getTransferGameInfo","gameType","CHANGE_BG","getNextGame","MAIN","SUB_GAME2","SUB_GAME1","setIsChangeNextGameType","UPDATE_GAME_STATUS","setDisable","UPDATE_BET_AMOUNT","order","getBody","updateBetAmount","AUTO_LAUNCH","checkAutoLaunch","sendLaunch","subtractAutoLaunchTimes","SHOW_DIALOG_WIN","dialogType","amount","keepTime","done","_amount","getCurrentScore","_keepTime","magnification","getMagnification","win","winning","find","item","minRate","maxRate","BIG_WIN","name","MEGA_WIN","SUPER_WIN","JACKPOT","str","getShiftAmount","baseBetAmount","value","Instance","setGameOption","betTarget","lineCount","linesQueue","length","execute"],"mappings":"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","sourcesContent":["import Facade from \"../../Framework/care/Facade\"\r\nimport { INotification } from \"../../Framework/interfaces/INotification\"\r\nimport { DialogType } from \"../Component/gxfc_DialogWin\";\r\nimport { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { ProxyDefine } from \"../Const/ProxyDefine\";\r\nimport { BgMediatorConst } from \"../Mediator/BgMediator\";\r\nimport { RollerMediatorConst } from \"../Mediator/RollerMediator\";\r\nimport { SubGameType } from \"../Proxy/SocketProxy\";\r\nimport config from \"../config\";\r\nimport { getBgProxy, getSocketProxy } from \"../utils\";\r\nimport { BaseCommand, IListExecute } from './BaseCommand'\r\nimport UseSetOption from \"db://assets/script/utils/UseSetOption\";\r\nexport enum BgCommandConst {\r\n\tAUTH = \"authentication\",\r\n\t/**切换游戏界面 */\r\n\tGAME_TYPE_CHANGE = \"gameTypeChange\",\r\n\t/**检查自动启动启动，如果是就进行下一局 */\r\n\tAUTO_LAUNCH = \"autoLaunch\"\r\n}\r\n\r\n// const listNotificationConst: Array<IlistNotificationer<FruitsSlotCommand>> = [\r\n// \t{\r\n// \t\ttype: MainSlotViewType.INIT_MAIN_PANEL,\r\n// \t\thandler(notification: INotification) {\r\n\r\n// \t\t\treturn false\r\n// \t\t}\r\n// \t}\r\n// ]\r\n\r\nexport class BgCommand extends BaseCommand {\r\n\tprotected listExecute: Array<IListExecute<BgCommand>> = [\r\n\t\t{\r\n\t\t\ttype: BgMediatorConst.INIT_MAIN_PANEL,\r\n\t\t\thandler(notification: INotification) {\r\n\t\t\t\t// this.updateBetAmount(\"curr\")\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BgCommandConst.AUTH,\r\n\t\t\thandler(notification: INotification) {\r\n\t\t\t\tgetSocketProxy().sendAnth()\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BgCommandConst.GAME_TYPE_CHANGE,\r\n\t\t\thandler(notification: INotification) {\r\n\t\t\t\tconst fbp = getBgProxy();\r\n\t\t\t\tconst nextGame = fbp.getIsChangeGameRunning()\r\n\t\t\t\tif (nextGame !== -1) {\r\n\t\t\t\t\t// //开始切换屏幕\r\n\t\t\t\t\tconst gameTypePre = fbp.getLastGame()\r\n\t\t\t\t\tconst gameTypeNew = nextGame\r\n\t\t\t\t\t// 播放飞水果动画,2秒的时候悄悄切换界面\r\n\t\t\t\t\tthis.sendNotification(BgMediatorConst.START_FLY_BG)\r\n                    this.sendNotification(BgMediatorConst.INITSCORE,{state:true})\r\n\t\t\t\t\twindow.setTimeout(() => {\r\n                        // 更换背景\r\n                        const _gameRunner: SubGameType = getSocketProxy().getTransferGameInfo().gameType()\r\n                        this.sendNotification(BgMediatorConst.CHANGE_BG, { gameType:  getBgProxy().getNextGame() })\r\n\t\t\t\t\t\t// 先卸载之前的游戏，由于是渐出，所以给一个时间\r\n\t\t\t\t\t\tif (gameTypePre === SubGameType.MAIN || gameTypePre === SubGameType.SUB_GAME2) {\r\n\t\t\t\t\t\t\t//getBgProxy().setDisable(false)\r\n\t\t\t\t\t\t\t// this.sendNotification(CommandDefine.ROLLER, {}, RollerMediatorConst.UNINSTALL_ROLLER_PANEL)\r\n\t\t\t\t\t\t} else if (gameTypePre === SubGameType.SUB_GAME1) {\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\t\t\tif (gameTypeNew === SubGameType.MAIN) {\r\n\t\t\t\t\t\t\t\tgetBgProxy().setIsChangeNextGameType(gameTypePre, 0)\r\n\t\t\t\t\t\t\t\tthis.sendNotification(BgMediatorConst.UPDATE_GAME_STATUS)\r\n\t\t\t\t\t\t\t\t// this.sendNotification(CommandDefine.ROLLER, { gameType: 0 }, RollerMediatorConst.INIT_ROLLER_PANEL)\r\n\t\t\t\t\t\t\t} else if (gameTypeNew === SubGameType.SUB_GAME1) {\r\n\t\t\t\t\t\t\t\t//getBgProxy().setDisable(false)\r\n\t\t\t\t\t\t\t\t// this.sendNotification(CommandDefine.ROLLER, { gameType: 1 }, RollerMediatorConst.INIT_ROLLER_PANEL)\r\n\t\t\t\t\t\t\t} else if (gameTypeNew === SubGameType.SUB_GAME2) {\r\n\t\t\t\t\t\t\t\t//大滑槽\r\n\t\t\t\t\t\t\t\t//getBgProxy().setDisable(false)\r\n\t\t\t\t\t\t\t\t// this.sendNotification(CommandDefine.ROLLER, { gameType: 2 }, RollerMediatorConst.INIT_ROLLER_PANEL)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 300)\r\n\t\t\t\t\t}, 1000)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetBgProxy().setDisable(false)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// {\r\n\t\t// \ttype: BgMediatorConst.UPDATE_NUMBER,\r\n\t\t// \thandler(notification: INotification) {\r\n\t\t// \t\tconst betAmount = this.getSocketProxy().getRepository().userServerData\r\n\t\t// \t\treturn {\r\n\t\t// \t\t\tbetAmount: betAmount,\r\n\t\t// \t\t\tscore: 0\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// },\r\n\t\t{\r\n\t\t\ttype: BgMediatorConst.UPDATE_BET_AMOUNT,\r\n\t\t\thandler(notification: INotification) {\r\n\t\t\t\tconst { order } = notification.getBody()\r\n\t\t\t\treturn this.updateBetAmount(order)\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BgCommandConst.AUTO_LAUNCH,\r\n\t\t\thandler(notification: INotification) {\r\n\t\t\t\tif (getBgProxy().checkAutoLaunch()) {\r\n\t\t\t\t\tgetSocketProxy().sendLaunch()\r\n\r\n\t\t\t\t\tconst fbp = getBgProxy();\r\n\t\t\t\t\tif (fbp.getNextGame() === SubGameType.MAIN) {\r\n\t\t\t\t\t\tgetBgProxy().subtractAutoLaunchTimes()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BgMediatorConst.SHOW_DIALOG_WIN,\r\n\t\t\thandler(notification: INotification) {\r\n                const { dialogType, amount, keepTime, order, done } = notification.getBody()\r\n\t\t\t\tconst _amount = amount || getSocketProxy().getTransferGameInfo().getCurrentScore(order)\r\n\t\t\t\tconst _keepTime = keepTime || 2500\r\n\t\t\t\t//获取奖励类型\r\n\t\t\t\tconst magnification = getSocketProxy().getTransferGameInfo().getMagnification()\r\n\t\t\t\tconst win = config.winning.find(item => item.minRate <= magnification && magnification <= item.maxRate)\r\n\t\t\t\tif (win && !dialogType) {\r\n\t\t\t\t\tlet dialogType: DialogType = DialogType.BIG_WIN;\r\n\t\t\t\t\tswitch (win.name) {\r\n\t\t\t\t\t\tcase \"bigwin\": dialogType = DialogType.BIG_WIN; break;\r\n\t\t\t\t\t\tcase \"megawin\": dialogType = DialogType.MEGA_WIN; break;\r\n\t\t\t\t\t\tcase \"superwin\": dialogType = DialogType.SUPER_WIN; break;\r\n\t\t\t\t\t\tcase \"jackpot\": dialogType = DialogType.JACKPOT; break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn { dialogType, amount: _amount, keepTime: _keepTime, done }\r\n\t\t\t\t} else if (dialogType) {\r\n\t\t\t\t\t//如果dialogType被强制赋值，那么就会强制显示\r\n\t\t\t\t\treturn { dialogType, amount: _amount, keepTime: _keepTime, done }\r\n\t\t\t\t}else {\r\n                    done()\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\tprivate updateBetAmount(order: 'add' | 'subtract' | \"max\" | \"curr\") {\r\n        let  str=getSocketProxy().getShiftAmount(order)\r\n        const baseBetAmount = str.value\r\n        UseSetOption.Instance().setGameOption(\"gxfc\", { betTarget:str})\r\n        const lineCount = config.linesQueue.length\r\n        return { baseBetAmount, lineCount }\r\n\t}\r\n\tpublic execute(notification: INotification): void {\r\n\t\tsuper.execute(notification)\r\n\t}\r\n}\r\n"]}