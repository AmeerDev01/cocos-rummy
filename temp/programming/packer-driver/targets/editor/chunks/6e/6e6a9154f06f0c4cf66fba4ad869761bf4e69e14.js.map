{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/components/Yxx_Rule.ts"],"names":["_decorator","Button","Node","BaseComponent","ccclass","property","Yxx_Rule","propertyNode","props_btn_close","props","events","close","start","initState","bindEvent","node","on","EventType","TOUCH_END","useProps","key","value","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAqCC,MAAAA,I,OAAAA,I;;AACjDC,MAAAA,a,iBAAAA,a;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;0BAajBM,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb;AAAA;AAAA,0CACoE;AAAA;AAAA;AAAA,eAKzDC,YALyD,GAK1C;AACxBC,YAAAA,eAAe,EAAE,IAAIP,MAAJ;AADO,WAL0C;AAAA,eAS5DQ,KAT4D,GAS5C,EAT4C;AAAA,eAY5DC,MAZ4D,GAY3C;AACvBC,YAAAA,KAAK,EAAE,MAAM,CAAG;AADO,WAZ2C;AAAA;;AACnEC,QAAAA,KAAK,GAAG,CAEP;;AAaSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKP,YAAL,CAAkBC,eAAlB,CAAkCO,IAAlC,CAAuCC,EAAvC,CAA0Cd,IAAI,CAACe,SAAL,CAAeC,SAAzD,EAAoE,MAAM;AACzE,iBAAKR,MAAL,CAAYC,KAAZ;AACA,WAFD;AAIA;;AAESQ,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD,CACpE;;AAESC,QAAAA,MAAM,GAAS,CAExB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAtCkE,O","sourcesContent":["import { _decorator, Button, Component, Font, Label, log, Node, resources, Sprite, SpriteFrame } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport config from '../config';\r\nimport { sourceManageSeletor } from '../index';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n}\r\nexport interface IEvent {\r\n\tclose: () => void\r\n}\r\n\r\n@ccclass('Yxx_Rule')\r\nexport class Yxx_Rule extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_close: new Button(),\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tclose: () => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_close.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.events.close();\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}