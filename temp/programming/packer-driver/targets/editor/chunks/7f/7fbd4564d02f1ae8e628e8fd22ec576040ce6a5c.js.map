{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/viewModel/login_v2/LoginPageV2ViewModel.ts"],"names":["LoginPageV2ViewModel","Prefab","sys","ViewModel","LoginDialogV2ViewModel","fetcher","lang","sourceManageSeletor","PrefabPathDefine","EffectType","addToastAction","ApiUrl","getPackageName","registerAppsflyerEvents","sendNativeVibrate","BaseViewModel","config","deviceInfo","ActivityViewModel","constructor","loginDialogV2ViewModel","begin","setEvent","onOpenLoginDialog","mountView","getFileAsync","_LOGIN_DIALOG_LOGIN_V2","source","appendTo","viewNode","effectType","EFFECT1","isModal","closeHandler","unMount","EFFECT2","then","loginDoneHandler","comp","events","onLoginSuccess","errorHandler","errorInfo","dispatch","content","openService","serviceVm","_HELL_SERVICE_WEBVIEW","onClosePanel","setProps","openUrl","customerUrl","openHomePage","openURL","shareUrl","openActivity","activityViewModel","_HELL_ACTIVITY","retryHndler","loginTodo","isforce","props","isAutoLogin","isFastLogin","checkFastLogin","write","k","HallModule","GuestAutoLogin","placeStr","guestLogin","localStorage","removeItem","AutoLoginFaild","send","LOGIN_PWD","type","macCode","getUniqueId","pkgCode","data","values","split","token","length","isReg","Boolean","setItem","catch","e","showRetryButton","console","log","Promise","reslove","reject","getItem","trim","LOGIN_FAST","connect","initProps","inject","state"],"mappings":"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","sourcesContent":["import { Node, Prefab, sys } from \"cc\"\r\nimport ViewModel from \"../../../base/ViewModel\"\r\nimport { Hall_LoginPageV2, IProps, IEvent } from \"../../components/login_v2/Hall_LoginPageV2\"\r\nimport { StateType } from \"../../store/reducer\"\r\nimport LoginDialogV2ViewModel from \"./LoginDialogV2ViewModel\"\r\nimport { fetcher, lang, sourceManageSeletor } from \"../../index\"\r\nimport { PrefabPathDefine } from \"../../sourceDefine/prefabDefine\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { addToastAction, ToastType } from \"../../store/actions/baseBoard\"\r\nimport { ApiUrl } from \"../../apiUrl\"\r\nimport { getPackageName, registerAppsflyerEvents, sendNativeVibrate } from \"../../../common/bridge\"\r\nimport BaseViewModel from \"../BaseViewModel\";\r\nimport { Hall_Service, IState as SIState, IProps as SIProps, IEvent as SIEvent } from '../../components/Hall_Service';\r\nimport { config, deviceInfo } from \"../../config\"\r\nimport ActivityViewModel from \"../ActivityViewModel\"\r\n\r\nclass LoginPageV2ViewModel extends ViewModel<Hall_LoginPageV2, IProps, IEvent> {\r\n  constructor() {\r\n    super('Hall_LoginPageV2')\r\n  }\r\n  private loginDialogV2ViewModel: LoginDialogV2ViewModel\r\n  protected async begin() {\r\n    this.setEvent({\r\n      onOpenLoginDialog: async () => {\r\n        if (this.loginDialogV2ViewModel) return\r\n        this.loginDialogV2ViewModel = new LoginDialogV2ViewModel().mountView(\r\n          (await sourceManageSeletor().getFileAsync(PrefabPathDefine._LOGIN_DIALOG_LOGIN_V2, Prefab)).source).appendTo(this.viewNode, {\r\n            effectType: EffectType.EFFECT1,\r\n            isModal: true\r\n          }).setEvent({\r\n            closeHandler: () => {\r\n              this.loginDialogV2ViewModel.unMount(EffectType.EFFECT2).then(() => {\r\n                this.loginDialogV2ViewModel = null\r\n              })\r\n            },\r\n            loginDoneHandler: () => {\r\n              this.comp.events.onLoginSuccess()\r\n            },\r\n            errorHandler: (errorInfo) => {\r\n              this.dispatch(addToastAction({ content: errorInfo }))\r\n            }\r\n          })\r\n      },\r\n      openService: async () => {\r\n        const serviceVm = new BaseViewModel<Hall_Service, SIState, SIProps, SIEvent>('Hall_Service').mountView((await sourceManageSeletor().getFileAsync(PrefabPathDefine._HELL_SERVICE_WEBVIEW, Prefab)).source)\r\n          .appendTo(this.viewNode, { effectType: EffectType.EFFECT1, isModal: true }).setEvent({\r\n            onClosePanel: () => {\r\n              serviceVm.unMount(EffectType.EFFECT2)\r\n            }\r\n          }).setProps({\r\n            openUrl: `${config.customerUrl}`\r\n          })\r\n      },\r\n      openHomePage: () => {\r\n        sys.openURL(config.shareUrl)\r\n      },\r\n      openActivity: async () => {\r\n        const activityViewModel = new ActivityViewModel().mountView((await sourceManageSeletor().getFileAsync(PrefabPathDefine._HELL_ACTIVITY, Prefab)).source)\r\n          .appendTo(this.viewNode, { effectType: EffectType.EFFECT1, isModal: true }).setEvent({\r\n            onClosePanel: () => {\r\n              activityViewModel.unMount(EffectType.EFFECT2)\r\n            }\r\n          })\r\n      },\r\n      retryHndler: () => {\r\n        this.loginTodo(true)\r\n      }\r\n    })\r\n    this.loginTodo()\r\n  }\r\n\r\n  private async loginTodo(isforce: boolean = false) {\r\n    if (this.comp.props.isAutoLogin || isforce) {\r\n      const isFastLogin = await this.checkFastLogin()\r\n      if (isFastLogin === 'faild') {\r\n        //没有token\r\n        this.dispatch(addToastAction({ content: lang.write(k => k.HallModule.GuestAutoLogin, {}, { placeStr: \"游客登录中...\" }) }))\r\n        this.guestLogin()\r\n      } else if (!isFastLogin) {\r\n        //有token但是登录失败\r\n        sys.localStorage.removeItem(\"token\")\r\n        this.dispatch(addToastAction({ content: lang.write(k => k.HallModule.AutoLoginFaild, {}, { placeStr: \"请手动登录\" }) }))\r\n      } else {\r\n        // this.dispatch(addToastAction({ content: lang.write(k => k.HallModule.LoginMark, {}, { placeStr: \"已自动登录\" }) }))\r\n        //登录操作完成之后\r\n        sendNativeVibrate(200)\r\n        // this.dispatch(addToastAction({ content: \"已自动登录\" }))\r\n        this.comp.events.onLoginSuccess()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**游客登录 */\r\n  private guestLogin() {\r\n    fetcher.send(ApiUrl.LOGIN_PWD, { type: 5, macCode: deviceInfo.getUniqueId(), pkgCode: getPackageName() }).then((data) => {\r\n      const values = data.split(\",\")\r\n      let token = values.length === 1 ? data : values[0];\r\n      const isReg = values.length === 1 ? false : Boolean(values[1]);\r\n      //登录成功\r\n      sys.localStorage.setItem('token', token)\r\n      this.comp.events.onLoginSuccess()\r\n\r\n      if (isReg) {\r\n        registerAppsflyerEvents('', '')\r\n      }\r\n    }).catch((e) => {\r\n      this.comp.showRetryButton()\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  /**是否可以快读登录 */\r\n  private checkFastLogin(): Promise<boolean | 'faild'> {\r\n    return new Promise((reslove, reject) => {\r\n      let token = sys.localStorage.getItem(\"token\");\r\n      if (token && token.trim()) {\r\n        fetcher.send(ApiUrl.LOGIN_FAST, {\r\n          pkgCode: getPackageName(),\r\n          macCode: deviceInfo.getUniqueId(),\r\n          token: token\r\n        }, \"post\", {\r\n          // \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }).then((data) => {\r\n          const values = data.split(\",\")\r\n          token = values.length === 1 ? data : values[0];\r\n          sys.localStorage.setItem('token', token)\r\n          reslove(token ? true : false)\r\n        }).catch((e) => {\r\n          // this.dispatch(addToastAction({ content: e }))\r\n          this.comp.showRetryButton()\r\n          reslove(false)\r\n        })\r\n      } else {\r\n        reslove('faild')\r\n      }\r\n    })\r\n  }\r\n  public connect(initProps: Partial<IProps> = {}) {\r\n    this.inject(initProps, (state: StateType) => {\r\n      return {}\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default LoginPageV2ViewModel\r\n"]}