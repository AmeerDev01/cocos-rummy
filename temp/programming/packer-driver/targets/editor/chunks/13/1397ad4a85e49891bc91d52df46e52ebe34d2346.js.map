{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/utils/InputValidator.ts"],"names":["InputValidator","getStore","addToastAction","lang","constructor","isPass","errorinfo","defaultChart","begin","trim","isNotEmpty","chart","customErrStr","length","push","write","k","InputModule","isAllNumber","test","isDecimal","isAllowFloat","isPhoneNumber","isIDAPhoneNumber","isSmsCode","isChartLength","_chart","num1","num2","isEmtry","done","passHandler","showErrToast","dispatch","content","join"],"mappings":"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","sourcesContent":["import { getStore } from \"../hall/store\"\r\nimport { ToastPosition, addToastAction } from \"../hall/store/actions/baseBoard\"\r\nimport { lang } from \"../hall\"\r\n\r\nexport default class InputValidator {\r\n  constructor() { }\r\n  public isPass: boolean = false\r\n  public errorinfo: string[] = []\r\n  private defaultChart = \"\"\r\n  begin(defaultChart: string = \"\") {\r\n    this.isPass = true\r\n    this.errorinfo = []\r\n    this.defaultChart = typeof defaultChart === 'string' ? defaultChart.trim() : defaultChart\r\n    return this\r\n  }\r\n  isNotEmpty(chart?: string, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    if (!(chart || this.defaultChart).length) {\r\n      this.isPass = false\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isNotEmpty))\r\n    }\r\n    return this\r\n  }\r\n  isAllNumber(chart?: string, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    const isPass = /^\\d+$/.test((typeof chart === 'string' ? chart.trim() : chart) || this.defaultChart)\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isAllNumber))\r\n    }\r\n    return this\r\n  }\r\n  isDecimal(chart?: string, isAllowFloat: boolean = true, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    let isPass = /^\\d+(\\.\\d{1,2})?$/.test((typeof chart === 'string' ? chart.trim() : chart) || this.defaultChart)\r\n    if (!isAllowFloat) {\r\n      isPass = /^[1-9]\\d{0,15}$/.test((typeof chart === 'string' ? chart.trim() : chart) || this.defaultChart)\r\n    }\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isDecimal))\r\n    }\r\n    return this\r\n  }\r\n  isPhoneNumber(chart?: string, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    const isPass = /^\\d{11,13}$/.test((typeof chart === 'string' ? chart.trim() : chart) || this.defaultChart)\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isPhoneNumber))\r\n    }\r\n    return this\r\n  }\r\n  /**印尼的手机号码要 8开头的手机号码 */\r\n  isIDAPhoneNumber(chart?: string, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    const isPass = /^8\\d{9,11}$/.test((typeof chart === 'string' ? chart.trim() : chart) || this.defaultChart)\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isIDAPhoneNumber))\r\n    }\r\n    return this\r\n  }\r\n  isSmsCode(chart?: string, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    const isPass = /^\\d{6}$/.test((typeof chart === 'string' ? chart.trim() : chart) || this.defaultChart)\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isSmsCode))\r\n    }\r\n    return this\r\n  }\r\n  isChartLength(length: [number, number], chart?: string, customErrStr?: string) {\r\n    if(!this.isPass) return this;\r\n    const _chart = (typeof chart === 'string' ? chart.trim() : chart)\r\n    const isPass = _chart.length >= length[0] && _chart.length <= length[1]\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      // `masukkan${length[0]}~${length[1]}aksara`\r\n      this.errorinfo.push(customErrStr || lang.write(k => k.InputModule.isChartLength, { num1: length[0], num2: length[1] }))\r\n    }\r\n    return this\r\n  }\r\n  isEmtry(chart: string, customErrStr: string) {\r\n    if(!this.isPass) return this;\r\n    const _chart = (typeof chart === 'string' ? chart.trim() : chart)\r\n    const isPass = _chart.length !== 0;\r\n    if (!isPass) {\r\n      this.isPass = false\r\n      // `masukkan${length[0]}~${length[1]}aksara`\r\n      this.errorinfo.push(customErrStr)\r\n    }\r\n    return this\r\n  }\r\n  /**展示错误信息 */\r\n  done(passHandler: (validator: InputValidator) => void, showErrToast: boolean = true) {\r\n    if (this.isPass) {\r\n      passHandler(this)\r\n    } else if (!this.isPass && showErrToast) {\r\n      getStore().dispatch(addToastAction({ content: this.errorinfo.join(',') }))\r\n    }\r\n  }\r\n}"]}