{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fish/components/Fish_Rotation.ts"],"names":["Node","_decorator","BaseComponent","ccclass","property","Fish_Rotation","propertyNode","props","events","onClose","start","initState","bindEvent","node","on","EventType","TOUCH_END","useProps","key","value","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAAgBA,MAAAA,I,OAAAA,I;AAA4BC,MAAAA,U,OAAAA,U;;AACnCC,MAAAA,a,iBAAAA,a;;;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;+BAYjBI,a,WADZF,OAAO,CAAC,eAAD,C,gBAAR,MACaE,aADb;AAAA;AAAA,0CACyE;AAAA;AAAA;AAAA,eAI9DC,YAJ8D,GAI/C,EAJ+C;AAAA,eAMjEC,KANiE,GAMjD,EANiD;AAAA,eASjEC,MATiE,GAShD;AACvBC,YAAAA,OAAO,EAAE,MAAM,CAAG;AADK,WATgD;AAAA;;AACxEC,QAAAA,KAAK,GAAG,CACP;;AAWSC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAEA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKC,IAAL,CAAUC,EAAV,CAAad,IAAI,CAACe,SAAL,CAAeC,SAA5B,EAAuC,MAAM;AAC5C,iBAAKR,MAAL,CAAYC,OAAZ;AACA,WAFD;AAGA;;AAESQ,QAAAA,QAAQ,CAACC,GAAD,EAAiCC,KAAjC,EAAgE,CACjF;;AAESC,QAAAA,MAAM,GAAS,CACxB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CACzB;;AA/BuE,O","sourcesContent":["import { Label, Node, Sprite, Toggle, Vec3, _decorator, instantiate, sp } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { createSkeleton, createSpriteAtlasNode } from '../../../common/fish/FishTool';\r\nimport { fishBatterySkinConfig } from '../config/ByBatterySkinConfig';\r\nimport { sourceManageSelector } from '../index';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n}\r\n\r\nexport interface IProps {\r\n}\r\nexport interface IEvent {\r\n\tonClose: () => void\r\n}\r\n\r\n@ccclass('Fish_Rotation')\r\nexport class Fish_Rotation extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\t}\r\n\r\n\tprotected propertyNode = {\r\n\t}\r\n\tpublic props: IProps = {\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tonClose: () => { },\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.events.onClose();\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps | '_setDone', value: { pre: any, cur: any }) {\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\t}\r\n}\r\n\r\n"]}