{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/PHOENIX111/store/reducer/roller.ts"],"names":["instantiate","ActionTypes","initState","reduxAct","default","config","copy","createReducer","PHOENIX_BEGIN_ROLL","state","payload","_state","rollerIndex","rollData","rollerMap","rolling","direction","normalRollOption","speed","stopIconIndex","forEach","item","roundAllEnd","PHOENIX_INIT_ROLL","PHOENIX_SET_STOP_ROLL","rollerMapItem","PHOENIX_END_ROLLING","PHOENIX_SET_FLICKER","iconEffectData","iconEffect","coord","flickerCoord","PHOENIX_SET_ROUNT_END","PHOENIX_SET_ROLL_SPEED","speedBackUp","speedMultiple","i","PHOENIX_SET_YUANBAO_FLICKER","iconYuanBaoEffectData","PHOENIX_SET_FREEGAME_FLICKER","iconFreeGameEffectData"],"mappings":"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","sourcesContent":["import { instantiate } from \"cc\";\r\nimport { ActionTypes, ActionPayLoad, InitStateType, initState } from \"../actions/roller\";\r\nimport { default as reduxAct } from 'redux-act'\r\nimport config from \"../../config\";\r\nimport { copy } from \"../../../../utils/tool\";\r\n\r\nexport default reduxAct.createReducer<InitStateType>({\r\n  [ActionTypes.PHOENIX_BEGIN_ROLL]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_BEGIN_ROLL>): InitStateType => {\r\n    const _state = instantiate(state)\r\n    if (payload.rollerIndex !== -1) {\r\n      const rollData = _state.rollerMap[payload.rollerIndex]\r\n      _state.rollerMap[payload.rollerIndex].rolling = true\r\n      _state.rollerMap[payload.rollerIndex].direction = payload.direction || config.normalRollOption.direction\r\n      payload.speed && (_state.rollerMap[payload.rollerIndex].speed = payload.speed)\r\n      // _state.rollerMap[payload.rollerIndex].speed = payload.speed || (rollData.LargeRoller ? config.largeRollOption.rollerSpeed : config.normalRollOption.rollerSpeed)\r\n      // _state.rollerMap[payload.rollerIndex].speedBackUp = payload.speed || (rollData.LargeRoller ? config.largeRollOption.rollerSpeed : config.normalRollOption.rollerSpeed)\r\n      _state.rollerMap[payload.rollerIndex].stopIconIndex = -1\r\n    } else {\r\n      _state.rollerMap.forEach(item => {\r\n        item.rolling = true\r\n        item.direction = payload.direction || config.normalRollOption.direction\r\n        payload.speed && (item.speed = payload.speed)\r\n        // item.speed = payload.speed || (item.LargeRoller ? config.largeRollOption.rollerSpeed : config.normalRollOption.rollerSpeed)\r\n        // item.speedBackUp = payload.speed || (item.LargeRoller ? config.largeRollOption.rollerSpeed : config.normalRollOption.rollerSpeed)\r\n        item.stopIconIndex = -1\r\n      })\r\n    }\r\n    _state.roundAllEnd = false\r\n    return {\r\n      ..._state\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_INIT_ROLL]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_INIT_ROLL>): InitStateType => {\r\n    // const _state = instantiate(state)\r\n    // _state.rollerMap = payload.rollerMap\r\n    // return {\r\n    //   ..._state\r\n    // }\r\n    return {\r\n      ...state,\r\n      rollerMap: copy(payload.rollerMap)\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_SET_STOP_ROLL]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_SET_STOP_ROLL>): InitStateType => {\r\n    const rollerMapItem = instantiate(state.rollerMap[payload.rollerIndex])\r\n    rollerMapItem.stopIconIndex = payload.stopIconIndex\r\n    state.rollerMap[payload.rollerIndex] = rollerMapItem\r\n    // const _state = instantiate(state)\r\n    // _state.rollerMap[payload.rollerIndex].stopIconIndex = payload.stopIconIndex\r\n    return {\r\n      ...state,\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_END_ROLLING]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_END_ROLLING>): InitStateType => {\r\n    // const _state = instantiate(state)\r\n    state.rollerMap[payload.rollerIndex].rolling = payload.rolling\r\n    return {\r\n      ...state\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_SET_FLICKER]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_SET_FLICKER>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      iconEffectData: {\r\n        iconEffect: payload.iconEffect,\r\n        coord: payload.flickerCoord\r\n      }\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_SET_ROUNT_END]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_SET_ROUNT_END>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      roundAllEnd: payload.roundAllEnd\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_SET_ROLL_SPEED]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_SET_ROLL_SPEED>): InitStateType => {\r\n    const _state = instantiate(state)\r\n    if (payload.rollerIndex) {\r\n      _state.rollerMap[payload.rollerIndex].speed = _state.rollerMap[payload.rollerIndex].speedBackUp * payload.speedMultiple\r\n    } else {\r\n      _state.rollerMap.forEach(i => i.speed = i.speedBackUp * payload.speedMultiple)\r\n    }\r\n    return {\r\n      ..._state\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_SET_YUANBAO_FLICKER]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_SET_YUANBAO_FLICKER>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      iconYuanBaoEffectData: {\r\n        iconEffect: payload.iconEffect,\r\n        coord: payload.flickerCoord\r\n      }\r\n    }\r\n  },\r\n  [ActionTypes.PHOENIX_SET_FREEGAME_FLICKER]: (state, payload: ActionPayLoad<ActionTypes.PHOENIX_SET_FREEGAME_FLICKER>): InitStateType => {\r\n    return {\r\n      ...state,\r\n      iconFreeGameEffectData: {\r\n        iconEffect: payload.iconEffect,\r\n        coord: payload.flickerCoord\r\n      }\r\n    }\r\n  },\r\n}, initState);\r\n"]}