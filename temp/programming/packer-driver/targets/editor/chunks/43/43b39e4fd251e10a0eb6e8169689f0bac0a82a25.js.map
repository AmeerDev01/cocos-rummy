{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/viewModel/WithdrawBankViewModel.ts"],"names":["WithdrawBankViewModel","ViewModel","ApiUrl","setWithdrawChannelList","fetcher","constructor","begin","connect","storeState","store","getState","withdraw","withdrawBankChannelList","length","send","WITHDRAW_BANK_CHANNEL_LIST","then","rsp","dispatch","catch","e","console","log","inject","state"],"mappings":";;;mIAUMA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATCC,MAAAA,S;;AAIEC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,sB,iBAAAA,sB;;AACAC,MAAAA,O,iBAAAA,O;;;;;;;;;AAGHJ,MAAAA,qB,GAAN,MAAMA,qBAAN;AAAA;AAAA,kCAAiF;AAC/EK,QAAAA,WAAW,GAAG;AACZ,gBAAM,mBAAN;AACD;;AAESC,QAAAA,KAAK,GAAG,CAEjB;;AAEMC,QAAAA,OAAO,GAAG;AACf,gBAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,QAAX,EAAnB;;AACA,cAAI,CAACF,UAAU,CAACG,QAAX,CAAoBC,uBAApB,CAA4CC,MAAjD,EAAyD;AACvD;AACA;AAAA;AAAA,oCAAQC,IAAR,CAAa;AAAA;AAAA,kCAAOC,0BAApB,EAAgD,EAAhD,EAAoD,KAApD,EAA2DC,IAA3D,CAAiEC,GAAD,IAAS;AACvE,mBAAKC,QAAL,CAAc;AAAA;AAAA,oEAAuBD,GAAvB,CAAd;AACD,aAFD,EAEGE,KAFH,CAEUC,CAAD,IAAO;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,aAJD;AAKD;;AACD,eAAKG,MAAL,CAAY;AACVX,YAAAA,uBAAuB,EAAEJ,UAAU,CAACG,QAAX,CAAoBC;AADnC,WAAZ,EAEIY,KAAD,IAAsB;AACvB,mBAAO;AACLZ,cAAAA,uBAAuB,EAAEY,KAAK,CAACb,QAAN,CAAeC;AADnC,aAAP;AAGD,WAND;AAOA,iBAAO,IAAP;AACD;;AA3B8E,O;;yBA8BlEZ,qB","sourcesContent":["import { Node } from \"cc\"\r\nimport ViewModel from \"../../base/ViewModel\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { Hall_WithdrawBank, IProps, IEvent } from \"../components/Hall_Withdraw/Hall_WithdrawBank\"\r\nimport Fetcher from \"../../utils/Fetcher\"\r\nimport { ApiUrl } from \"../apiUrl\"\r\nimport { setWithdrawChannelList } from \"../store/actions/withdraw\"\r\nimport { fetcher } from \"../index\"\r\n\r\n\r\nclass WithdrawBankViewModel extends ViewModel<Hall_WithdrawBank, IProps, IEvent> {\r\n  constructor() {\r\n    super('Hall_WithdrawBank')\r\n  }\r\n\r\n  protected begin() {\r\n\r\n  }\r\n\r\n  public connect() {\r\n    const storeState = this.store.getState() as StateType;\r\n    if (!storeState.withdraw.withdrawBankChannelList.length) {\r\n      //还没有数据，就要先加载\r\n      fetcher.send(ApiUrl.WITHDRAW_BANK_CHANNEL_LIST, {}, \"get\").then((rsp) => {\r\n        this.dispatch(setWithdrawChannelList(rsp))\r\n      }).catch((e) => {\r\n        console.log(e)\r\n      })\r\n    }\r\n    this.inject({\r\n      withdrawBankChannelList: storeState.withdraw.withdrawBankChannelList\r\n    }, (state: StateType) => {\r\n      return {\r\n        withdrawBankChannelList: state.withdraw.withdrawBankChannelList\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default WithdrawBankViewModel"]}