{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/yxx/viewModel/GameBoardViewModel.ts"],"names":["UITransform","Vec3","find","instantiate","sys","ViewModel","StoreInject","EffectType","config","initBetData","initHeadType","longStop","sourceManageSeletor","playMainBg","convertBetType","convertGameStatus","convertHeadType","convertResult","convertUserInfo","gameCacheData","SKT_MAG_TYPE","sktInstance","sktMsgListener","PrefabPathDefine","getStore","cancelBetAmount","changeMeGold","changeOnlineNumber","changeSeat","changeSeatBet","changeSeatWinlose","clearData","joinGame","quitGame","updatePower","changeAnimationStatus","changeGameStatus","countdown","initResult","AnimationStatus","GameStatus","BetAreaViewModel","FooterViewModel","HeadPanelViewModel","HistoryMinViewModel","LosePanelViewModel","SettingViewModel","WinPanelViewModel","cancelBet","clearBet","seatBet","global","lang","bundlePkgName","RuleViewModel","addToastAction","BANKER_ID","GameBoardViewModel","constructor","winLossViewModel","betAreaViewModel","headPanelViewModel","historyMinViewModel","completeCallback","t","begin","clear","setEvent","openSettingView","mountView","getFile","SET_PANEL","source","appendTo","effectType","EFFECT2","isModal","connect","openWinLossView","userInfos","balance","winList","map","v","WIN_PANEL","comp","node","setProps","LOSE_PANEL","clearView","unMount","dispatch","closeSubGame","openRulePanel","RULE_PANEL","animationStatus","giveGift","value","memberId","num","data","roomId","interactionId","toSitId","sendSktMessage","GIVE_GIFT","listenerAuth","addOnce","AUTH","localStorage","setItem","JSON","stringify","testConfig","wsUrl","token","getItem","gameId","listenerUserJoinOrQuit","add","JOIN_GAME","error","hallDispatch","content","write","k","InitGameModule","GameBoardInit","placeStr","confirmContent","myInfo","leftUsers","leftMember","rightUsers","rightMember","myHead","seats","refactorSeat","results","gameType","isNotBet","BET","result","pop","seconds","startBet","memberNum","initView","initHead","memberBetDetail","STOP_BET","ONLINE_NUMBER_CHANGE","GOLD_CHANGE","gold","RECHANGE_ADD_GOLD","POWER_VERIFY","QUIT_GAME","GAME_SHOW","props","gameStatus","startCountdown","window","clearInterval","setInterval","stopCountdown","genSeats","seatNumber","gameOption","headTypes","concat","genSeatArray","users","count","isLeft","level","heads","i","head","index","length","push","lookOnIndex","forEach","userId","listenerBet","PUSH_BET","memberData","getSeatIndex","isMyBet","betType","type","betData","preBet","LAUNCHER_BET","resultCode","undefined","betId","betAmount","PUSH_RESULT","GAME_STATUE","prawnCrabMemberDrawPrizeVo","lotteryVo","handleBalance","filter","receiveMemberId","seat","x","y","headLocations","endPos","viewNode","getComponent","convertToWorldSpaceAR","flyGift","giveMemberId","getHeadPos","giftId","isFrom","pos","dealerPosition","myHeadPosition","onlineNumberPosition","listenerBalance","MY_BALANCE_PUSH","BALANCE_PUSH","fishPrawnCrabWinMemberVo","roomLeftInfoVos","roomRightInfoVos","updateWinloss","lastRoomLeftInfoVos","lastRoomRightInfoVos","roomInfoSize","roomWinInfo","newSeat","fishPrawnCrabSettlementVo","winloss","winGold","key","memberBet","unMountCallBack","reverse","inject","state","gameFlow","newResult","game","tipType","initConnect","HEAD_PANEL","getGameNode","BET_AREA","HISOTRY_MIN_PANEL","FOOTER","initEnd"],"mappings":"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","sourcesContent":["import { Game, UITransform, Vec3, find, game, instantiate, log, sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { IEvent, IProps, Yxx_GameBoard } from \"../components/Yxx_GameBoard\"\r\nimport config, { initBetData, initHeadType } from \"../config\"\r\nimport { longStop, sourceManageSeletor, yxxAudio } from \"../index\"\r\nimport { playMainBg } from \"../index\"\r\nimport { BetReturnData, FishPrawnCrabBalanceVo, FishPrawnCrabGameTypeVo, FishPrawnCrabJoinGameRoomInfoVo, FishPrawnCrabLotteryVo, FishPrawnCrabMemberInfoVo, FishPrawnCrabPushBetVo, FishPrawnCrabResultVo, convertBetType, convertGameStatus, convertHeadType, convertResult, convertUserInfo, gameCacheData } from \"../serverType\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\nimport { getStore } from \"../store\"\r\nimport { cancelBetAmount, changeMeGold, changeOnlineNumber, changeSeat, changeSeatBet, changeSeatWinlose, clearData, joinGame, otherJoinGame, quitGame, updatePower } from \"../store/actions/game\"\r\nimport { changeAnimationStatus, changeGameStatus, countdown, initResult } from \"../store/actions/gameFlow\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { AnimationStatus, BetData, ChangeGoldVo, GameStatus, HeadType, PowerVo, ReqGiftSo, ResGiftVo, UserInfo } from \"../type\"\r\nimport BetAreaViewModel from \"./BetAreaViewModel\"\r\nimport FooterViewModel from \"./FooterViewModel\"\r\nimport HeadPanelViewModel from \"./HeadPanelViewModel\"\r\nimport HistoryMinViewModel from \"./HistoryMinViewModel\"\r\nimport LosePanelViewModel from \"./LosePanelViewModel\"\r\nimport SettingViewModel from \"./SettingViewModel\"\r\nimport WinPanelViewModel from \"./WinPanelViewModel\"\r\nimport { cancelBet, clearBet, seatBet } from \"../store/actions/bet\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport { bundlePkgName } from \"../sourceDefine\"\r\nimport TaskScheduler, { Task, TaskSchedulerDefault } from \"../../../utils/TaskScheduler\"\r\nimport RuleViewModel from \"./RuleViewModel\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { addToastAction } from \"../../../hall/store/actions/baseBoard\"\r\nimport GiftUserViewModel, { BANKER_ID } from \"../../../common/viewModel/GiftUserViewModel\"\r\n\r\n@StoreInject(getStore())\r\nclass GameBoardViewModel extends ViewModel<Yxx_GameBoard, IProps, IEvent> {\r\n  constructor() {\r\n    super('Yxx_GameBoard')\r\n  }\r\n\r\n  private winLossViewModel: ViewModel<any, any, any>;\r\n  private betAreaViewModel: BetAreaViewModel;\r\n  private headPanelViewModel: HeadPanelViewModel;\r\n  private historyMinViewModel: HistoryMinViewModel;\r\n\r\n  private completeCallback: Function;\r\n\r\n  private countdown: number;\r\n\r\n  protected begin() {\r\n    // \r\n    this.clear();\r\n\r\n    this.setEvent({\r\n      openSettingView: () => {\r\n        new SettingViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.SET_PANEL).source)\r\n          .appendTo(find(\"Canvas\"), { effectType: EffectType.EFFECT2, isModal: true }).connect();\r\n      },\r\n      openWinLossView: (userInfos: UserInfo[], balance: number) => {\r\n        userInfos = gameCacheData.winList.map(v => convertUserInfo(v));\r\n        if (balance >= 0) {\r\n          this.winLossViewModel = new WinPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.WIN_PANEL).source)\r\n            .appendTo(this.comp.node)\r\n            .connect()\r\n            .setProps({\r\n              userInfos,\r\n              balance\r\n            });\r\n        } else {\r\n          this.winLossViewModel = new LosePanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.LOSE_PANEL).source)\r\n            .appendTo(this.comp.node)\r\n            .connect()\r\n            .setProps({\r\n              userInfos,\r\n              balance\r\n            });\r\n        }\r\n      },\r\n      clearView: () => {\r\n        if (this.winLossViewModel) {\r\n          this.winLossViewModel.unMount();\r\n          this.winLossViewModel = null;\r\n        }\r\n\r\n        this.dispatch(clearData(0));\r\n      },\r\n      quitGame: () => {\r\n        global.closeSubGame()\r\n      },\r\n      openRulePanel: () => {\r\n        new RuleViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.RULE_PANEL).source)\r\n          .appendTo(find(\"Canvas\"), { effectType: EffectType.EFFECT2, isModal: true }).connect();\r\n      },\r\n      changeAnimationStatus: (animationStatus: AnimationStatus) => {\r\n        this.dispatch(changeAnimationStatus(animationStatus));\r\n      },\r\n      giveGift: (value: number, memberId: string, num: number) => {\r\n        const data: ReqGiftSo = {\r\n          roomId: gameCacheData.roomId,\r\n          /**道具Id */\r\n          interactionId: value,\r\n          /**获赠玩家 */\r\n          toSitId: memberId,\r\n          /** 总共需要花费的金币 */\r\n          num: num\r\n        }\r\n        sktInstance.sendSktMessage(SKT_MAG_TYPE.GIVE_GIFT, data)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * 认证消息监听及处理\r\n   */\r\n  private listenerAuth() {\r\n    sktMsgListener.addOnce(SKT_MAG_TYPE.AUTH, bundlePkgName, (data: any) => {\r\n      sys.localStorage.setItem(\"auth\", JSON.stringify(data));\r\n    })\r\n\r\n    if (config.testConfig.wsUrl) {\r\n      const token = sys.localStorage.getItem(\"tokentest\");\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token\r\n      })\r\n    } else {\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token: sys.localStorage.getItem(\"token\"),\r\n        gameId: config.gameId\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 监听用户进出游戏\r\n   */\r\n  private listenerUserJoinOrQuit() {\r\n    sktMsgListener.add(SKT_MAG_TYPE.JOIN_GAME, bundlePkgName, (data: FishPrawnCrabJoinGameRoomInfoVo, error: string) => {\r\n      if (error) {\r\n        global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"进入游戏失败\" }) }))\r\n        global.closeSubGame({\r\n          confirmContent: lang.write(k => k.InitGameModule.GameBoardInit)\r\n        });\r\n        return;\r\n      }\r\n      if (!data.myInfo) {\r\n        global.hallDispatch(addToastAction({ content: lang.write(k => k.InitGameModule.GameBoardInit, {}, { placeStr: \"进入游戏失败\" }) }))\r\n        global.closeSubGame({\r\n          confirmContent: lang.write(k => k.InitGameModule.GameBoardInit)\r\n        });\r\n        return;\r\n      }\r\n      gameCacheData.leftUsers = data.leftMember;\r\n      gameCacheData.rightUsers = data.rightMember;\r\n      gameCacheData.roomId = data.roomId;\r\n      gameCacheData.memberId = data.myInfo.memberId;\r\n\r\n      const myHead = convertHeadType(data.myInfo);\r\n      this.dispatch(joinGame(myHead));\r\n      const seats = this.refactorSeat();\r\n\r\n      data.results = data.results ? data.results : [];\r\n      // 初始化结果\r\n      const results = data.results.map(v => convertResult(v));\r\n      const gameType = convertGameStatus(data.gameType);\r\n\r\n      const isNotBet = GameStatus.BET !== gameType\r\n      let result;\r\n      if (isNotBet) {\r\n        result = results.pop();\r\n      }\r\n\r\n      this.dispatch(initResult(results));\r\n\r\n      if (GameStatus.BET === gameType && data.seconds > 0) {\r\n        this.startBet(data.seconds);\r\n      } else {\r\n      }\r\n\r\n      // 改变在线人数\r\n      this.dispatch(changeOnlineNumber(data.memberNum));\r\n      // 初始化界面\r\n      this.initView();\r\n\r\n      // 初始化头像\r\n      this.headPanelViewModel.initHead(seats);\r\n      // 初始化下注\r\n      this.betAreaViewModel.initBetData(data.memberBetDetail, seats);\r\n\r\n      isNotBet && this.dispatch(changeGameStatus(GameStatus.STOP_BET, 0, result));\r\n    })\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.ONLINE_NUMBER_CHANGE, bundlePkgName, (data: any) => {\r\n      this.dispatch(changeOnlineNumber(data));\r\n    })\r\n\r\n    sktMsgListener.add(SKT_MAG_TYPE.GOLD_CHANGE, bundlePkgName, (data: ChangeGoldVo) => {\r\n      const gold = typeof (data) === 'number' ? data : data.gold;\r\n      this.dispatch(changeMeGold(gold));\r\n      this.dispatch(changeAnimationStatus(AnimationStatus.RECHANGE_ADD_GOLD));\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.POWER_VERIFY, bundlePkgName, (data: PowerVo[]) => {\r\n      this.dispatch(updatePower(data));\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.QUIT_GAME, bundlePkgName, (data: any) => {\r\n\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.GAME_SHOW, bundlePkgName, (data: any) => {\r\n      if (GameStatus.BET === this.comp.props.gameStatus) {\r\n        // 拿到最新的倒计时后，就减掉1秒\r\n        this.countdown = data.seconds - 1;\r\n      }\r\n    })\r\n  }\r\n\r\n  private t: number = 0;\r\n  private startCountdown() {\r\n    if (this.t > 0) {\r\n      window.clearInterval(this.t);\r\n      this.t = 0;\r\n    }\r\n    longStop();\r\n    this.dispatch(countdown(this.countdown));\r\n    this.t = window.setInterval(() => {\r\n      this.dispatch(countdown(--this.countdown));\r\n      if (this.countdown <= 0) {\r\n        window.clearInterval(this.t);\r\n        this.t = 0;\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  /**停止倒计时 */\r\n  private stopCountdown() {\r\n    longStop();\r\n    // 如果倒计时已经为0了，不处理了\r\n    if (this.comp.props.countdown <= 0) {\r\n      return;\r\n    }\r\n    this.t && window.clearInterval(this.t);\r\n    this.t = 0;\r\n    this.dispatch(countdown(0));\r\n  }\r\n\r\n  /**\r\n   * 构建座位\r\n   * @param data \r\n   * @returns \r\n   */\r\n  private genSeats() {\r\n    const seatNumber = config.gameOption.seatNumber;\r\n    gameCacheData.leftUsers = gameCacheData.leftUsers ? gameCacheData.leftUsers : [];\r\n    gameCacheData.rightUsers = gameCacheData.rightUsers ? gameCacheData.rightUsers : [];\r\n    let headTypes: HeadType[] = [];\r\n    headTypes = headTypes.concat(this.genSeatArray(gameCacheData.leftUsers, seatNumber / 2, true));\r\n    headTypes = headTypes.concat(this.genSeatArray(gameCacheData.rightUsers, seatNumber / 2, false));\r\n    return headTypes;\r\n  }\r\n\r\n  private genSeatArray(users: FishPrawnCrabMemberInfoVo[], count: number, isLeft: boolean) {\r\n    const level = isLeft ? 1 : 2;\r\n    const heads = [];\r\n    for (let i = 0; i < count; i++) {\r\n      let head: HeadType;\r\n      const index = i + (isLeft ? 0 : 3);\r\n      if (i < users.length) {\r\n        head = convertHeadType(users[i]);\r\n        // 左边第一个就是本局赢得最多\r\n        head.level = i === 0 ? level : 3;\r\n      } else {\r\n        head = initHeadType(index);\r\n      }\r\n      // 右边的索引从3开始\r\n      head.index = index;\r\n      heads.push(head);\r\n    }\r\n    return heads;\r\n  }\r\n\r\n  /**重构左右两边的座位，同时修改自己的座位号 */\r\n  private refactorSeat(): HeadType[] {\r\n    const myHead = this.comp.props.myHead;\r\n    // 默认是在旁观位置\r\n    myHead.index = config.gameOption.lookOnIndex;\r\n    const seats = this.genSeats();\r\n    seats.forEach(v => {\r\n      this.dispatch(changeSeat(v));\r\n      if (v.userId === myHead.userId) {\r\n        myHead.index = v.index;\r\n      }\r\n    });\r\n\r\n    this.dispatch(changeSeat(myHead));\r\n    return seats;\r\n  }\r\n\r\n  /**\r\n   * 监听下注\r\n   */\r\n  private listenerBet() {\r\n    sktMsgListener.add(SKT_MAG_TYPE.PUSH_BET, bundlePkgName, (data: FishPrawnCrabPushBetVo) => {\r\n      const userId = data.memberData.memberId + \"\";\r\n      const index = this.getSeatIndex(userId);\r\n      const isMyBet = this.comp.props.myHead.userId === userId;\r\n      const betType = convertBetType(data.memberData.type);\r\n      const betData = initBetData(index, userId, betType, data.memberData.gold);\r\n      betData.isMyBet = isMyBet;\r\n\r\n      // let totalBetAmount = data.goldData[data.memberData.type];\r\n      // if (!totalBetAmount) totalBetAmount = 0;\r\n      // betData.totalBetAmount = totalBetAmount;\r\n\r\n      // 前端发送下注的时候同时调用的接口\r\n      if (!config.preBet || !isMyBet) {\r\n        this.dispatch(changeSeatBet(betData));\r\n        this.dispatch(seatBet(betData));\r\n      }\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.LAUNCHER_BET, bundlePkgName, (data: BetReturnData, error: string) => {\r\n      if (!config.preBet) {\r\n        this.dispatch(changeMeGold(data.gold));\r\n      } else if (data.resultCode !== undefined && data.resultCode !== 0) {\r\n        this.dispatch(changeMeGold(data.gold));\r\n\r\n        const betData: BetData = {\r\n          betId: data.betId,\r\n          betAmount: data.betAmount,\r\n          userId: this.comp.props.myHead.userId,\r\n          betType: convertBetType(data.betType),\r\n          index: 0,\r\n        }\r\n        // console.log(\"SKT_MAG_TYPE.LAUNCHER_BET ----- \", betData);\r\n\r\n        this.dispatch(cancelBet(betData));\r\n        this.dispatch(cancelBetAmount(betData.betAmount))\r\n      }\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.PUSH_RESULT, bundlePkgName, (data: FishPrawnCrabResultVo) => {\r\n      // this.dispatch(changeGameStatus(GameStatus.STOP_BET, 0, convertResult(data.lotteryVo)));\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.GAME_STATUE, bundlePkgName, (data: FishPrawnCrabGameTypeVo) => {\r\n      if (convertGameStatus(data.gameType) === GameStatus.BET) {\r\n        // 重新构建座位\r\n        this.refactorSeat();\r\n        this.startBet(data.seconds);\r\n      } else if (data.gameType === 2) {\r\n        this.stopCountdown();\r\n        this.dispatch(changeGameStatus(GameStatus.STOP_BET, 0, convertResult(data.prawnCrabMemberDrawPrizeVo.lotteryVo)));\r\n        this.handleBalance(data);\r\n      }\r\n    })\r\n\r\n    // 接受赠送礼物消息\r\n    sktMsgListener.add(SKT_MAG_TYPE.GIVE_GIFT, bundlePkgName, (data: ResGiftVo) => {\r\n      const seats = this.comp.props.seats.filter(v => v.userId === data.receiveMemberId);\r\n      // 如果展示座位上有两个相同人，就同时送两次\r\n      if (seats && seats.length > 1) {\r\n        seats.forEach(seat => {\r\n          const { x, y } = config.headLocations[seat.index];\r\n          const endPos = this.viewNode.getComponent(UITransform).convertToWorldSpaceAR(new Vec3(x, y))\r\n          global.flyGift(data.giveMemberId, data.receiveMemberId, this.getHeadPos(data.giveMemberId, true), endPos, data.giftId, this.viewNode);\r\n        })\r\n      } else {\r\n        global.flyGift(data.giveMemberId, data.receiveMemberId, this.getHeadPos(data.giveMemberId, true),\r\n          this.getHeadPos(data.receiveMemberId, false), data.giftId, this.viewNode);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 获得获得用户所在位置\r\n   * @param memberId \r\n   * @param isFrom 是否发送方\r\n   * @returns \r\n   */\r\n  private getHeadPos(memberId: string, isFrom: boolean) {\r\n    const seat = this.comp.props.seats.find(v => v.userId === memberId);\r\n    let pos;\r\n    if (seat) {\r\n      const { x, y } = config.headLocations[seat.index];\r\n      pos = new Vec3(x, y);\r\n    } else if (BANKER_ID === memberId) {\r\n      pos = config.gameOption.dealerPosition;\r\n    } else if (isFrom && this.comp.props.myHead.userId === memberId) {\r\n      pos = config.gameOption.myHeadPosition;\r\n    } else if (isFrom) { // 只有发送方才有观战位置，接受方不回在观战位置\r\n      pos = config.gameOption.onlineNumberPosition;\r\n    } else {\r\n      return undefined;\r\n    }\r\n\r\n    return this.viewNode.getComponent(UITransform).convertToWorldSpaceAR(pos);\r\n  }\r\n\r\n  private listenerBalance() {\r\n    sktMsgListener.add(SKT_MAG_TYPE.MY_BALANCE_PUSH, bundlePkgName, (data: FishPrawnCrabBalanceVo) => {\r\n      // const myHead = instantiate(this.comp.props.myHead);\r\n\r\n      // gameCacheData.winList = data.roomWinInfo;\r\n\r\n      // myHead.winloss = data.myInfo.winGold;\r\n      // myHead.gold = data.myInfo.gold;\r\n      // for (const key in data.myInfo.memberBet) {\r\n      //   myHead.betAmount += data.myInfo.memberBet[key];\r\n      // }\r\n\r\n      // this.dispatch(changeSeat(myHead));\r\n    })\r\n    sktMsgListener.add(SKT_MAG_TYPE.BALANCE_PUSH, bundlePkgName, (data: FishPrawnCrabBalanceVo) => {\r\n      // gameCacheData.leftUsers = data.roomLeftInfoVos;\r\n      // gameCacheData.rightUsers = data.roomRightInfoVos;\r\n\r\n\r\n      // this.updateWinloss(data.lastRoomLeftInfoVos);\r\n      // this.updateWinloss(data.lastRoomRightInfoVos);\r\n\r\n      // // 改变在线人数\r\n      // this.dispatch(changeOnlineNumber(data.roomInfoSize));\r\n      // if (data.roomWinInfo) {\r\n      //   data.roomWinInfo.forEach(v => {\r\n      //     const seat = this.comp.props.seats.find(seat => seat.userId === v.memberId);\r\n      //     if (seat) {\r\n      //       const newSeat = instantiate(seat);\r\n      //       newSeat.gold = v.gold;\r\n      //       this.dispatch(changeSeat(newSeat));\r\n      //     }\r\n      //   })\r\n      // }\r\n    })\r\n  }\r\n\r\n  private handleBalance(data: FishPrawnCrabGameTypeVo) {\r\n    gameCacheData.leftUsers = data.fishPrawnCrabWinMemberVo.roomLeftInfoVos;\r\n    gameCacheData.rightUsers = data.fishPrawnCrabWinMemberVo.roomRightInfoVos;\r\n\r\n    this.updateWinloss(data.fishPrawnCrabWinMemberVo.lastRoomLeftInfoVos);\r\n    this.updateWinloss(data.fishPrawnCrabWinMemberVo.lastRoomRightInfoVos);\r\n\r\n    // 改变在线人数\r\n    this.dispatch(changeOnlineNumber(data.fishPrawnCrabWinMemberVo.roomInfoSize));\r\n    if (data.fishPrawnCrabWinMemberVo.roomWinInfo) {\r\n      data.fishPrawnCrabWinMemberVo.roomWinInfo.forEach(v => {\r\n        const seat = this.comp.props.seats.find(seat => seat.userId === v.memberId);\r\n        if (seat) {\r\n          const newSeat = instantiate(seat);\r\n          newSeat.gold = v.gold;\r\n          this.dispatch(changeSeat(newSeat));\r\n        }\r\n      })\r\n    }\r\n\r\n    if (data.fishPrawnCrabSettlementVo && data.fishPrawnCrabSettlementVo.myInfo) {\r\n      const myHead = instantiate(this.comp.props.myHead);\r\n      gameCacheData.winList = data.fishPrawnCrabSettlementVo.roomWinInfo;\r\n\r\n      myHead.winloss = data.fishPrawnCrabSettlementVo.myInfo.winGold;\r\n      myHead.gold = data.fishPrawnCrabSettlementVo.myInfo.gold;\r\n      for (const key in data.fishPrawnCrabSettlementVo.myInfo.memberBet) {\r\n        myHead.betAmount += data.fishPrawnCrabSettlementVo.myInfo.memberBet[key];\r\n      }\r\n      this.dispatch(changeSeat(myHead));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 更新座位输赢\r\n   * @param users \r\n   * @returns \r\n   */\r\n  private updateWinloss(users: FishPrawnCrabMemberInfoVo[]) {\r\n    if (!users || users.length === 0) {\r\n      return;\r\n    }\r\n    users.filter(v => v.winGold !== 0).forEach(v => {\r\n      this.comp.props.seats.filter(seat => seat.userId === v.memberId)\r\n        .forEach(seat => {\r\n          this.dispatch(changeSeatWinlose(seat.index, v.winGold, v.gold));\r\n        })\r\n    })\r\n  }\r\n\r\n  private startBet(seconds: number) {\r\n    this.dispatch(changeGameStatus(GameStatus.BET, seconds, null));\r\n    this.countdown = seconds;\r\n    this.startCountdown();\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n    this.clear();\r\n\r\n    // 完成之后的回调，卸载加载界面\r\n    this.completeCallback && this.completeCallback();\r\n  }\r\n\r\n  private clear() {\r\n    this.winLossViewModel = null;\r\n    this.betAreaViewModel = null;\r\n    this.historyMinViewModel = null;\r\n    this.headPanelViewModel = null;\r\n\r\n    this.dispatch(changeGameStatus(GameStatus.QUIT_GAME, 0, undefined));\r\n    this.dispatch(clearBet(true));\r\n    this.dispatch(quitGame(\"\"));\r\n  }\r\n\r\n  private getSeatIndex(userId: string) {\r\n    // 倒起找，原因是因为有可能重复上榜，右边上榜优先\r\n    const seat = [...this.comp.props.seats].reverse().find(v => v.userId === userId);\r\n    if (seat) {\r\n      return seat.index;\r\n    }\r\n    return config.gameOption.lookOnIndex;\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        gameStatus: state.gameFlow.gameStatus,\r\n        newResult: state.gameFlow.newResult,\r\n        myHead: state.game.myHead,\r\n        seats: state.game.seats,\r\n        countdown: state.gameFlow.countdown,\r\n        tipType: state.gameFlow.tipType,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n\r\n  public initConnect(completeCallback: Function) {\r\n    this.listenerAuth();\r\n    this.listenerUserJoinOrQuit();\r\n    this.listenerBet();\r\n    this.listenerBalance();\r\n\r\n    this.completeCallback = completeCallback;\r\n    return this;\r\n  }\r\n\r\n  private initView() {\r\n    this.headPanelViewModel = new HeadPanelViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.HEAD_PANEL).source)\r\n      .appendTo(this.comp.getGameNode()).connect()\r\n    this.betAreaViewModel = new BetAreaViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.BET_AREA).source).appendTo(this.comp.getGameNode()).connect()\r\n    this.historyMinViewModel = new HistoryMinViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.HISOTRY_MIN_PANEL).source)\r\n      .appendTo(this.comp.getGameNode()).connect()\r\n    new FooterViewModel().mountView(sourceManageSeletor().getFile(PrefabPathDefine.FOOTER).source).appendTo(this.comp.getGameNode()).connect()\r\n\r\n    // 加载完成之后才显示部分界面\r\n    this.comp.initEnd();\r\n    // 完成之后的回调，卸载加载界面\r\n    this.completeCallback();\r\n    playMainBg();\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default GameBoardViewModel"]}