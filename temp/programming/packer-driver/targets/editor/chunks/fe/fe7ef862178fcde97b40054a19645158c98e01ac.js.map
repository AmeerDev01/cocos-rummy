{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/thor/viewModel/HeaderViewModel.ts"],"names":["ViewModel","StoreInject","getStore","SoundPathDefine","sourceManageSeletor","thor_Audio","BaseViewModel","EffectType","PrefabPathDefine","HeaderViewModel","constructor","begin","setEvent","openHelpPanel","playOneShot","BUTTONCLICK","helpPanelPanel","mountView","getFile","INTRODUCE","source","appendTo","viewNode","parent","effectType","EFFECT1","isModal","closeHandler","unMount","connect","inject","state","balance","game","isRollEnd","roller","roundAllEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACOA,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AAIXC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,mB,iBAAAA,mB;AAAqBC,MAAAA,U,iBAAAA,U;;AACvBC,MAAAA,a;;AAEEC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,gB,iBAAAA,gB;;;;;;;;;AAEHC,MAAAA,e,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,eADN;AAAA;AAAA,kCACqE;AACnEC,QAAAA,WAAW,GAAG;AACZ,gBAAM,aAAN;AACD;;AAESC,QAAAA,KAAK,GAAG;AAChB,eAAKC,QAAL,CAAc;AACZC,YAAAA,aAAa,EAAE,MAAM;AACnB;AAAA;AAAA,4CAAWC,WAAX,CAAuB;AAAA;AAAA,sDAAgBC,WAAvC;AACA,kBAAIC,cAAc,GAAG;AAAA;AAAA,kDAA6D,gBAA7D,EAA+EC,SAA/E,CAAyF;AAAA;AAAA,gEAAsBC,OAAtB,CAA8B;AAAA;AAAA,wDAAiBC,SAA/C,EAA0DC,MAAnJ,EAClBC,QADkB,CACT,KAAKC,QAAL,CAAcC,MADL,EACa;AAAEC,gBAAAA,UAAU,EAAE;AAAA;AAAA,8CAAWC,OAAzB;AAAkCC,gBAAAA,OAAO,EAAE;AAA3C,eADb,EACgEd,QADhE,CACyE;AAC1Fe,gBAAAA,YAAY,EAAE,MAAM;AAClBX,kBAAAA,cAAc,CAACY,OAAf,CAAuB;AAAA;AAAA,gDAAWH,OAAlC;AACD;AAHyF,eADzE,CAArB;AAMD;AATW,WAAd;AAWD;;AAEMI,QAAAA,OAAO,GAAG;AACf;AACA,eAAKC,MAAL,CAAY,EAAZ,EAAkBC,KAAD,IAAsB;AACrC;AACA,mBAAO;AACLC,cAAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWD,OADf;AAELE,cAAAA,SAAS,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAFnB,aAAP;AAID,WAND;AAOA,iBAAO,IAAP;AACD;;AA7BkE,O;;yBAgCtD3B,e","sourcesContent":["import { Node } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { Thor_Header, IProps, IEvent } from \"../components/Thor_Header\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport dataTransfer, { DataKeyType } from \"../dataTransfer\"\r\nimport { getStore } from \"../store\"\r\nimport { SoundPathDefine } from \"../sourceDefine/soundDefine\"\r\nimport { sourceManageSeletor, thor_Audio } from \"../index\"\r\nimport BaseViewModel from \"../../../hall/viewModel/BaseViewModel\"\r\nimport { Thor_HelpPanel, IProps as FIProps, IState as FIState, IEvent as FIEvent } from \"../components/Thor_HelpPanel\"\r\nimport { EffectType } from \"../../../utils/NodeIOEffect\"\r\nimport { PrefabPathDefine } from \"../sourceDefine/prefabDefine\"\r\n@StoreInject(getStore())\r\nclass HeaderViewModel extends ViewModel<Thor_Header, IProps, IEvent> {\r\n  constructor() {\r\n    super('Thor_Header')\r\n  }\r\n\r\n  protected begin() { \r\n    this.setEvent({\r\n      openHelpPanel: () => {\r\n        thor_Audio.playOneShot(SoundPathDefine.BUTTONCLICK)\r\n        let helpPanelPanel = new BaseViewModel<Thor_HelpPanel, FIState, FIProps, FIEvent>(\"Thor_HelpPanel\").mountView(sourceManageSeletor().getFile(PrefabPathDefine.INTRODUCE).source)\r\n          .appendTo(this.viewNode.parent, { effectType: EffectType.EFFECT1, isModal: true }).setEvent({\r\n            closeHandler: () => {\r\n              helpPanelPanel.unMount(EffectType.EFFECT1)\r\n            }\r\n          })\r\n      },\r\n    })\r\n  }\r\n\r\n  public connect() {\r\n    // console.log('inject', dataTransfer(DataKeyType.BALANCE))\r\n    this.inject({ }, (state: StateType) => {\r\n      // console.log('state.game.balance', state.game.balance)\r\n      return {\r\n        balance: state.game.balance,\r\n        isRollEnd: state.roller.roundAllEnd,\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default HeaderViewModel\r\n"]}