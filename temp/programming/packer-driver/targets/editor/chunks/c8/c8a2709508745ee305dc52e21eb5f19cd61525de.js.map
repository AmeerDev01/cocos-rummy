{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/fish/viewModel/RoomChooseViewModel.ts"],"names":["sys","ViewModel","StoreInject","global","lang","config","SKT_MAG_TYPE","sktInstance","sktMsgListener","getStore","RoomChooseViewModel","constructor","begin","addOnce","AUTH","name","data","error","closeSubGame","confirmContent","write","k","InitGameModule","GameBoardInit","selfUserId","playerId","setProps","roomInfos","rooms","testConfig","wsUrl","token","localStorage","getItem","sendSktMessage","isTest","gameId","setEvent","enterRoom","roomInfo","JOIN_ROOM","roomId","unMountCallBack","connect","inject","state","deskData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAWA,MAAAA,G,OAAAA,G;;AACJC,MAAAA,S;AAAaC,MAAAA,W,iBAAAA,W;;AACXC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,I,iBAAAA,I;;AAEVC,MAAAA,M;;AACEC,MAAAA,Y,iBAAAA,Y;AAAcC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,c,iBAAAA,c;;AAC3BC,MAAAA,Q,iBAAAA,Q;;;;;;;AANT;;;;AAWMC,MAAAA,mB,WADL;AAAA;AAAA,sCAAY;AAAA;AAAA,iCAAZ,C,gBAAD,MACMA,mBADN;AAAA;AAAA,kCAC6E;AAE3EC,QAAAA,WAAW,GAAG;AACZ,gBAAM,iBAAN;AACD;;AACSC,QAAAA,KAAK,GAAG;AAChB;AAAA;AAAA,gDAAeC,OAAf,CAAuB;AAAA;AAAA,4CAAaC,IAApC,EAA0C;AAAA;AAAA,gCAAOC,IAAjD,EAAuD,CAACC,IAAD,EAAoBC,KAApB,KAA8B;AACnF,gBAAIA,KAAJ,EAAW;AACT;AAAA;AAAA,oCAAOC,YAAP,CAAoB;AAClBC,gBAAAA,cAAc,EAAE;AAAA;AAAA,kCAAKC,KAAL,CAAWC,CAAC,IAAIA,CAAC,CAACC,cAAF,CAAiBC,aAAjC;AADE,eAApB;AAGA;AACD;;AACD;AAAA;AAAA,kCAAOC,UAAP,GAAoBR,IAAI,CAACS,QAAzB;AACA,iBAAKC,QAAL,CAAc;AACZC,cAAAA,SAAS,EAAEX,IAAI,CAACY;AADJ,aAAd;AAGD,WAXD;;AAaA,cAAI;AAAA;AAAA,gCAAOC,UAAP,CAAkBC,KAAtB,EAA6B;AAC3B,kBAAMC,KAAK,GAAG/B,GAAG,CAACgC,YAAJ,CAAiBC,OAAjB,CAAyB,OAAzB,CAAd;AACA;AAAA;AAAA,4CAAYC,cAAZ,CAA2B;AAAA;AAAA,8CAAapB,IAAxC,EAA8C;AAC5CiB,cAAAA;AAD4C,aAA9C;AAGD,WALD,MAKO,IAAI,CAAC;AAAA;AAAA,gCAAOI,MAAZ,EAAoB;AACzB;AAAA;AAAA,4CAAYD,cAAZ,CAA2B;AAAA;AAAA,8CAAapB,IAAxC,EAA8C;AAC5CiB,cAAAA,KAAK,EAAE/B,GAAG,CAACgC,YAAJ,CAAiBC,OAAjB,CAAyB,OAAzB,CADqC;AAE5CG,cAAAA,MAAM,EAAE;AAAA;AAAA,oCAAOA;AAF6B,aAA9C;AAID;;AAED,eAAKC,QAAL,CAAc;AACZC,YAAAA,SAAS,EAAGC,QAAD,IAAwB;AACjC,kBAAI;AAAA;AAAA,oCAAOJ,MAAX,EAAmB,CAClB,CADD,MACO;AACL;AAAA;AAAA,gDAAYD,cAAZ,CAA2B;AAAA;AAAA,kDAAaM,SAAxC,EAAmD;AACjDC,kBAAAA,MAAM,EAAEF,QAAQ,CAACE;AADgC,iBAAnD;AAGD;AACF;AARW,WAAd;AAUD;;AAESC,QAAAA,eAAe,GAAS,CAEjC;;AAEMC,QAAAA,OAAO,GAAG;AACf,eAAKC,MAAL,CAAY,EAAZ,EAAiBC,KAAD,IAAsB;AACpC,mBAAO;AACLlB,cAAAA,SAAS,EAAEkB,KAAK,CAACC,QAAN,CAAenB;AADrB,aAAP;AAGD,WAJD;AAKA,iBAAO,IAAP;AACD;;AAtD0E,O;;yBAyD9DjB,mB","sourcesContent":["; import { sys } from \"cc\"\r\nimport ViewModel, { StoreInject } from \"../../../base/ViewModel\"\r\nimport { global, lang } from \"../../../hall\"\r\nimport { Fish_RoomChoose, IEvent, IProps } from \"../components/Fish_RoomChoose\"\r\nimport config from \"../config\"\r\nimport { SKT_MAG_TYPE, sktInstance, sktMsgListener } from \"../socketConnect\"\r\nimport { getStore } from \"../store\"\r\nimport { StateType } from \"../store/reducer\"\r\nimport { EnterGameVo, RoomInfo } from \"../type\"\r\n\r\n@StoreInject(getStore())\r\nclass RoomChooseViewModel extends ViewModel<Fish_RoomChoose, IProps, IEvent> {\r\n\r\n  constructor() {\r\n    super('Fish_RoomChoose')\r\n  }\r\n  protected begin() {\r\n    sktMsgListener.addOnce(SKT_MAG_TYPE.AUTH, config.name, (data: EnterGameVo, error) => {\r\n      if (error) {\r\n        global.closeSubGame({\r\n          confirmContent: lang.write(k => k.InitGameModule.GameBoardInit)\r\n        })\r\n        return;\r\n      }\r\n      config.selfUserId = data.playerId;\r\n      this.setProps({\r\n        roomInfos: data.rooms\r\n      })\r\n    })\r\n\r\n    if (config.testConfig.wsUrl) {\r\n      const token = sys.localStorage.getItem(\"token\");\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token\r\n      })\r\n    } else if (!config.isTest) {\r\n      sktInstance.sendSktMessage(SKT_MAG_TYPE.AUTH, {\r\n        token: sys.localStorage.getItem(\"token\"),\r\n        gameId: config.gameId\r\n      })\r\n    }\r\n\r\n    this.setEvent({\r\n      enterRoom: (roomInfo: RoomInfo) => {\r\n        if (config.isTest) {\r\n        } else {\r\n          sktInstance.sendSktMessage(SKT_MAG_TYPE.JOIN_ROOM, {\r\n            roomId: roomInfo.roomId\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  protected unMountCallBack(): void {\r\n\r\n  }\r\n\r\n  public connect() {\r\n    this.inject({}, (state: StateType) => {\r\n      return {\r\n        roomInfos: state.deskData.roomInfos\r\n      }\r\n    })\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RoomChooseViewModel"]}