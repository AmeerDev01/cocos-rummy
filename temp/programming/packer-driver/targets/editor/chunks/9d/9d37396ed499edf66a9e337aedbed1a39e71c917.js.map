{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/Crash/game/Crash_Game_contentLayer.ts"],"names":["_decorator","Vec3","Graphics","Color","Vec2","tween","Animation","Label","Crash_ViewBase","Crash_Current_rateLayer","Crash_DataManager","Crash_Dotted_lineLayer","Counter","Crash_Pre_dotLayer","AudioManager","SoundList","ccclass","property","Crash_Game_contentLayer","counter","angleInDegrees","onLoad","init","LotteryData","getInstance","getLotteryData","seconds","toFixed","total","drawPrizeNum","_nodes","active","times","Number","playSound","xiu","setTimeout","playAnimation","to","onUpdate","target","ratio","setDrawProgress","call","start","getComponent","value","setPosition","animationComponent","bingo","animationState","getState","repeatCount","on","EventType","FINISHED","type","state","time","sample","off","play","drawProgress","drawBezierCurve","point","angle","Math","atan2","y","x","PI","eulerAngles","progress","onPointUpdated","graphics","clear","lineWidth","strokeColor","WHITE","startPoint","controlPoint1","controlPoint2","endPoint","points","t","calculateBezierPoint","push","moveTo","lineTo","stroke","p0","p1","p2","p3","pow","update","deltaTime","data","getCrashStageVo","gameType","winGold","getUserInfo","WIN","ding","getChildByName","string","String"],"mappings":"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","sourcesContent":["import { _decorator, Node, Vec3, Graphics, Color, Vec2, tween, Animation, Label } from 'cc';\r\nimport { Crash_ViewBase } from \"../BaseView/Crash_ViewBase\";\r\nimport { Crash_Current_rateLayer } from \"./Crash_Current_rateLayer\";\r\nimport { Crash_DataManager } from \"../manager/Crash_DataManager\";\r\nimport { Crash_Dotted_lineLayer } from './Crash_Dotted_lineLayer';\r\nimport Counter from \"../utils/Counter\";\r\nimport { Crash_Pre_dotLayer } from \"./Crash_Pre_dotLayer\";\r\nimport { AudioManager, SoundList } from \"../manager/AudioManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Game_contentLayer')\r\nexport class Crash_Game_contentLayer extends Crash_ViewBase {\r\n    @property\r\n    private drawProgress = 0;\r\n    private counter: Counter | null = null;\r\n    angleInDegrees\r\n    protected onLoad() {\r\n        super.onLoad();\r\n    }\r\n    init() {\r\n        let LotteryData = Crash_DataManager.getInstance().getLotteryData()\r\n        let seconds = (LotteryData.seconds / 1000).toFixed(2)\r\n        let total = LotteryData.drawPrizeNum || 10\r\n        this._nodes['spine'].active = true;\r\n        let times = Number(seconds) > 3 ? 3 : Number(seconds)\r\n        AudioManager.getInstance().playSound(SoundList.xiu)\r\n        setTimeout(() => {\r\n            this.playAnimation()\r\n        }, LotteryData.seconds)\r\n        tween(this)\r\n            .to(times, {}, {\r\n                onUpdate: (target, ratio) => {\r\n                    this.setDrawProgress(ratio);\r\n                }\r\n            }).call(() => {\r\n            }).start();\r\n        this._nodes['current_rate'].getComponent(Crash_Current_rateLayer).init(seconds, total)\r\n        this._nodes['Dotted_line'].getComponent(Crash_Dotted_lineLayer).init(seconds, total)\r\n        this._nodes['pre_dot'].getComponent(Crash_Pre_dotLayer).init(seconds, total)\r\n        this.counter = new Counter(Number(seconds), 10, total, (value) => {\r\n            this._nodes['Dotted_line'].setPosition(0, (value * - 126) + 252)\r\n            this._nodes['pre_dot'].setPosition(value * - 100, 4)\r\n        });\r\n    }\r\n    playAnimation() {\r\n        if(!this._nodes)return;\r\n        let animationComponent = this._nodes['spine'].getComponent(Animation)\r\n        AudioManager.getInstance().playSound(SoundList.bingo)\r\n        const animationState = animationComponent.getState('hide');\r\n        if (animationState) {\r\n            animationState.repeatCount = 1;\r\n            animationComponent.on(Animation.EventType.FINISHED, (type, state) => {\r\n                state.time = 0;\r\n                state.sample();\r\n                this._nodes && (this._nodes['spine'].active = false);\r\n                animationComponent.off(Animation.EventType.FINISHED);\r\n            }, this);\r\n            animationComponent.play('hide');\r\n        }\r\n    }\r\n    setDrawProgress(value: number) {\r\n        this.drawProgress = value ;\r\n        this.drawBezierCurve(this.drawProgress, (point) => {\r\n            let angle = Math.atan2(point.y, point.x);\r\n            // console.log(angle);\r\n            if (angle > 1) {\r\n                angle = 0.01\r\n            }\r\n            this.angleInDegrees = angle * (180 / Math.PI);\r\n            this._nodes && this._nodes['spine'].setPosition(point.x, point.y)\r\n            this._nodes && (this._nodes['spine'].eulerAngles = new Vec3(0, 0, -90 + this.angleInDegrees * 6));\r\n        });\r\n    }\r\n\r\n    private drawBezierCurve(progress: number, onPointUpdated: (point: Vec2) => void) {\r\n        const graphics = this._nodes['BezierCurve'].getComponent(Graphics)!;\r\n        // 清除之前的绘制内容\r\n        graphics.clear();\r\n        // 设置线条宽度和颜色\r\n        graphics.lineWidth = 5;\r\n        graphics.strokeColor = Color.WHITE;\r\n        const startPoint = new Vec2(-70, 0);\r\n        const controlPoint1 = new Vec2(700, 50); // 更靠近起点的控制点\r\n        const controlPoint2 = new Vec2(800, 80); // 更靠近终点的控制点\r\n        const endPoint = new Vec2(800, 205);\r\n        // 计算贝塞尔曲线上的点\r\n        const points: Vec2[] = [];\r\n        for (let t = 0; t <= progress; t += 0.01) {\r\n            const point = this.calculateBezierPoint(t, startPoint, controlPoint1, controlPoint2, endPoint);\r\n            points.push(point);\r\n            onPointUpdated(point)\r\n        }\r\n        // 绘制贝塞尔曲线\r\n        graphics.moveTo(startPoint.x, startPoint.y);\r\n        for (const point of points) {\r\n            graphics.lineTo(point.x, point.y);\r\n        }\r\n        graphics.stroke();\r\n    }\r\n    private calculateBezierPoint(t: number, p0: Vec2, p1: Vec2, p2: Vec2, p3: Vec2): Vec2 {\r\n        const x = Math.pow(1 - t, 3) * p0.x + 3 * Math.pow(1 - t, 2) * t * p1.x + 3 * (1 - t) * Math.pow(t, 2) * p2.x + Math.pow(t, 3) * p3.x;\r\n        const y = Math.pow(1 - t, 3) * p0.y + 3 * Math.pow(1 - t, 2) * t * p1.y + 3 * (1 - t) * Math.pow(t, 2) * p2.y + Math.pow(t, 3) * p3.y;\r\n        return new Vec2(x, y);\r\n    }\r\n    update(deltaTime: number) {\r\n        if (this.counter) {\r\n            this.counter.update(deltaTime);\r\n        }\r\n        let data = Crash_DataManager.getInstance()\r\n        if (!data.getCrashStageVo()) return;\r\n        if (data.getCrashStageVo().gameType === 3) {\r\n            let winGold: any = data.getUserInfo().getUserInfo()\r\n            let WIN: Node = this._nodes['WIN']\r\n            if (winGold?.winGold > 0) {\r\n                if (!WIN.active) {\r\n                    AudioManager.getInstance().playSound(SoundList.ding)\r\n                }\r\n                WIN.active = true\r\n                WIN.getChildByName('win_label').getComponent(Label).string = String(winGold.winGold)\r\n            }\r\n        } else {\r\n            let winGold: any = data.getUserInfo().getUserInfo()\r\n            delete winGold.winGold\r\n            this._nodes['WIN'].active = false\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}