{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/hall/components/Hall_GivePanel.ts"],"names":["_decorator","Button","Label","Node","BaseComponent","ccclass","property","Hall_GivePanel","propertyNode","props_btn_sure","props_Label_welcome","props","amount","events","onClosePanel","start","initState","bindEvent","node","on","EventType","TOUCH_END","useProps","key","value","string","replace","formatAmountWithCommas","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AACtCC,MAAAA,a,iBAAAA,a;;;;;;;;;OAIH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;gCAcjBO,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb;AAAA;AAAA,0CAC0E;AAAA;AAAA;AAAA,eAG/DC,YAH+D,GAGhD;AACxBC,YAAAA,cAAc,EAAE,IAAIR,MAAJ,EADQ;AAExBS,YAAAA,mBAAmB,EAAE,IAAIR,KAAJ;AAFG,WAHgD;AAAA,eAQlES,KARkE,GAQlD;AACtBC,YAAAA,MAAM,EAAE;AADc,WARkD;AAAA,eAYlEC,MAZkE,GAYjD;AACvBC,YAAAA,YAAY,EAAE,MAAM,CAAG;AADA,WAZiD;AAAA;;AACzEC,QAAAA,KAAK,GAAG,CAAG;;AAeDC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS;AAC3B,eAAKT,YAAL,CAAkBC,cAAlB,CAAiCS,IAAjC,CAAsCC,EAAtC,CAAyChB,IAAI,CAACiB,SAAL,CAAeC,SAAxD,EAAmE,MAAM;AACxE,iBAAKR,MAAL,CAAYC,YAAZ;AACA,WAFD;AAGA;;AAESQ,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AACpE,cAAID,GAAG,KAAK,QAAZ,EAAsB;AACrB,iBAAKf,YAAL,CAAkBE,mBAAlB,CAAsCe,MAAtC,GAA+C,KAAKjB,YAAL,CAAkBE,mBAAlB,CAAsCe,MAAtC,CAA6CC,OAA7C,CAAqD,KAArD,EAA4D,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,sBAAlB,EAA5D,CAA/C;AACA;AACD;;AAESC,QAAAA,MAAM,GAAS,CAExB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAxCwE,O","sourcesContent":["import { _decorator, Button, Component, Label, Node } from 'cc';\r\nimport { BaseComponent } from '../../base/BaseComponent';\r\nimport { fetcher, lang } from '../index';\r\nimport { ApiUrl } from '../apiUrl';\r\nimport { addToastAction } from '../store/actions/baseBoard';\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n\tamount: number\r\n}\r\nexport interface IEvent {\r\n\tonClosePanel: () => void\r\n}\r\n\r\n@ccclass('Hall_GivePanel')\r\nexport class Hall_GivePanel extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() { }\r\n\r\n\tprotected propertyNode = {\r\n\t\tprops_btn_sure: new Button(),\r\n\t\tprops_Label_welcome: new Label()\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tamount: 0\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tonClosePanel: () => { }\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t\tthis.propertyNode.props_btn_sure.node.on(Node.EventType.TOUCH_END, () => {\r\n\t\t\tthis.events.onClosePanel()\r\n\t\t})\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\tif (key === \"amount\") {\r\n\t\t\tthis.propertyNode.props_Label_welcome.string = this.propertyNode.props_Label_welcome.string.replace(\"000\", this.props.amount.formatAmountWithCommas())\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}