{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/utils/AudioMgr.ts"],"names":["AudioMgr","AudioClip","AudioSource","Node","director","UseSetOption","constructor","sourceManage","_audioSource","_longSoundSource","_shortSoundSource","nodes","disable","createNode","audioSource","getAudioInstance","name","audioMgr","getScene","addChild","addPersistRootNode","push","addComponent","playOneShot","sound","volume","isReplace","Instance","option","source","getFile","playSound","bundler","bundle","load","err","clip","console","log","isNotValid","isValid","getDuration","loop","play","getPlayingVolume","isLoop","music","playOnAwake","stop","longStop","pause","resume","remove","forEach","v","destroy"],"mappings":"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","sourcesContent":["//AudioMgr.ts\r\nimport { AudioClip, AudioSource, Node, director } from 'cc';\r\n// import { sourceManageSeletor } from '../hall';\r\nimport SourceManage from '../base/SourceManage';\r\nimport UseSetOption from './UseSetOption';\r\n/**\r\n * @en\r\n * this is a sington class for audio play, can be easily called from anywhere in you project.\r\n * @zh\r\n * 这是一个用于播放音频的单件类，可以很方便地在项目的任何地方调用。\r\n */\r\nexport class AudioMgr<M> {\r\n  /**背景音乐 */\r\n  private _audioSource: AudioSource;\r\n  /**长音效 */\r\n  private _longSoundSource: AudioSource;\r\n  /**短音效 */\r\n  private _shortSoundSource: AudioSource;\r\n  private sourceManage: SourceManage\r\n  // private audioMgr: Node\r\n  private nodes: Array<Node> = [];\r\n  constructor(sourceManage: SourceManage) {\r\n    this.sourceManage = sourceManage\r\n\r\n    this._audioSource = this.createNode(\"__bgm_music__\");\r\n    this._longSoundSource = this.createNode(\"__long_sound__\");\r\n    this._shortSoundSource = this.createNode(\"__short_sound__\");\r\n  }\r\n  public disable: boolean = false\r\n  public get audioSource() {\r\n    return this._audioSource;\r\n  }\r\n\r\n  public getAudioInstance() {\r\n    return this._audioSource\r\n  }\r\n\r\n  private createNode(name: string) {\r\n    const audioMgr = new Node();\r\n    audioMgr.name = name;\r\n\r\n    //@en add to the scene.\r\n    //@zh 添加节点到场景\r\n    director.getScene().addChild(audioMgr);\r\n\r\n    //@en make it as a persistent node, so it won't be destroied when scene change.\r\n    //@zh 标记为常驻节点，这样场景切换的时候就不会被销毁了\r\n    director.addPersistRootNode(audioMgr);\r\n\r\n    this.nodes.push(audioMgr);\r\n\r\n    //@en add AudioSource componrnt to play audios.\r\n    //@zh 添加 AudioSource 组件，用于播放音频。\r\n    return audioMgr.addComponent(AudioSource);\r\n  }\r\n\r\n  /**\r\n   * @en\r\n   * play short audio, such as strikes,explosions\r\n   * @zh\r\n   * 播放短音频,比如 打击音效，爆炸音效等\r\n   * @param sound clip or url for the audio\r\n   * @param volume \r\n   */\r\n  playOneShot(sound: M, volume: number = 1.0, isReplace: boolean = true) {\r\n    if (!UseSetOption.Instance().option.sound) return\r\n    if (this.disable) return\r\n    const source = this.sourceManage.getFile(sound as string).source\r\n    if (source instanceof AudioClip) {\r\n      // this._audioSource.playOneShot(source, volume);\r\n      isReplace ? this.playSound(source) : this._audioSource.playOneShot(source, volume)\r\n      // this.playSound(source);\r\n    }\r\n    else {\r\n      const bundler = this.sourceManage.bundle\r\n      bundler.load(source, (err, clip: AudioClip) => {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n        else {\r\n          // this._audioSource.playOneShot(clip, volume);\r\n          this.playSound(clip);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private isNotValid(source: AudioSource) {\r\n    return !source || !source.isValid;\r\n  }\r\n\r\n  private playSound(clip: AudioClip) {\r\n    const audioSource = clip.getDuration() > 1 ? this._longSoundSource : this._shortSoundSource;\r\n    if (this.isNotValid(audioSource)) return;\r\n    audioSource.clip = clip;\r\n    audioSource.loop = false;\r\n    audioSource.play();\r\n  }\r\n  getPlayingVolume() {\r\n    return this.audioSource.volume\r\n  }\r\n  /**\r\n   * @en\r\n   * play long audio, such as the bg music\r\n   * @zh\r\n   * 播放长音频，比如 背景音乐\r\n   * @param sound clip or url for the sound\r\n   * @param volume \r\n   */\r\n  play(sound: M, isLoop: boolean = false, volume: number = 1.0) {\r\n    if (!UseSetOption.Instance().option.music) return\r\n    if (this.disable) return\r\n    if (this.isNotValid(this.audioSource)) return;\r\n    console.log('play:' + sound)\r\n    const source = this.sourceManage.getFile(sound as string).source\r\n    if (source instanceof AudioClip) {\r\n      this._audioSource.clip = source\r\n      this._audioSource.loop = isLoop\r\n      this._audioSource.playOnAwake = true\r\n      this.audioSource.volume = volume\r\n      this._audioSource.play()\r\n    }\r\n    else {\r\n      const bundler = this.sourceManage.bundle\r\n      bundler.load(source, (err, clip: AudioClip) => {\r\n        if (this.isNotValid(this.audioSource)) return;\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n        else {\r\n          this._audioSource.clip = clip\r\n          this._audioSource.loop = isLoop\r\n          this.audioSource.volume = volume\r\n          this._audioSource.play()\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * stop the audio play\r\n   */\r\n  stop() {\r\n    this._audioSource.stop();\r\n  }\r\n  longStop() {\r\n    this._longSoundSource.stop();\r\n  }\r\n  /**\r\n   * pause the audio play\r\n   */\r\n  pause() {\r\n    this._audioSource.pause();\r\n  }\r\n\r\n  /**\r\n   * resume the audio play\r\n   */\r\n  resume() {\r\n    if (!UseSetOption.Instance().option.music) return\r\n    this._audioSource.play();\r\n  }\r\n\r\n  remove() {\r\n    // this.audioMgr.destroy()\r\n    this.nodes.forEach(v => v.destroy());\r\n    this.nodes = [];\r\n  }\r\n}\r\n"]}