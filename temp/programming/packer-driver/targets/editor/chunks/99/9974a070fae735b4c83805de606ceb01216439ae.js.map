{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/godWealth/Slot/Proxy/BgProxy.ts"],"names":["BgProxy","BaseProxy","AutoLaunchType","BgRepository","StopMode","BgMediatorConst","RollerType","constructor","proxyName","data","SpriteFrames","winningMultiplier","mini","major","repository","setSpriteFrames","getSpriteFrames","setWinningMultiplier","getWinningMultiplier","setIsChangeNextGameType","gameTypePre","gameTypeNew","isChangeGame","nextGame","lastGame","console","log","getIsChangeGameRunning","getNextGame","getLastGame","setDisable","disable","isDisable","sendNotification","UPDATE_GAME_STATUS","getDisable","setAutoLaunchType","type","autoLaunchType","UPDATE_AUTO_LAUNCH","DISABLE","reaminAutoLaunchTimes","isUNLIMT","T10","T20","T50","T100","T500","getAutoLaunchType","isSpeed","UNLIMT_FAST","getStopMode","QUEUE_STOP","stopMode","setStopMode","subtractAutoLaunchTimes","UNLIMT","getTotal","total","getAutoLaunchNum","checkAutoLaunch"],"mappings":"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","sourcesContent":["import BaseProxy from \"./BaseProxy\"\r\nimport { instantiate, log } from \"cc\";\r\nimport config from \"../GodWealth_config\"\r\nimport { AutoLaunchType, BgRepository, StopMode } from \"../Repositories/BgRepository\";\r\nimport { BgMediatorConst } from \"../Mediator/BgMediator\";\r\nimport { SubGameType } from \"./SocketProxy\";\r\n\r\nexport enum RollerType {\r\n\t/**普通的5列小滑槽 */\r\n\tNORMAL = \"iconRollerQueue\",\r\n\t/**3列滑槽，中间为大滑槽 */\r\n\tLARGE = \"largeIconRollerQueue\"\r\n}\r\nexport class BgProxy extends BaseProxy<BgRepository> {\r\n    private SpriteFrames=[]\r\n    private winningMultiplier={\r\n        mini:500,\r\n        major:1250,\r\n    }\r\n\tpublic constructor(proxyName: string = null, data: any = null) {\r\n\t\tsuper(proxyName, data);\r\n\t\tthis.repository = new BgRepository()\r\n\t}\r\n    public setSpriteFrames(data){\r\n        this.SpriteFrames=data\r\n    }\r\n    public getSpriteFrames(){\r\n        return this.SpriteFrames\r\n    }\r\n    public setWinningMultiplier(data:{mini:any,major:any}){\r\n        this.winningMultiplier=data\r\n    }\r\n    public getWinningMultiplier(){\r\n        return this.winningMultiplier\r\n    }\r\n\t/**配置将要运行的子游戏 */\r\n\tpublic setIsChangeNextGameType(gameTypePre: SubGameType, gameTypeNew: SubGameType) {\r\n        this.repository.isChangeGame = ( this.repository.nextGame !== gameTypeNew)\r\n        this.repository.lastGame = this.repository.nextGame\r\n\t\tthis.repository.nextGame = gameTypeNew\r\n        console.log(this.repository.lastGame , gameTypeNew)\r\n    }\r\n\t/**从缓存数据重获取是否切换游戏模块游戏模块,若返回-1 则不切换，若切换直接返回下一个游戏代码 */\r\n\tpublic getIsChangeGameRunning() {\r\n\t\tif (this.repository.isChangeGame) {\r\n\t\t\treturn this.repository.nextGame\r\n\t\t}\r\n\t\treturn -1\r\n\t}\r\n\t/**获取将要正在进行的游戏 */\r\n\tpublic getNextGame() {\r\n\t\treturn this.repository.nextGame\r\n\t}\r\n\t/**获取上一个游戏 */\r\n\tpublic getLastGame() {\r\n\t\treturn this.repository.lastGame\r\n\t}\r\n\t/**设置自动下注的类型 */\r\n\tpublic setDisable(disable: boolean) {\r\n\t\tthis.repository.isDisable = disable\r\n\t\tthis.sendNotification(BgMediatorConst.UPDATE_GAME_STATUS)\r\n\t}\r\n\t/**获取禁用状态 */\r\n\tpublic getDisable() {\r\n\t\treturn this.repository.isDisable\r\n\t}\r\n\t/**设置自动下注的类型 */\r\n\tpublic setAutoLaunchType(type: AutoLaunchType) {\r\n\t\tthis.repository.autoLaunchType = type\r\n\t\tthis.sendNotification(BgMediatorConst.UPDATE_AUTO_LAUNCH)\r\n\t\tif (type === AutoLaunchType.DISABLE) {\r\n\t\t\tthis.repository.reaminAutoLaunchTimes = 0\r\n\t\t} else if (!this.isUNLIMT()) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase AutoLaunchType.T10: this.repository.reaminAutoLaunchTimes = 10; break;\r\n\t\t\t\tcase AutoLaunchType.T20: this.repository.reaminAutoLaunchTimes = 20; break;\r\n\t\t\t\tcase AutoLaunchType.T50: this.repository.reaminAutoLaunchTimes = 50; break;\r\n\t\t\t\tcase AutoLaunchType.T100: this.repository.reaminAutoLaunchTimes = 100; break;\r\n\t\t\t\tcase AutoLaunchType.T500: this.repository.reaminAutoLaunchTimes = 500; break;\r\n\t\t\t}\r\n\t\t} else if (this.isUNLIMT()) {\r\n\t\t\t//无限\r\n\t\t}\r\n\t}\r\n\t/**获取正在运行的游戏模块 */\r\n\tpublic getAutoLaunchType() {\r\n\t\treturn this.repository.autoLaunchType\r\n\t}\r\n\tpublic isSpeed(){\r\n\t\t\treturn this.getAutoLaunchType() === AutoLaunchType.UNLIMT_FAST || this.getStopMode() === StopMode.QUEUE_STOP;\r\n\t}\r\n\t/**获得停止模式 */\r\n\tpublic getStopMode(){\r\n\t\t\treturn this.repository.stopMode;\r\n\t}\r\n\tpublic setStopMode(stopMode: StopMode){\r\n\t\t\tthis.repository.stopMode = stopMode;\r\n\t}\r\n\t/**减去自动执行次数 */\r\n\tpublic subtractAutoLaunchTimes() {\r\n\t\tif (!this.isUNLIMT()) {\r\n\t\t\t// 无限次数的时候不关注剩余次数\r\n\t\t\tif (this.repository.reaminAutoLaunchTimes > 0) {\r\n\t\t\t\tthis.repository.reaminAutoLaunchTimes--\r\n\t\t\t}\r\n\t\t\tif (this.repository.reaminAutoLaunchTimes <= 0) {\r\n\t\t\t\tthis.repository.reaminAutoLaunchTimes = 0\r\n\t\t\t\tthis.repository.autoLaunchType = AutoLaunchType.DISABLE\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sendNotification(BgMediatorConst.UPDATE_AUTO_LAUNCH)\r\n\t}\r\n\tpublic isUNLIMT(){\r\n\t\treturn this.repository.autoLaunchType == AutoLaunchType.UNLIMT || this.repository.autoLaunchType == AutoLaunchType.UNLIMT_FAST\r\n\t}\r\n\tpublic getTotal(){\r\n        let total\r\n        switch (this.repository.autoLaunchType) {\r\n            case AutoLaunchType.T10:\r\n                total = 10;\r\n                break;\r\n            case AutoLaunchType.T20:\r\n                total = 20;\r\n                break;\r\n            case AutoLaunchType.T50:\r\n                total = 50;\r\n                break;\r\n            case AutoLaunchType.T100:\r\n                total = 100;\r\n                break;\r\n            case AutoLaunchType.T500:\r\n                total = 500;\r\n                break;\r\n        }\r\n        return total\r\n    }\r\n\tpublic getAutoLaunchNum(){\r\n\t\treturn this.getTotal() - this.repository.reaminAutoLaunchTimes\r\n\t}\r\n\t/**检查自动启动 */\r\n\tpublic checkAutoLaunch() {\r\n\t\t// console.log('reaminAutoLaunchTimes', this.repository.reaminAutoLaunchTimes)\r\n\t\tif (this.repository.autoLaunchType === AutoLaunchType.DISABLE) {\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t\tif (this.isUNLIMT()) {\r\n\t\t\t\treturn true\r\n\t\t\t} else {\r\n\t\t\t\tif (this.repository.reaminAutoLaunchTimes <= 0) {\r\n\t\t\t\t\tthis.repository.reaminAutoLaunchTimes = 0\r\n\t\t\t\t\tthis.repository.autoLaunchType = AutoLaunchType.DISABLE\r\n\t\t\t\t}\r\n\t\t\t\treturn this.repository.reaminAutoLaunchTimes > 0\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}