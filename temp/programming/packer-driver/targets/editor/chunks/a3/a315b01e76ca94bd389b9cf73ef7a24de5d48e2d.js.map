{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandarQiuQiu/components/BandarQiuQiu_sendCard.ts"],"names":["_decorator","Node","instantiate","tween","Vec3","BaseComponent","config","TaskScheduler","Task","cardViewModel","GameStatus","playDealCard","ccclass","property","BandarQiuQiu_sendCard","taskScheduler","allDecks","twinCard","randomNumbers","propertyNode","props_spr_sendCard","props","gameStatus","events","start","createCards","initState","bindEvent","useProps","key","value","cur","BET","node","active","joinqQueue","done","cardPosition","forEach","endP","i","card","scale","task","addChild","to","position","x","y","easing","push","window","setTimeout","length","getRandomUniqueNumbers","item","c","d","removeChild","isUnMount","comp","initCardBack","cardItemPosition","call","backCard","getPropertyNode","props_node_card_back","min","max","count","uniqueNumbers","Set","size","add","Math","floor","random","Array","from","bindUI","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Node, Animation, instantiate, tween, Vec3, UITransform, Label, game, Game } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { getNodePositionInCanvas, initToggle } from '../../../utils/tool';\r\nimport config from '../config';\r\nimport TaskScheduler, { Task } from '../../../utils/TaskScheduler';\r\nimport { cardViewModel, heGuanViewModel } from '../viewModel/BandarQiuQiuGameBoardViewModel';\r\nimport { GameStatus } from '../type';\r\nimport { mainGameViewModel, playDealCard } from '../index';\r\nimport { BandarQiuQiu_heGuan } from './BandarQiuQiu_heGuan';\r\nimport BaseViewModel from '../../../common/viewModel/BaseViewModel';\r\n// import { playGame } from '../index';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\nexport interface IState {\r\n\r\n}\r\n\r\nexport interface IProps {\r\n    gameStatus: GameStatus,\r\n}\r\nexport interface IEvent {\r\n\t\r\n}\r\n\r\n\r\n@ccclass('BandarQiuQiu_sendCard')\r\nexport class BandarQiuQiu_sendCard extends BaseComponent<IState, IProps, IEvent> {\r\n    private taskScheduler = new TaskScheduler();\r\n    private allDecks = [];\r\n    private twinCard = [];\r\n    private randomNumbers = [];\r\n\tstart() {\r\n        this.createCards();\r\n\r\n\t }\r\n\r\n\tprotected propertyNode = {\r\n        props_spr_sendCard: new Node(),\r\n        // props_spr_all_send_card: new Node(),\r\n        // props_spr_card_item: new Node(),\r\n    \r\n        \r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tgameStatus:null,\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\t\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n        if (key === \"gameStatus\") {\r\n\t\t\tif (value.cur === GameStatus.BET) {\r\n               \r\n                // this.createCards()\r\n            } else {\r\n                // this.twinCard = [];\r\n                // this.allDecks = [];\r\n            }\r\n\t\t}\r\n\t}\r\n\r\n    /**发牌 */\r\n    public createCards() {\r\n        // console.log((\"create\"));\r\n        this.allDecks = [];\r\n        this.twinCard = [];\r\n        if(!this.propertyNode || !this.node){ return }\r\n        this.propertyNode.props_spr_sendCard.active = true;\r\n\r\n        this.taskScheduler.joinqQueue(new Task((done) => {\r\n            config.cardPosition.forEach((endP, i) => {\r\n                let card = instantiate(this.propertyNode.props_spr_sendCard);\r\n                card.scale=new Vec3(1,1)\r\n                let task=new Task((done)=>{\r\n                    playDealCard()\r\n                    if(!this.node){return}\r\n                    this.node.addChild(card)\r\n                    tween(card).to(0.1, { position: new Vec3(endP.x, endP.y) }, {easing: 'quintOut'}).start();\r\n\r\n                    this.allDecks.push(card)\r\n                    window.setTimeout(()=>done(),100)\r\n                })\r\n                this.taskScheduler.joinqQueue(task, false);\r\n               \r\n            })\r\n            window.setTimeout(()=>done(),500)\r\n            \r\n        }), false)\r\n        .joinqQueue(new Task((done) => {\r\n            this.propertyNode.props_spr_sendCard.active = false;\r\n            window.setTimeout(()=>done(),500)\r\n        }), false).joinqQueue(new Task((done) => {\r\n           if(!this.allDecks || this.allDecks.length === 0){ return }\r\n            \r\n            this.randomNumbers=this.getRandomUniqueNumbers(0,13,2)\r\n            this.randomNumbers.forEach(item => {\r\n                let card = this.allDecks[item]\r\n\r\n                tween(card).to(0.15, { position: new Vec3(card.position.x, card.position.y + 30) }).start();\r\n            })\r\n \r\n            window.setTimeout(()=>done(),500)\r\n        }), false).joinqQueue(new Task((done) => {\r\n           if(!this.allDecks || this.allDecks.length === 0){ return }\r\n            this.allDecks.forEach((c, d) => {\r\n                if (d !== this.randomNumbers[0] && d!==this.randomNumbers[1]) {  \r\n                    this.node.removeChild(c);\r\n                } else {\r\n                    this.twinCard.push(c);\r\n                }\r\n            })\r\n            window.setTimeout(()=>done(),500)\r\n        }),false).joinqQueue(new Task((done) => {\r\n            // console.log(this.twinCard);\r\n            if (!this.twinCard || this.twinCard.length == 0) { return }\r\n            if(cardViewModel.isUnMount) return\r\n            cardViewModel.comp.initCardBack()\r\n            this.twinCard.forEach((c, d) => {\r\n                let card = instantiate(c);\r\n                this.node.addChild(card);\r\n                tween(c).to(0.5, { position: new Vec3(config.cardItemPosition[d][0].x, config.cardItemPosition[d][0].y) }).call(() => {\r\n                    this.node.removeChild(c)\r\n                }).start()\r\n                tween(card).to(0.5, { position: new Vec3(config.cardItemPosition[d][1].x, config.cardItemPosition[d][1].y) }).call(() => {\r\n                    this.node.removeChild(card)\r\n                }).start();\r\n\r\n                window.setTimeout(() => done(), 500);\r\n\r\n            })\r\n        }),false).joinqQueue(new Task((done) => {\r\n            if (cardViewModel.isUnMount) return;\r\n            cardViewModel.comp.initCardBack()\r\n            let backCard = cardViewModel.comp.getPropertyNode().props_node_card_back as Node;\r\n            backCard.active = true;\r\n            window.setTimeout(() => done(), 500);\r\n        }), false)\r\n        //     .joinqQueue(new Task((done) => {\r\n  \r\n        //     window.setTimeout(() => done(), 500);\r\n        // }),false)\r\n      \r\n    }\r\n\r\n    /**取min-max中count个不重复的随机数 */\r\n    private getRandomUniqueNumbers(min, max, count) {\r\n        const uniqueNumbers = new Set();\r\n    \r\n        while (uniqueNumbers.size < count) {\r\n            uniqueNumbers.add(Math.floor(Math.random() * (max + 1 - min)) + min);\r\n        }\r\n    \r\n        return Array.from(uniqueNumbers);\r\n    }\r\n\r\n\tprotected bindUI(): void {\r\n\r\n        this.propertyNode.props_spr_sendCard.active = false;\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}