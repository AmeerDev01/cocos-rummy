{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/bandar/components/Bandar_lose.ts"],"names":["_decorator","Label","Node","BaseComponent","updateWinUsers","ccclass","property","Bandar_lose","propertyNode","props_spr_win_bg","props_label_lose_num","props","myInfo","events","onClosePanel","start","initState","bindEvent","useProps","key","value","updateWinsAndLosses","node","winGold","getComponent","string","goldNum","Math","abs","formatAmountWithCommas","toggleCallback","event","customEventData","bindUI","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAWC,MAAAA,K,OAAAA,K;AAAMC,MAAAA,I,OAAAA,I;;AACjBC,MAAAA,a,iBAAAA,a;;AAOAC,MAAAA,c,iBAAAA,c;;;;;;;mFAHT;;;OAIM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAmBjBO,W,WADZF,OAAO,CAAC,aAAD,C,gBAAR,MACaE,WADb;AAAA;AAAA,0CACuE;AAAA;AAAA;AAAA,eAK5DC,YAL4D,GAK7C;AACpBC,YAAAA,gBAAgB,EAAC,IAAIP,IAAJ,EADG;AAEpBQ,YAAAA,oBAAoB,EAAC,IAAIR,IAAJ;AAFD,WAL6C;AAAA,eAW/DS,KAX+D,GAW/C;AACtBC,YAAAA,MAAM,EAAC,IADe,CAEtB;;AAFsB,WAX+C;AAAA,eAiB/DC,MAjB+D,GAiB9C;AACvBC,YAAAA,YAAY,EAAC,MAAI,CAAE;AADI,WAjB8C;AAAA;;AACtEC,QAAAA,KAAK,GAAG,CACP;AACC;;AAkBQC,QAAAA,SAAS,GAAG;AACrB,iBAAO,EAAP;AAGA;;AAESC,QAAAA,SAAS,GAAS,CAC5B;AACA;AACA;AACA;AAEC;;AAESC,QAAAA,QAAQ,CAACC,GAAD,EAAoBC,KAApB,EAAmD;AAEpE,cAAGD,GAAG,KAAG,QAAT,EAAkB,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGD;;AAEME,QAAAA,mBAAmB,CAACT,MAAD,EAAQ;AACjC;AAAA;AAAA,gDAAe,KAAKU,IAApB;;AACC,cAAGV,MAAM,CAACW,OAAP,KAAiB,CAApB,EAAsB;AACrB,iBAAKf,YAAL,CAAkBE,oBAAlB,CAAuCc,YAAvC,CAAoDvB,KAApD,EAA2DwB,MAA3D,GAAoEb,MAAM,CAACW,OAAP,GAAiB,EAArF;AACA,WAFD,MAEK;AACJ,gBAAIG,OAAc,GAACC,IAAI,CAACC,GAAL,CAAShB,MAAM,CAACW,OAAhB,EAAyBM,sBAAzB,EAAnB;AACA,iBAAKrB,YAAL,CAAkBE,oBAAlB,CAAuCc,YAAvC,CAAoDvB,KAApD,EAA2DwB,MAA3D,GAAoE,MAAMC,OAA1E;AAEA;AACF;;AAGDI,QAAAA,cAAc,CAACC,KAAD,EAAeC,eAAf,EAAwC,CAErD;;AAESC,QAAAA,MAAM,GAAS,CAGxB;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3EqE,O","sourcesContent":["import { _decorator,Label,Node, Sprite, SpriteFrame } from 'cc';\r\nimport { BaseComponent } from '../../../base/BaseComponent';\r\nimport { formatNumber, initToggle, omitStr } from '../../../utils/tool';\r\nimport { bundleCommon, bundleBanDar } from '../index';\r\n\r\n// import { WinInfo } from '../store/actions/history';\r\nimport { playBtnClick } from '../index';\r\nimport { HeadType, WinInfo } from '../type';\r\nimport { updateWinUsers } from './Bandar_win';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\nexport interface IState {\r\n  \r\n}\r\n\r\nexport interface IProps {\r\n\tmyInfo: HeadType,\r\n\t// roomWinInfo:WinInfo[],\r\n\t\r\n}\r\nexport interface IEvent {\r\n\tonClosePanel:()=>void\r\n}\r\n\r\n\r\n@ccclass('Bandar_lose')\r\nexport class Bandar_lose extends BaseComponent<IState, IProps, IEvent> {\r\n\tstart() {\r\n\t\t// updateWinUsers(this.node)\r\n\t }\r\n\r\n\tprotected propertyNode = {\r\n      props_spr_win_bg:new Node(),\r\n      props_label_lose_num:new Node(),\r\n\r\n\t}\r\n\r\n\tpublic props: IProps = {\r\n\t\tmyInfo:null,\r\n\t\t// roomWinInfo:[],\r\n\t\t\r\n\t}\r\n\r\n\tpublic events: IEvent = {\r\n\t\tonClosePanel:()=>{}\r\n\t}\r\n\r\n\tprotected initState() {\r\n\t\treturn {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tprotected bindEvent(): void {\r\n\t//   this.propertyNode.props_spr_win_bg.on(Node.EventType.TOUCH_END,()=>{\r\n\t// \tplayBtnClick();\r\n\t// \tthis.events.onClosePanel()\r\n\t//   })\r\n\r\n\t}\r\n\r\n\tprotected useProps(key: keyof IProps, value: { pre: any, cur: any }) {\r\n\t\t\r\n\t\tif(key===\"myInfo\"){\r\n\t\t\t// updateWinUsers(this.node)\r\n\t\t\t// if(value.cur.winGold===0){\r\n\t\t\t// \tthis.propertyNode.props_label_lose_num.getComponent(Label).string=value.cur.winGold\r\n\t\t\t// }else{\r\n\t\t\t// \tlet goldNum:string=Math.abs(value.cur.winGold).formatAmountWithCommas()\r\n\t\t\t// \tthis.propertyNode.props_label_lose_num.getComponent(Label).string=\"-\"+goldNum\r\n\t\t\t// }\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\t\t\t\r\n\r\n\r\n\t}\r\n\r\n\tpublic updateWinsAndLosses(myInfo){\r\n\t\tupdateWinUsers(this.node)\r\n\t\t\tif(myInfo.winGold===0){\r\n\t\t\t\tthis.propertyNode.props_label_lose_num.getComponent(Label).string = myInfo.winGold + \"\";\r\n\t\t\t}else{\r\n\t\t\t\tlet goldNum:string=Math.abs(myInfo.winGold).formatAmountWithCommas()\r\n\t\t\t\tthis.propertyNode.props_label_lose_num.getComponent(Label).string = \"-\" + goldNum;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n\ttoggleCallback(event: Event, customEventData: string) {\r\n\r\n\t}\r\n\r\n\tprotected bindUI(): void {\r\n\r\n\t\t\t\t\r\n\t}\r\n\r\n\tupdate(deltaTime: number) {\r\n\r\n\t}\r\n}\r\n\r\n"]}