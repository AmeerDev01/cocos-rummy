{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragonTiger/store/actions/pokerDetail.ts"],"names":["reduxAct","default","initState","pokerInfo","pokerLeftNum","suit","rank","color","pokerRightNum","sendedP","readySendP","win","tips","vip","level","ActionTypes","updatePokerInfo","createAction","DRAGONTGER_POKER_INFO","setPokerLeftAction","DRAGONTGER_POKER_LEFT","setPokerRightAction","DRAGONTGER_POKER_RIGHT","setSendedPAction","DRAGONTGER_POKER_SENDEDP","setReadyPAction","DRAGONTGER_POKER_READYSENDP","setWinAction","DRAGONTGER_POKER_WIN","setTipsAction","DRAGONTGER_TIPS","setVipAction","DRAGONTGER_VIP","setLevelAction","DRAGONTGER_LEVEL","resetPokerStore","DRAGONTGER_POKER_RESET_STORE"],"mappings":";;;;;;;;;;;;;;;AAAoBA,MAAAA,Q,aAAXC,O;;;;;;;2BAkCIC,S,GAA2B;AACpCC,QAAAA,SAAS,EAAC,IAD0B;AAEpCC,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAC,CADK;AACH;AACPC,UAAAA,IAAI,EAAC,EAFK;AAEF;AACRC,UAAAA,KAAK,EAAC;AAHI,SAFsB;AAOpCC,QAAAA,aAAa,EAAE;AACXH,UAAAA,IAAI,EAAC,CADM;AACJ;AACPC,UAAAA,IAAI,EAAC,EAFM;AAEH;AACRC,UAAAA,KAAK,EAAC;AAHK,SAPqB;AAYpCE,QAAAA,OAAO,EAAC,CAZ4B;AAapCC,QAAAA,UAAU,EAAC,CAbyB;AActCC,QAAAA,GAAG,EAAE,CAdiC;AAetCC,QAAAA,IAAI,EAAE,IAfgC;AAgBtCC,QAAAA,GAAG,EAAE,CAhBiC;AAiBtCC,QAAAA,KAAK,EAAC;AAjBgC,O;AAoBxC;;;6BAEYC,W,0BAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;AAAAA,QAAAA,W;eAAAA,W;;AAeZ;;;iCA2BaC,e,GAAiB;AAAA;AAAA,gCAASC,YAAT,CAAsBF,WAAW,CAACG,qBAAlC,EACzBf,SAAD,IAGwD;AACtD,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACL,OAN6B,C;;oCAQjBgB,kB,GAAqB;AAAA;AAAA,gCAASF,YAAT,CAAsBF,WAAW,CAACK,qBAAlC,EAC/BhB,YAAD,IAIwD;AACtD,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAPiC,C;;qCASrBiB,mB,GAAsB;AAAA;AAAA,gCAASJ,YAAT,CAAsBF,WAAW,CAACO,sBAAlC,EAC9Bd,aAAD,IAIyD;AACvD,eAAO;AAACA,UAAAA;AAAD,SAAP;AACH,OAPgC,C;;kCASpBe,gB,GAAmB;AAAA;AAAA,gCAASN,YAAT,CAAsBF,WAAW,CAACS,wBAAlC,EAC7Bf,OAAD,IAAyE;AACvE,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAH+B,C;;iCAInBgB,e,GAAkB;AAAA;AAAA,gCAASR,YAAT,CAAsBF,WAAW,CAACW,2BAAlC,EAC5BhB,UAAD,IAA+E;AAC7E,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAH8B,C;;8BAIlBiB,Y,GAAe;AAAA;AAAA,gCAASV,YAAT,CAAsBF,WAAW,CAACa,oBAAlC,EACzBjB,GAAD,IAAiE;AAC/D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAH2B,C;;+BAIfkB,a,GAAgB;AAAA;AAAA,gCAASZ,YAAT,CAAsBF,WAAW,CAACe,eAAlC,EAC1BlB,IAAD,IAA6D;AAC3D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACH,OAH4B,C;;8BAIhBmB,Y,GAAe;AAAA;AAAA,gCAASd,YAAT,CAAsBF,WAAW,CAACiB,cAAlC,EACzBnB,GAAD,IAA2D;AACzD,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACF,OAH0B,C;;gCAIfoB,c,GAAiB;AAAA;AAAA,gCAAShB,YAAT,CAAsBF,WAAW,CAACmB,gBAAlC,EAC3BpB,KAAD,IAA+D;AAC7D,eAAO;AAAEA,UAAAA;AAAF,SAAP;AACD,OAH2B,C;;iCAIjBqB,e,GAAkB;AAAA;AAAA,gCAASlB,YAAT,CAAsBF,WAAW,CAACqB,4BAAlC,EAC7B,MAA+D;AAC7D,eAAO;AAAElC,UAAAA;AAAF,SAAP;AACD,OAH4B,C","sourcesContent":["import { default as reduxAct } from \"redux-act\";\r\n\r\nexport interface DragonTigerCard{\r\n    suit:number,//花色\r\n    rank:string,//数字\r\n    color:number,//颜色\r\n  }\r\n  export type Tips = {\r\n    name: string,\r\n    num: string,\r\n  }\r\n\r\nexport type InitStateType = {\r\n    pokerInfo: {\r\n      pokerLeftNum: DragonTigerCard;\r\n      pokerRightNum:DragonTigerCard ;\r\n    }\r\n    /**左边牌信息 */\r\n    pokerLeftNum:DragonTigerCard ;\r\n    /**右边牌信息 */\r\n    pokerRightNum:DragonTigerCard ;\r\n    /**已使用牌数量 */\r\n    sendedP:number,\r\n    /**未使用牌数量 */\r\n    readySendP:number\r\n    /**赢的区域 */\r\n    win: number,\r\n    tips: Tips[],\r\n    vip: number,\r\n    level: number,\r\n};\r\n\r\n\r\n\r\nexport const initState: InitStateType = {\r\n    pokerInfo:null,\r\n    pokerLeftNum: {\r\n        suit:0,//花色\r\n        rank:\"\",//数字\r\n        color:0\r\n    },\r\n    pokerRightNum: {\r\n        suit:0,//花色\r\n        rank:\"\",//数字\r\n        color:0\r\n    },\r\n    sendedP:0,\r\n    readySendP:0,\r\n  win: 0,\r\n  tips: null,\r\n  vip: 0,\r\n  level:0,\r\n};\r\n\r\n/**必须大写，不然redux-act要自动加序列号 */\r\n\r\nexport enum ActionTypes {\r\n  DRAGONTGER_POKER_INFO = \"DRAGONTGER_POKER_INFO\",\r\n  DRAGONTGER_POKER_LEFT = \"DRAGONTGER_POKER_LEFT\",\r\n  DRAGONTGER_POKER_RIGHT='DRAGONTGER_POKER_RIGHT',\r\n  DRAGONTGER_POKER_SENDEDP=\"DRAGONTGER_POKER_SENDEDP\",\r\n  DRAGONTGER_POKER_WIN=\"DRAGONTGER_POKER_WIN\",\r\n  DRAGONTGER_POKER_READYSENDP = \"DRAGONTGER_POKER_READYSENDP\",\r\n  DRAGONTGER_TIPS = \"DRAGONTGER_TIPS\",\r\n  DRAGONTGER_VIP=\"DRAGONTGER_VIP\",\r\n  DRAGONTGER_LEVEL=\"DRAGONTGER_LEVEL\",\r\n  DRAGONTGER_POKER_RESET_STORE = \"DRAGONTGER_POKER_RESET_STORE\",\r\n\r\n  \r\n}\r\n\r\n/**定义action的payLoad类型 */\r\n\r\nexport type ActionPayLoad<A extends ActionTypes> =\r\nA extends ActionTypes.DRAGONTGER_POKER_INFO ? {pokerInfo:{\r\n  pokerLeftNum: DragonTigerCard;\r\n  pokerRightNum:DragonTigerCard ;\r\n}}:\r\n  A extends ActionTypes.DRAGONTGER_POKER_LEFT ? {pokerLeftNum:{\r\n    suit:number,\r\n    rank:string,\r\n    color:number,\r\n  }} : \r\n  A extends ActionTypes.DRAGONTGER_POKER_RIGHT ? {pokerRightNum:{\r\n    suit:number,\r\n    rank:string,\r\n    color:number,\r\n  }} : \r\n  A extends ActionTypes.DRAGONTGER_POKER_SENDEDP ? {sendedP:number}:\r\n  A extends ActionTypes.DRAGONTGER_POKER_READYSENDP ? {readySendP:number}:\r\n  A extends ActionTypes.DRAGONTGER_POKER_WIN ? { win: number }:\r\n  A extends ActionTypes.DRAGONTGER_TIPS ? { tips: Tips[] } :\r\n  A extends ActionTypes.DRAGONTGER_VIP ? { vip: number } :\r\n  A extends ActionTypes.DRAGONTGER_LEVEL ? { level: number } :\r\n  A extends ActionTypes.DRAGONTGER_POKER_RESET_STORE ? { } :\r\n  never;\r\n  \r\n\r\nexport const updatePokerInfo= reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_INFO,\r\n    (pokerInfo:{\r\n      pokerLeftNum: DragonTigerCard;\r\n      pokerRightNum:DragonTigerCard ;\r\n    }): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_INFO> => {\r\n      return { pokerInfo }\r\n})\r\n  \r\nexport const setPokerLeftAction = reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_LEFT,\r\n  (pokerLeftNum:{\r\n    suit:number,\r\n    rank:string,\r\n    color:number,\r\n  }): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_LEFT> => {\r\n    return { pokerLeftNum }\r\n})\r\n\r\nexport const setPokerRightAction = reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_RIGHT,\r\n    (pokerRightNum:{\r\n      suit:number,\r\n      rank:string,\r\n      color:number,\r\n    }): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_RIGHT> => {\r\n      return {pokerRightNum }\r\n  })\r\n\r\n  export const setSendedPAction = reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_SENDEDP,\r\n    (sendedP:number): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_SENDEDP> => {\r\n      return { sendedP }\r\n  })\r\n  export const setReadyPAction = reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_READYSENDP,\r\n    (readySendP:number): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_READYSENDP> => {\r\n      return { readySendP }\r\n  })\r\n  export const setWinAction = reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_WIN,\r\n    (win:number): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_WIN> => {\r\n      return { win }\r\n  })\r\n  export const setTipsAction = reduxAct.createAction(ActionTypes.DRAGONTGER_TIPS,\r\n    (tips:Tips[]): ActionPayLoad<ActionTypes.DRAGONTGER_TIPS> => {\r\n      return { tips }\r\n  })\r\n  export const setVipAction = reduxAct.createAction(ActionTypes.DRAGONTGER_VIP,\r\n    (vip:number): ActionPayLoad<ActionTypes.DRAGONTGER_VIP> => {\r\n      return { vip }\r\n   })\r\n  export const setLevelAction = reduxAct.createAction(ActionTypes.DRAGONTGER_LEVEL,\r\n    (level:number): ActionPayLoad<ActionTypes.DRAGONTGER_LEVEL> => {\r\n      return { level }\r\n    })\r\n  export const resetPokerStore = reduxAct.createAction(ActionTypes.DRAGONTGER_POKER_RESET_STORE,\r\n    (): ActionPayLoad<ActionTypes.DRAGONTGER_POKER_RESET_STORE> => {\r\n      return { initState }\r\n    })\r\n        \r\n\r\n\r\n\r\n\r\n"]}