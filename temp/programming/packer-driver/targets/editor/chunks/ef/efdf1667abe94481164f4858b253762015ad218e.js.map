{"version":3,"sources":["file:///Users/geliang/web/dibai/hall/assets/script/subGame/dragon/Slot/Proxy/SocketProxy.ts"],"names":["SocketProxy","CommandDefine","ProxyDefine","BgMediatorConst","RollerMediatorConst","SocketRepository","config","getBgProxy","BaseProxy","global","lang","addToastAction","SubGameType","goldState","SKT_MAG_TYPE","dataMap","sktMsgListener","add","key","id","handler","sortId","item","find","i","handlerList","push","dispath","data","sort","a","b","forEach","remove","filter","removeAllListener","constructor","proxyName","ws","heartBeatTimer","socketConfig","switcher","repository","initSocket","cbFn","err","WebSocket","OPEN","readyState","close","socketIp","onopen","event","console","log","connectCallback","window","setInterval","sendSktMessage","HEART_BEAT","undefined","onerror","onmessage","ev","onclose","clearInterval","e","sendNotification","SHOW_TOAST","content","evData","JSON","parse","msgArr","code","split","success","gameCode","error","typeCode","hallDispatch","write","k","WebSocketModule","socketConnectDateFail","placeStr","includes","closeSubGame","confirmContent","msgType","send","stringify","sendAnth","AUTH","token","gameId","roomId","calculateTheBalanceStatus","gold","rollerLaunchResult","dl","si","bl","betAmount","getShiftAmount","value","linesQueue","length","InsufficientBalanceDisplay","sendLaunch","openShop","LAUNCH","positionId","userServerData","tableId","RINGOFFIREPANELSTATUS","gears","closeSocket","direction","userSwitch","SETGREYOUT","state","val","UPDATE_JACKPOT_TOTAL","total","winning","maxRate","initUserSwitch","betSwitcher","map","lv","level","amount","setTimeout","getTransferGameInfo","stopIndexArr","rollerId","targetList","_linesDir","wp","freegameDir","freegame","linesDir","lineList","lineIndex","lines","coord","item2","index2","t","item3","getDockIcon","fixedChessboardIcon","line","getDackiconLenth","gameType","MAIN","getChange","change","getIconStay","iconStay","setIconStay","getOpenBoxEffect","lw","getRemainTimes","freeCount","getCurrentScore","order","tbb","tw","freeGameAmount","getMagnification","magnification","getUserLevel","getNumberOfRounds","getUserGold","OLD_GOLD","PROCESS_GOLD","blab","topUpCoins","setGametType","getLocalCacheDataProxy","facade","retrieveProxy","LOCAL_CACHE_DATA","Object","assign","ROLLER","INIT_ROLLER_PANEL","SUB_GAME1","SUB_GAME2","initGameData","JACKPOT","setJackPot","JACKPOT_TOTAL","UPDATE_USER_GOLD","TOGGLETHESTARTBUTTON","INITSCORE","UPDATE_BTN_LABEL","frequency","setGameInfo","REFRESHCOINS","VACATETHEROOM","UpdateModule","GameNotice","gameTypePre","obj","keys","CHANGEPANELS","THERINGOFFIREROLLS","gameTypeNew","setIsChangeNextGameType","UPDATE_GAME_STATUS","UPDATE_JACKPOT","jackPotData","freeGameCount","type","INITDOCKIOCN","dockIocn","REMOVE_THECHEST_LAYER","UPDATETHEBACKGROUND"],"mappings":";;;+KA8FaA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9FJC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,gB,iBAAAA,gB;;AACFC,MAAAA,M;;AACkBC,MAAAA,U,iBAAAA,U;;AAClBC,MAAAA,S;;AAIEC,MAAAA,M,kBAAAA,M;AAAQC,MAAAA,I,kBAAAA,I;;AACRC,MAAAA,c,kBAAAA,c;;;;;;;6BAEGC,W,0BAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;eAAAA,W;;;2BAQAC,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;8BAQAC,Y,0BAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;AAAAA,QAAAA,Y;eAAAA,Y;;;AAyBRC,MAAAA,O,GAOC,E;AACL;;gCACaC,c,GAAiB;AAC1BC,QAAAA,GAAG,EAAE,CAACC,GAAD,EAAoBC,EAApB,EAAgCC,OAAhC,EAA8DC,MAAc,GAAG,CAA/E,KAAqF;AACtF,cAAIC,IAAI,GAAGP,OAAO,CAACQ,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACN,GAAF,KAAUA,GAA5B,CAAX;;AACA,cAAI,CAACI,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG;AACHJ,cAAAA,GADG;AAEHO,cAAAA,WAAW,EAAE,CAAC;AAAEN,gBAAAA,EAAF;AAAME,gBAAAA,MAAN;AAAcD,gBAAAA;AAAd,eAAD;AAFV,aAAP;AAIAL,YAAAA,OAAO,CAACW,IAAR,CAAaJ,IAAb;AACH,WAND,MAMO;AACHA,YAAAA,IAAI,CAACG,WAAL,CAAiBC,IAAjB,CAAsB;AAAEP,cAAAA,EAAF;AAAME,cAAAA,MAAN;AAAcD,cAAAA;AAAd,aAAtB;AACH;AACJ,SAZyB;AAa1BO,QAAAA,OAAO,EAAE,CAACT,GAAD,EAAoBU,IAApB,KAAkC;AACvC,gBAAMN,IAAI,GAAGP,OAAO,CAACQ,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACN,GAAF,KAAUA,GAA5B,CAAb;AACAI,UAAAA,IAAI,IAAIA,IAAI,CAACG,WAAL,CAAiBI,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACT,MAAF,GAAWU,CAAC,CAACV,MAA7C,EAAqDW,OAArD,CAA6DV,IAAI,IAAIA,IAAI,CAACF,OAAL,CAAaQ,IAAb,CAArE,CAAR;AACH,SAhByB;AAiB1BK,QAAAA,MAAM,EAAE,CAACf,GAAD,EAAoBC,EAApB,KAAoC;AACxC,cAAIA,EAAJ,EAAQ;AACJ,gBAAIG,IAAI,GAAGP,OAAO,CAACQ,IAAR,CAAaD,IAAI,IAAIA,IAAI,CAACJ,GAAL,KAAaA,GAAlC,CAAX;AACAI,YAAAA,IAAI,CAACG,WAAL,GAAmBH,IAAI,CAACG,WAAL,CAAiBS,MAAjB,CAAwBZ,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA5C,CAAnB;AACH,WAHD,MAGO;AACHJ,YAAAA,OAAO,GAAGA,OAAO,CAACmB,MAAR,CAAeZ,IAAI,IAAIA,IAAI,CAACJ,GAAL,KAAaA,GAApC,CAAV;AACH;AACJ,SAxByB;AAyB1BiB,QAAAA,iBAAiB,EAAE,MAAM;AACrBpB,UAAAA,OAAO,GAAG,EAAV;AACH;AA3ByB,O;;6BA8BjBf,W,GAAN,MAAMA,WAAN;AAAA;AAAA,kCAAsD;AAUzDoC,QAAAA,WAAW,CAACC,SAAiB,GAAG,IAArB,EAA2BT,IAAS,GAAG,IAAvC,EAA6C;AACpD,gBAAMS,SAAN,EAAiBT,IAAjB;AADoD,eAThDU,EASgD;AAAA,eARhDC,cAQgD;AAAA,eAPhDC,YAOgD;AAAA,eADhDC,QACgD,GADvC,EACuC;AAEpD,eAAKC,UAAL,GAAkB;AAAA;AAAA,qDAAlB;AACA,eAAKF,YAAL,GAAoB,IAApB;AACH;;AAEsB,cAAVG,UAAU,CAACC,IAAD,EAAmBC,GAAnB,EAAqC;AACxD,cAAI;AACA,iBAAKL,YAAL,GAAoB,MAAM,KAAKE,UAAL,CAAgBF,YAAhB,EAA1B;;AACA,gBAAI,KAAKF,EAAL,IAAWQ,SAAS,CAACC,IAAV,IAAkB,KAAKT,EAAL,CAAQU,UAAzC,EAAqD;AACjD,mBAAKV,EAAL,CAAQW,KAAR;AACA,mBAAKX,EAAL,GAAU,IAAV;AACH;;AAED,iBAAKA,EAAL,GAAU,IAAIQ,SAAJ,CAAc,KAAKN,YAAL,CAAkBU,QAAhC,CAAV;AACA;;AACA,iBAAKZ,EAAL,CAAQa,MAAR,GAAkBC,KAAD,IAAW;AACxBC,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,mBAAKC,eAAL;AACAX,cAAAA,IAAI,IAAIA,IAAI,EAAZ,CAHwB,CAIxB;;AACA,mBAAKL,cAAL,GAAsBiB,MAAM,CAACC,WAAP,CAAmB,MAAM;AAC3C,qBAAKC,cAAL,CAAoB5C,YAAY,CAAC6C,UAAjC,EAA6CC,SAA7C,EAD2C,CAE3C;AACH,eAHqB,EAGnB,IAHmB,CAAtB,CALwB,CASxB;AACH,aAVD;;AAWA,iBAAKtB,EAAL,CAAQuB,OAAR,GAAmBT,KAAD,IAAW;AACzBP,cAAAA,GAAG,IAAIA,GAAG,CAACO,KAAD,CAAV;AACH,aAFD;;AAGA,iBAAKd,EAAL,CAAQwB,SAAR,GAAqBC,EAAD,IAA2B;AAC3C,mBAAKD,SAAL,CAAeC,EAAf;AACH,aAFD;;AAGA,iBAAKzB,EAAL,CAAQ0B,OAAR,GAAkB,MAAM;AACpB;AACAR,cAAAA,MAAM,CAACS,aAAP,CAAqB,KAAK1B,cAA1B;AACA,mBAAKD,EAAL,GAAU,IAAIQ,SAAJ,CAAc,KAAKN,YAAL,CAAkBU,QAAhC,CAAV;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,aALD;AAMH,WAhCD,CAgCE,OAAOY,CAAP,EAAU;AACR,iBAAKC,gBAAL,CAAsB;AAAA;AAAA,oDAAgBC,UAAtC,EAAkD;AAAEC,cAAAA,OAAO,EAAG,QAAOH,CAAE;AAArB,aAAlD;AACH;AACJ;;AAEMJ,QAAAA,SAAS,CAACC,EAAD,EAAyC;AACrD,gBAAMO,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWT,EAAE,CAACnC,IAAd,CAAf,CADqD,CAErD;;AACA,gBAAM6C,MAAM,GAAGH,MAAM,CAACI,IAAP,CAAYC,KAAZ,CAAkB,IAAlB,CAAf;;AACA,cAAIL,MAAM,CAACM,OAAX,EAAoB;AAChB,gBAAIH,MAAM,CAAC,CAAD,CAAN,KAAc;AAAA;AAAA,kCAAOI,QAAzB,EAAmC;AAC/B,mBAAKV,gBAAL,CAAsB;AAAA;AAAA,sDAAgBC,UAAtC,EAAkD;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAlD;AACAhB,cAAAA,OAAO,CAACyB,KAAR,CAAc,MAAd,EAAsB,SAAtB;AACA;AACH;;AACD,kBAAMC,QAAQ,GAAGN,MAAM,CAAC,CAAD,CAAvB,CANgB,CAMU;;AAC1BzD,YAAAA,cAAc,CAACW,OAAf,CAAuBoD,QAAvB,EAAiDT,MAAM,CAAC1C,IAAxD;AACH,WARD,MAQO;AACH;AAAA;AAAA,kCAAOoD,YAAP,CAAoB;AAAA;AAAA,kDAAe;AAAEX,cAAAA,OAAO,EAAE;AAAA;AAAA,gCAAKY,KAAL,CAAWC,CAAC,IAAIA,CAAC,CAACC,eAAF,CAAkBC,qBAAlC,EAAyD,EAAzD,EAA6D;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAA7D;AAAX,aAAf,CAApB;;AACA,gBAAIf,MAAM,CAAC,MAAD,CAAN,CAAegB,QAAf,CAAwB,IAAxB,CAAJ,EAAmC;AAC/B;AAAA;AAAA,oCAAOC,YAAP,CAAoB;AAAEC,gBAAAA,cAAc,EAAElB,MAAM,CAAC,QAAD;AAAxB,eAApB;AACH;;AACDjB,YAAAA,OAAO,CAACyB,KAAR,CAAe,MAAf,EAAsBR,MAAtB;AACH;AACJ;;AAEMZ,QAAAA,cAAc,CAAC+B,OAAD,EAAwB7D,IAAxB,EAAmF;AACpG,eAAKU,EAAL,IAAW,KAAKA,EAAL,CAAQoD,IAAR,CAAanB,IAAI,CAACoB,SAAL,CAAe;AACnCjB,YAAAA,IAAI,EAAG,GAAE;AAAA;AAAA,kCAAOG,QAAS,IAAGY,OAAQ,EADD;AACI7D,YAAAA;AADJ,WAAf,CAAb,CAAX;AAGH;;AAEMgE,QAAAA,QAAQ,GAAG;AACd,eAAKlC,cAAL,CAAoB5C,YAAY,CAAC+E,IAAjC,EACI;AACI,qBAAS,KAAKrD,YAAL,CAAkBsD,KAD/B;AAEI,sBAAU,KAAKtD,YAAL,CAAkBuD,MAFhC;AAGI,sBAAU,KAAKvD,YAAL,CAAkBwD;AAHhC,WADJ;AAOH;;AACMC,QAAAA,yBAAyB,GAAG;AAC/B,cAAIC,IAAI,GAAG,KAAKxD,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CC,EAAvD;AACA,cAAIC,SAAS,GAAI,KAAKC,cAAL,CAAoB,MAApB,EAA4BC,KAA7B,GAAsC;AAAA;AAAA,gCAAOC,UAAP,CAAkBC,MAAxE;AACA,eAAKxC,gBAAL,CAAsB;AAAA;AAAA,kDAAgByC,0BAAtC,EAAkE;AAAEN,YAAAA,EAAE,EAAEJ,IAAI,GAAGK;AAAb,WAAlE;AACA,iBAAOL,IAAI,GAAGK,SAAd;AACH;AACD;;;AACOM,QAAAA,UAAU,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA,cAAIP,EAAE,GAAG,KAAKL,yBAAL,EAAT;;AACA,cAAIK,EAAJ,EAAQ;AACJ;AAAA;AAAA,kCAAOQ,QAAP;AACH,WAFD,MAEO;AACH,iBAAKpD,cAAL,CAAoB5C,YAAY,CAACiG,MAAjC,EAAyC;AACrC,4BAAc,KAAKP,cAAL,CAAoB,MAApB,EAA4BQ,UADL;AAErC,yBAAW,KAAKtE,UAAL,CAAgBuE,cAAhB,CAA+BC;AAFL,aAAzC;AAIA,iBAAK/C,gBAAL,CAAuB;AAAA;AAAA,4DAAoBgD,qBAA3C,EAAkE;AAAEC,cAAAA,KAAK,EAAC,KAAKZ,cAAL,CAAoB,MAApB,EAA4BQ;AAApC,aAAlE;AACH;AACJ;;AACMK,QAAAA,WAAW,GAAG;AACjB,cAAI,KAAK/E,EAAT,EAAa;AACT,iBAAKA,EAAL,CAAQW,KAAR;AACA,iBAAKX,EAAL,GAAU,IAAV;AACH;AACJ;AACD;;;AACOkE,QAAAA,cAAc,CAACc,SAAD,EAAiD;AAClE;AACA,cAAIA,SAAS,KAAK,KAAd,IAAuB,KAAK5E,UAAL,CAAgB6E,UAAhB,GAA6B,KAAK9E,QAAL,CAAckE,MAAtE,EAA8E;AAC1E,iBAAKjE,UAAL,CAAgB6E,UAAhB;AACH,WAFD,MAEO,IAAID,SAAS,KAAK,KAAd,IAAuB,KAAK5E,UAAL,CAAgB6E,UAAhB,KAA+B,KAAK9E,QAAL,CAAckE,MAAxE,EAAgF,CACnF;AACH;;AAED,cAAIW,SAAS,KAAK,UAAd,IAA4B,KAAK5E,UAAL,CAAgB6E,UAAhB,GAA6B,CAA7D,EAAgE;AAC5D,iBAAK7E,UAAL,CAAgB6E,UAAhB;AACH,WAFD,MAEO,IAAID,SAAS,KAAK,UAAd,IAA4B,KAAK5E,UAAL,CAAgB6E,UAAhB,KAA+B,CAA/D,EAAkE,CACrE;AACH;;AACD,cAAI,KAAK7E,UAAL,CAAgB6E,UAAhB,IAA8B,CAA9B,IAAmC,KAAK7E,UAAL,CAAgB6E,UAAhB,KAA+B,KAAK9E,QAAL,CAAckE,MAApF,EAA4F;AACxF,iBAAKxC,gBAAL,CAAsB;AAAA;AAAA,oDAAgBqD,UAAtC,EAAkD;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAlD;AACH,WAFD,MAEO,IAAI,KAAK/E,UAAL,CAAgB6E,UAAhB,GAA6B,CAA7B,IAAkC,CAAtC,EAAyC;AAC5C,iBAAKpD,gBAAL,CAAsB;AAAA;AAAA,oDAAgBqD,UAAtC,EAAkD;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAlD;AACH,WAFM,MAEA;AACH,iBAAKtD,gBAAL,CAAsB;AAAA;AAAA,oDAAgBqD,UAAtC,EAAkD;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAlD;AACH;;AACD,cAAIH,SAAS,KAAK,KAAlB,EAAyB;AACrB,iBAAK5E,UAAL,CAAgB6E,UAAhB,GAA6B,KAAK9E,QAAL,CAAckE,MAA3C;AACH;;AAED,cAAI,KAAKjE,UAAL,CAAgB6E,UAAhB,GAA6B,CAAjC,EAAoC;AAChC,gBAAIG,GAAG,GAAG,KAAKjF,QAAL,CAAc,KAAKC,UAAL,CAAgB6E,UAAhB,GAA6B,CAA3C,EAA8Cd,KAAxD;AACA,iBAAKtC,gBAAL,CAAsB;AAAA;AAAA,4DAAoBwD,oBAA1C,EAAgE;AAAEC,cAAAA,KAAK,EAAEF,GAAG,GAAG;AAAA;AAAA,oCAAOG,OAAP,CAAe,CAAf,EAAkBC;AAAjC,aAAhE;AACH;;AACD,iBAAO,KAAKrF,QAAL,CAAc,KAAKC,UAAL,CAAgB6E,UAAhB,GAA6B,CAA3C,CAAP;AACH;;AACMQ,QAAAA,cAAc,CAACL,GAAD,EAAM;AACvB,eAAKhF,UAAL,CAAgB6E,UAAhB,GAA6BG,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc,CAAd,GAAkBA,GAA/C;AACA,eAAKjF,QAAL,GAAgB,EAAhB;AACA;AAAA;AAAA,gCAAOuF,WAAP,CAAmBC,GAAnB,CAAuB3G,IAAI,IAAI;AAC3B,gBAAI,KAAKoB,UAAL,CAAgBuE,cAAhB,CAA+BiB,EAA/B,IAAqC5G,IAAI,CAAC6G,KAAL,CAAW,CAAX,CAAzC,EAAwD;AACpD,mBAAK1F,QAAL,CAAcf,IAAd,CAAmB,GAAGJ,IAAI,CAAC8G,MAA3B;AACH;AACJ,WAJD;;AAKA,cAAI,KAAK1F,UAAL,CAAgB6E,UAAhB,IAA8B,CAAlC,EAAqC;AACjC/D,YAAAA,MAAM,CAAC6E,UAAP,CAAkB,MAAM;AACpB,mBAAKlE,gBAAL,CAAsB;AAAA;AAAA,sDAAgBqD,UAAtC,EAAkD;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAlD;AACH,aAFD,EAEG,GAFH;AAGH,WAJD,MAIO,IAAG,KAAK/E,UAAL,CAAgB6E,UAAhB,IAA8B,KAAK9E,QAAL,CAAckE,MAA/C,EAAsD;AACzDnD,YAAAA,MAAM,CAAC6E,UAAP,CAAkB,MAAM;AACpB,mBAAKlE,gBAAL,CAAsB;AAAA;AAAA,sDAAgBqD,UAAtC,EAAkD;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAlD;AACH,aAFD,EAEG,GAFH;AAGH;;AACDjE,UAAAA,MAAM,CAAC6E,UAAP,CAAkB,MAAI;AAClB,gBAAIX,GAAG,GAAG,KAAKjF,QAAL,CAAc,KAAKC,UAAL,CAAgB6E,UAAhB,GAA6B,CAA3C,EAA8Cd,KAAxD;AACA,iBAAKtC,gBAAL,CAAsB;AAAA;AAAA,4DAAoBwD,oBAA1C,EAAgE;AAAEC,cAAAA,KAAK,EAAEF,GAAG,GAAG;AAAA;AAAA,oCAAOG,OAAP,CAAe,CAAf,EAAkBC;AAAjC,aAAhE,EAFkB,CAGlB;AACH,WAJD,EAIE,IAJF;AAKH;AACD;;;AACOQ,QAAAA,mBAAmB,GAAG;AACzB,iBAAO;AACH;AACAC,YAAAA,YAAY,EAAE,MAAM;AAChB;AACA,qBAAO,KAAK7F,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CmC,QAAnD;AACH,aALE;;AAMH;AACAC,YAAAA,UAAU,EAAE,MAAM;AACd,kBAAIC,SAAS,GAAG,KAAKhG,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CsC,EAA5D;AACA,oBAAMC,WAAW,GAAG,KAAKlG,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CwC,QAA5C,IAAwD,EAA5E;AACA,oBAAMC,QAAQ,GAAG,EACb,GAAGJ,SADU;AAEb,mBAAGE;AAFU,eAAjB;AAIA,oBAAMG,QAAgE,GAAG,EAAzE;;AACA,mBAAK,IAAIC,SAAT,IAAsBF,QAAtB,EAAgC;AAC5B,sBAAMG,KAAiB,GAAGH,QAAQ,CAACE,SAAD,CAAlC;AACA;AACpB;AACA;;AACoB,sBAAME,KAAK,GAAG,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,EAAU,CAAC,CAAD,EAAI,EAAJ,CAAV,EAAmB,CAAC,CAAD,EAAI,EAAJ,CAAnB,EAA4B,CAAC,CAAD,EAAI,EAAJ,CAA5B,EAAqC,CAAC,CAAD,EAAI,EAAJ,CAArC,CAAd;AACAA,gBAAAA,KAAK,CAAClH,OAAN,CAAc,CAACmH,KAAD,EAAQC,MAAR,KAAmB;AAC7B,wBAAMC,CAAC,GAAGJ,KAAK,CAAC/G,MAAN,CAAcoH,KAAD,IAAWA,KAAK,CAAC,CAAD,CAAL,KAAaF,MAArC,EAA6CnB,GAA7C,CAAiDzG,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAvD,CAAV,CAD6B,CAE7B;;AACA6H,kBAAAA,CAAC,CAAC1C,MAAF,KAAawC,KAAK,CAAC,CAAD,CAAL,GAAWE,CAAxB;AACH,iBAJD;AAKAN,gBAAAA,QAAQ,CAACrH,IAAT,CAAc;AAAEsH,kBAAAA,SAAF;AAAaE,kBAAAA;AAAb,iBAAd;AACH;;AACD,qBAAOH,QAAP;AACH,aA7BE;;AA8BH;AACAQ,YAAAA,WAAW,EAAE,MAAM;AACf,kBAAIR,QAAJ;AACA,oBAAME,KAAiB,GAAG,KAAKvG,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CmD,mBAA5C,IAAmE,EAA7F;AACA;AAChB;AACA;;AACgB,oBAAMN,KAAK,GAAG,CAAC,CAAC,CAAD,EAAI,EAAJ,CAAD,EAAU,CAAC,CAAD,EAAI,EAAJ,CAAV,EAAmB,CAAC,CAAD,EAAI,EAAJ,CAAnB,EAA4B,CAAC,CAAD,EAAI,EAAJ,CAA5B,EAAqC,CAAC,CAAD,EAAI,EAAJ,CAArC,CAAd;AACAA,cAAAA,KAAK,CAAClH,OAAN,CAAc,CAACmH,KAAD,EAAQC,MAAR,KAAmB;AAC7B,sBAAMC,CAAC,GAAGJ,KAAK,CAAC/G,MAAN,CAAcuH,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,KAAYL,MAAnC,EAA2CnB,GAA3C,CAA+CzG,CAAC,IAAI,CAACA,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAApD,CAAV,CAD6B,CAE7B;;AACA6H,gBAAAA,CAAC,CAAC1C,MAAF,KAAawC,KAAK,CAAC,CAAD,CAAL,GAAWE,CAAxB;AACH,eAJD;AAKA,qBAAOH,KAAP;AACH,aA5CE;AA6CHQ,YAAAA,gBAAgB,EAAE,MAAM;AACpB,oBAAMT,KAAiB,GAAG,KAAKvG,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CmD,mBAAtE;AACA,qBAAOP,KAAK,CAACtC,MAAb;AACH,aAhDE;;AAiDH;AACAgD,YAAAA,QAAQ,EAAE,MAAM;AACZ,kBAAI,CAAC,KAAKjH,UAAL,CAAgByD,kBAArB,EAAyC;AACrC,uBAAOvF,WAAW,CAACgJ,IAAnB;AACH;;AACD,qBAAO,KAAKlH,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CsD,QAAnD;AACH,aAvDE;AAwDHE,YAAAA,SAAS,EAAE,MAAM;AACb,qBAAO,KAAKnH,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CyD,MAAnD;AACH,aA1DE;AA2DHC,YAAAA,WAAW,EAAE,MAAM;AACf,qBAAO,KAAKrH,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4C2D,QAAnD;AACH,aA7DE;;AA8DHC,YAAAA,WAAW,CAAC/I,GAAD,EAAM;AACb,mBAAKwB,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4C2D,QAA5C,GAAuD9I,GAAvD;AACH,aAhEE;;AAiEH;AACAgJ,YAAAA,gBAAgB,EAAE,MAAM;AACpB,qBAAO,KAAKxH,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4C8D,EAAnD;AACH,aApEE;;AAqEH;AACAC,YAAAA,cAAc,EAAE,MAAM;AAClB,qBAAO,KAAK1H,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CgE,SAAnD;AACH,aAxEE;;AAyEH;AACAC,YAAAA,eAAe,EAAGC,KAAD,IAAsC;AACnD,kBAAI,KAAK7H,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CmE,GAA5C,IAAmD,CAAvD,EAA0D;AACtD,uBAAO,KAAK9H,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CoE,EAAnD;AACH,eAFD,MAEO;AACH,oBAAIF,KAAK,KAAK,MAAd,EAAsB;AAClB,yBAAO,KAAK7H,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CoE,EAA5C,IAAkD,KAAK/H,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CqE,cAArG;AACH,iBAFD,MAEO;AACH,yBAAO,KAAKhI,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CqE,cAAnD;AACH;AACJ;AACJ,aApFE;;AAqFH;AACAC,YAAAA,gBAAgB,EAAE,MAAM;AACpB,qBAAO,KAAKjI,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CuE,aAAnD;AACH,aAxFE;;AAyFH;AACAC,YAAAA,YAAY,EAAE,MAAM;AAChB,qBAAO,KAAKnI,UAAL,CAAgBuE,cAAhB,CAA+BiB,EAAtC;AACH,aA5FE;;AA6FH;AACA4C,YAAAA,iBAAiB,EAAE,MAAM;AACrB,qBAAO,KAAKpI,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CgE,SAAnD;AACH,aAhGE;AAiGHU,YAAAA,WAAW,EAAGtD,KAAD,IAAW;AACpB,kBAAIA,KAAK,KAAK5G,SAAS,CAACmK,QAAxB,EAAkC;AAC9B3H,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CC,EAAxD;AACA,uBAAO,KAAK5D,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CC,EAAnD;AACH,eAHD,MAGO,IAAImB,KAAK,KAAK5G,SAAS,CAACoK,YAAxB,EAAsC;AACzC,uBAAO,KAAKvI,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4C6E,IAAnD;AACH,eAFM,MAEA,IAAIzD,KAAK,KAAK5G,SAAS,CAACsK,UAAxB,EAAoC;AACvC,uBAAO,KAAKzI,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CC,EAAnD;AACH;AACJ;AA1GE,WAAP;AA4GH;;AAEM8E,QAAAA,YAAY,CAACzB,QAAD,EAAmB;AAClC,eAAKjH,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CsD,QAA5C,GAAuDA,QAAvD;AACH;;AAEM1G,QAAAA,KAAK,GAAG;AACX,eAAKX,EAAL,CAAQW,KAAR;AACH;;AAEDoI,QAAAA,sBAAsB,GAAwB;AAC1C,iBAA4B,KAAKC,MAAL,CAAYC,aAAZ,CAA0B;AAAA;AAAA,0CAAYC,gBAAtC,CAA5B;AACH;;AAEOjI,QAAAA,eAAe,GAAG;AACtBvC,UAAAA,cAAc,CAACC,GAAf,CAAmBH,YAAY,CAAC+E,IAAhC,EAAsC,OAAtC,EAAgDjE,IAAD,IAAU;AACrD,iBAAKc,UAAL,CAAgBuE,cAAhB,GAAiCwE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9J,IAAlB,CAAjC;;AACA,gBAAIA,IAAI,CAAC+H,QAAL,KAAkB/I,WAAW,CAACgJ,IAAlC,EAAwC;AACpC;AACA,mBAAKzF,gBAAL,CAAsB;AAAA;AAAA,kDAAcwH,MAApC,EAA4C;AAAEhC,gBAAAA,QAAQ,EAAE;AAAZ,eAA5C,EAA6D;AAAA;AAAA,8DAAoBiC,iBAAjF;AACH,aAHD,MAGO,IAAIhK,IAAI,CAAC+H,QAAL,KAAkB/I,WAAW,CAACiL,SAAlC,EAA6C;AAChD;AACA,mBAAK1H,gBAAL,CAAsB;AAAA;AAAA,kDAAcwH,MAApC,EAA4C;AAAEhC,gBAAAA,QAAQ,EAAE;AAAZ,eAA5C,EAA6D;AAAA;AAAA,8DAAoBiC,iBAAjF;AACH,aAHM,MAGA,IAAIhK,IAAI,CAAC+H,QAAL,KAAkB/I,WAAW,CAACkL,SAAlC,EAA6C;AAChD;AACA,mBAAK3H,gBAAL,CAAsB;AAAA;AAAA,kDAAcwH,MAApC,EAA4C;AAAEhC,gBAAAA,QAAQ,EAAE;AAAZ,eAA5C,EAA6D;AAAA;AAAA,8DAAoBiC,iBAAjF;AACH;;AACD,iBAAKG,YAAL,CAAkBnK,IAAlB;AACH,WAbD;AAcAZ,UAAAA,cAAc,CAACC,GAAf,CAAmBH,YAAY,CAACkL,OAAhC,EAAyC,OAAzC,EAAmDpK,IAAD,IAAU;AACxD,iBAAKqK,UAAL,CAAgBrK,IAAhB;AACH,WAFD,EAEG,CAFH;AAGAZ,UAAAA,cAAc,CAACC,GAAf,CAAmBH,YAAY,CAACoL,aAAhC,EAA+C,OAA/C,EAAyDtK,IAAD,IAAU;AAC9D,gBAAI,KAAKc,UAAL,CAAgB6E,UAAhB,GAA6B,CAAjC,EAAoC;AAChC,mBAAKpD,gBAAL,CAAsB;AAAA;AAAA,8DAAoBwD,oBAA1C,EAAgE;AAAEC,gBAAAA,KAAK,EAAEhG;AAAT,eAAhE;AACH;AACJ,WAJD,EAIG,CAJH;AAKAZ,UAAAA,cAAc,CAACC,GAAf,CAAmBH,YAAY,CAACiG,MAAhC,EAAwC,OAAxC,EAAkDnF,IAAD,IAAU;AACvD,iBAAKc,UAAL,CAAgByD,kBAAhB,GAAqCsF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9J,IAAlB,CAArC;AACA,iBAAKuC,gBAAL,CAAsB;AAAA;AAAA,oDAAgBgI,gBAAtC,EAAwD;AAAE1E,cAAAA,KAAK,EAAE5G,SAAS,CAACoK;AAAnB,aAAxD;;AACA,gBAAI,KAAK3C,mBAAL,GAA2BqB,QAA3B,OAA0C,CAA9C,EAAiD;AAC7C;AACA,mBAAKxF,gBAAL,CAAsB;AAAA;AAAA,sDAAgBiI,oBAAtC,EAA4D;AAAE3E,gBAAAA,KAAK,EAAE;AAAT,eAA5D;AACA,mBAAKtD,gBAAL,CAAsB;AAAA;AAAA,sDAAgBkI,SAAtC;AACH;;AACD,iBAAKlI,gBAAL,CAAsB;AAAA;AAAA,oDAAgBmI,gBAAtC,EAAwD;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAxD;AACA,iBAAKC,WAAL;AACH,WAVD,EAUG,CAVH,EAvBsB,CAkCtB;;AACAxL,UAAAA,cAAc,CAACC,GAAf,CAAmBH,YAAY,CAAC2L,YAAhC,EAA8C,OAA9C,EAAwD7K,IAAD,IAAU;AAC7D,iBAAKc,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CC,EAA5C,GAAiD1E,IAAjD;AACA,iBAAKuC,gBAAL,CAAsB;AAAA;AAAA,oDAAgBgI,gBAAtC,EAAwD;AAAE1E,cAAAA,KAAK,EAAE5G,SAAS,CAACsK;AAAnB,aAAxD;AACH,WAHD,EAGG,CAHH,EAnCsB,CAuCtB;;AACAnK,UAAAA,cAAc,CAACC,GAAf,CAAmBH,YAAY,CAAC4L,aAAhC,EAA+C,OAA/C,EAAyD9K,IAAD,IAAU;AAC9D;AAAA;AAAA,kCAAO2D,YAAP,CAAoB;AAAEC,cAAAA,cAAc,EAAE;AAAA;AAAA,gCAAKP,KAAL,CAAWC,CAAC,IAAIA,CAAC,CAACyH,YAAF,CAAeC,UAA/B,EAA2C,EAA3C,EAA+C;AAAEvH,gBAAAA,QAAQ,EAAE;AAAZ,eAA/C;AAAlB,aAApB;AACH,WAFD,EAEG,CAFH;AAGH;;AACMmH,QAAAA,WAAW,GAAG;AACjB,gBAAMK,WAAW,GAAG,KAAKvE,mBAAL,GAA2BqB,QAA3B,EAApB;AACA,cAAImD,GAAG,GAAG,KAAKxE,mBAAL,GAA2BuB,SAA3B,EAAV;;AACA,cAAIiD,GAAG,IAAIrB,MAAM,CAACsB,IAAP,CAAYD,GAAZ,EAAiBnG,MAAjB,IAA2B,CAAtC,EAAyC;AACrC,iBAAKxC,gBAAL,CAAsB;AAAA;AAAA,4DAAoB6I,YAA1C,EAAwD;AAAEhD,cAAAA,QAAQ,EAAE,KAAK1B,mBAAL,GAA2BuB,SAA3B;AAAZ,aAAxD;AACH;;AACD,eAAK1F,gBAAL,CAAsB;AAAA;AAAA,0DAAoB8I,kBAA1C;AACA,gBAAMC,WAAW,GAAG,KAAK5E,mBAAL,GAA2BqB,QAA3B,EAApB;AACA;AAAA;AAAA,0CAAawD,uBAAb,CAAqCN,WAArC,EAAkDK,WAAlD;AACA,eAAK/I,gBAAL,CAAsB;AAAA;AAAA,kDAAgBiJ,kBAAtC;AACH;;AACMnB,QAAAA,UAAU,CAACrK,IAAD,EAAO;AACpB,eAAKuC,gBAAL,CAAsB;AAAA;AAAA,0DAAoBkJ,cAA1C,EAA0D;AAAEC,YAAAA,WAAW,EAAE1L;AAAf,WAA1D;AACH;;AACMmK,QAAAA,YAAY,CAACnK,IAAD,EAAO;AACtB6J,UAAAA,MAAM,CAACC,MAAP,CAAc,KAAKhJ,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,CAAd,EAA2DzE,IAA3D;AACA,eAAKc,UAAL,CAAgByD,kBAAhB,CAAmCC,EAAnC,CAAsCC,EAAtC,CAAyC,CAAzC,EAA4CgE,SAA5C,GAAwDzI,IAAI,CAAC2L,aAA7D;AACA,eAAKf,WAAL;AACA,eAAKrI,gBAAL,CAAsB;AAAA;AAAA,kDAAgBgI,gBAAtC,EAAwD;AAAE1E,YAAAA,KAAK,EAAE5G,SAAS,CAACmK;AAAnB,WAAxD;;AACA,cAAIpJ,IAAI,CAAC+H,QAAL,KAAkB,CAAtB,EAAyB;AACrB,iBAAKxF,gBAAL,CAAsB;AAAA;AAAA,oDAAgBiI,oBAAtC,EAA4D;AAAE3E,cAAAA,KAAK,EAAE,IAAT;AAAe+F,cAAAA,IAAI,EAAE;AAArB,aAA5D;AACH,WAFD,MAEO,IAAI5L,IAAI,CAAC+H,QAAL,KAAkB,CAAtB,EAAyB;AAC5B,iBAAKxF,gBAAL,CAAsB;AAAA;AAAA,oDAAgBiI,oBAAtC,EAA4D;AAAE3E,cAAAA,KAAK,EAAE;AAAT,aAA5D;AACA,iBAAKtD,gBAAL,CAAsB;AAAA;AAAA,oDAAgBmI,gBAAtC,EAAwD;AAAEC,cAAAA,SAAS,EAAE,KAAKjE,mBAAL,GAA2BwC,iBAA3B;AAAb,aAAxD;AACH,WAHM,MAIF,IAAIlJ,IAAI,CAAC+H,QAAL,KAAkB,CAAtB,EAAyB;AAC1B,iBAAKxF,gBAAL,CAAsB;AAAA;AAAA,oDAAgBiI,oBAAtC,EAA4D;AAAE3E,cAAAA,KAAK,EAAE;AAAT,aAA5D;AACA,iBAAKtD,gBAAL,CAAsB;AAAA;AAAA,4DAAoBsJ,YAA1C,EAAwD;AAAEC,cAAAA,QAAQ,EAAE,KAAKpF,mBAAL,GAA2BiB,WAA3B;AAAZ,aAAxD;AACA,iBAAKpF,gBAAL,CAAsB;AAAA;AAAA,oDAAgBmI,gBAAtC,EAAwD;AAAEC,cAAAA,SAAS,EAAE,KAAKjE,mBAAL,GAA2BwC,iBAA3B;AAAb,aAAxD;AACA,iBAAK3G,gBAAL,CAAsB;AAAA;AAAA,4DAAoBwJ,qBAA1C,EAAiE;AAAE3D,cAAAA,QAAQ,EAAE;AAAZ,aAAjE;AACH;;AACD,eAAK7F,gBAAL,CAAsB;AAAA;AAAA,0DAAoByJ,mBAA1C;AACH;;AAtXwD,O","sourcesContent":["import { CommandDefine } from \"../Const/CommandDefine\";\r\nimport { ProxyDefine } from \"../Const/ProxyDefine\";\r\nimport { BgMediatorConst } from \"../Mediator/BgMediator\";\r\nimport { RollerMediatorConst } from \"../Mediator/RollerMediator\";\r\nimport { SocketRepository } from \"../Repositories/SocketRepository\";\r\nimport config from \"../config\";\r\nimport { convertToMandK, getBgProxy } from \"../utils\";\r\nimport BaseProxy from \"./BaseProxy\";\r\nimport { LocalCacheDataProxy } from \"./LocalCacheDataProxy\";\r\nimport { BgProxy } from \"../Proxy/BgProxy\";\r\nimport { getSocketProxy } from \"db://assets/script/subGame/godWealth/Slot/GodWealth_utils\";\r\nimport { global, lang } from \"../../../../hall\";\r\nimport { addToastAction } from \"../../../../hall/store/actions/baseBoard\";\r\n\r\nexport enum SubGameType {\r\n    /**主滑槽游戏 */\r\n    MAIN,\r\n    /**开宝箱游戏 */\r\n    SUB_GAME1,\r\n    /**大滑槽游戏 */\r\n    SUB_GAME2\r\n}\r\nexport enum goldState {\r\n    /**默认金币 || 结算金币*/\r\n    OLD_GOLD,\r\n    /**扣除金币 */\r\n    PROCESS_GOLD,\r\n    /**充值刷新金币 */\r\n    topUpCoins\r\n}\r\nexport enum SKT_MAG_TYPE {\r\n    /**心跳 */\r\n    HEART_BEAT = \"1\",\r\n    /**认证 */\r\n    AUTH = \"2\",\r\n    /**退出 */\r\n    EXIT = \"3\",\r\n    /**启动 */\r\n    LAUNCH = \"501\",\r\n    JACKPOT = \"8\",\r\n    /**总数 */\r\n    JACKPOT_TOTAL = \"7\",\r\n    /**通知刷新金币 */\r\n    REFRESHCOINS = \"10\",\r\n    /**清退房间 */\r\n    VACATETHEROOM = \"3\"\r\n}\r\n\r\ntype SktMessageType = {\r\n    code: string,\r\n    messageId: string,\r\n    success: boolean,\r\n    data?: any\r\n}\r\n\r\nlet dataMap: Array<{\r\n    key: SKT_MAG_TYPE,\r\n    handlerList: Array<{\r\n        id: string,\r\n        sortId: number,\r\n        handler: (data: any) => void\r\n    }>\r\n}> = []\r\n/**自定义的监听器 */\r\nexport const sktMsgListener = {\r\n    add: (key: SKT_MAG_TYPE, id: string, handler: (data: any) => void, sortId: number = 0) => {\r\n        let item = dataMap.find(i => i.key === key)\r\n        if (!item) {\r\n            item = {\r\n                key,\r\n                handlerList: [{ id, sortId, handler }]\r\n            }\r\n            dataMap.push(item)\r\n        } else {\r\n            item.handlerList.push({ id, sortId, handler })\r\n        }\r\n    },\r\n    dispath: (key: SKT_MAG_TYPE, data: any) => {\r\n        const item = dataMap.find(i => i.key === key)\r\n        item && item.handlerList.sort((a, b) => a.sortId - b.sortId).forEach(item => item.handler(data))\r\n    },\r\n    remove: (key: SKT_MAG_TYPE, id?: string) => {\r\n        if (id) {\r\n            let item = dataMap.find(item => item.key === key)\r\n            item.handlerList = item.handlerList.filter(item => item.id !== id)\r\n        } else {\r\n            dataMap = dataMap.filter(item => item.key !== key)\r\n        }\r\n    },\r\n    removeAllListener: () => {\r\n        dataMap = []\r\n    }\r\n}\r\n\r\nexport class SocketProxy extends BaseProxy<SocketRepository> {\r\n    private ws: WebSocket\r\n    private heartBeatTimer: number\r\n    private socketConfig: {\r\n        socketIp: string;\r\n        token: string;\r\n        gameId: number;\r\n        roomId: string;\r\n    }\r\n    private switcher=[]\r\n    constructor(proxyName: string = null, data: any = null) {\r\n        super(proxyName, data)\r\n        this.repository = new SocketRepository()\r\n        this.socketConfig = null\r\n    }\r\n\r\n    public async initSocket(cbFn: () => void, err: (e) => void) {\r\n        try {\r\n            this.socketConfig = await this.repository.socketConfig()\r\n            if (this.ws && WebSocket.OPEN == this.ws.readyState) {\r\n                this.ws.close()\r\n                this.ws = null\r\n            }\r\n\r\n            this.ws = new WebSocket(this.socketConfig.socketIp)\r\n            /**当连接建立成功后，这个函数就会被调用 */\r\n            this.ws.onopen = (event) => {\r\n                console.log(\"WebSocket connected\")\r\n                this.connectCallback()\r\n                cbFn && cbFn()\r\n                // this.sendSktMessage(SKT_MAG_TYPE.JACKPOT_TOTAL, undefined)\r\n                this.heartBeatTimer = window.setInterval(() => {\r\n                    this.sendSktMessage(SKT_MAG_TYPE.HEART_BEAT, undefined)\r\n                    // this.sendSktMessage(SKT_MAG_TYPE.JACKPOT_TOTAL, undefined)\r\n                }, 5000)\r\n                // this.sendNotification(CommandDefine.START_UP);\r\n            }\r\n            this.ws.onerror = (event) => {\r\n                err && err(event)\r\n            }\r\n            this.ws.onmessage = (ev: MessageEvent<any>) => {\r\n                this.onmessage(ev)\r\n            }\r\n            this.ws.onclose = () => {\r\n                //重连\r\n                window.clearInterval(this.heartBeatTimer)\r\n                this.ws = new WebSocket(this.socketConfig.socketIp)\r\n                console.log(\"exit and reconnect\")\r\n            }\r\n        } catch (e) {\r\n            this.sendNotification(BgMediatorConst.SHOW_TOAST, { content: `网络错误：${e}` })\r\n        }\r\n    }\r\n\r\n    public onmessage(ev: MessageEvent<any> | SktMessageType) {\r\n        const evData = JSON.parse(ev.data) as SktMessageType\r\n        // evData.code !== `${config.gameCode}:-${SKT_MAG_TYPE.HEART_BEAT}` && console.log(evData)\r\n        const msgArr = evData.code.split(\":-\")\r\n        if (evData.success) {\r\n            if (msgArr[0] !== config.gameCode) {\r\n                this.sendNotification(BgMediatorConst.SHOW_TOAST, { content: \"错误的游戏代码\" })\r\n                console.error('服务错误', '错误的游戏代码')\r\n                return\r\n            }\r\n            const typeCode = msgArr[1]//(parseInt(msgArr[1]) * -1) + ''\r\n            sktMsgListener.dispath(typeCode as SKT_MAG_TYPE, evData.data)\r\n        } else {\r\n            global.hallDispatch(addToastAction({ content: lang.write(k => k.WebSocketModule.socketConnectDateFail, {}, { placeStr: \"连接失败\" }) }))\r\n            if (evData['code'].includes('-2')) {\r\n                global.closeSubGame({ confirmContent: evData['reason'] })\r\n            }\r\n            console.error(`服务错误`, evData)\r\n        }\r\n    }\r\n\r\n    public sendSktMessage(msgType: SKT_MAG_TYPE, data: string | ArrayBuffer | Blob | ArrayBufferView | any) {\r\n        this.ws && this.ws.send(JSON.stringify({\r\n            code: `${config.gameCode}:${msgType}`, data\r\n        }))\r\n    }\r\n\r\n    public sendAnth() {\r\n        this.sendSktMessage(SKT_MAG_TYPE.AUTH,\r\n            {\r\n                \"token\": this.socketConfig.token,\r\n                \"gameId\": this.socketConfig.gameId,\r\n                \"roomId\": this.socketConfig.roomId\r\n            }\r\n        )\r\n    }\r\n    public calculateTheBalanceStatus() {\r\n        let gold = this.repository.rollerLaunchResult.dl.si[0].bl\r\n        let betAmount = (this.getShiftAmount(\"curr\").value) * config.linesQueue.length\r\n        this.sendNotification(BgMediatorConst.InsufficientBalanceDisplay, { bl: gold < betAmount });\r\n        return gold < betAmount\r\n    }\r\n    /**发送下注请求 */\r\n    public sendLaunch() {\r\n        // socket断开的时候临时这样搞\r\n        // window.setTimeout(() => {\r\n        //   sktMsgListener.dispath(SKT_MAG_TYPE.LAUNCH, this.repository.rollerLaunchResult)\r\n        // }, 100)\r\n        // return\r\n        let bl = this.calculateTheBalanceStatus()\r\n        if (bl) {\r\n            global.openShop()\r\n        } else {\r\n            this.sendSktMessage(SKT_MAG_TYPE.LAUNCH, {\r\n                \"positionId\": this.getShiftAmount(\"curr\").positionId,\r\n                \"tableId\": this.repository.userServerData.tableId\r\n            })\r\n            this.sendNotification( RollerMediatorConst.RINGOFFIREPANELSTATUS, { gears:this.getShiftAmount(\"curr\").positionId});\r\n        }\r\n    }\r\n    public closeSocket() {\r\n        if (this.ws) {\r\n            this.ws.close()\r\n            this.ws = null\r\n        }\r\n    }\r\n    /**获取下一档位数据(根据用户级别取得可以下注的额度列表),传max就是获取最大档位 */\r\n    public getShiftAmount(direction: 'add' | 'subtract' | \"max\" | \"curr\") {\r\n        //先获取用户\r\n        if (direction === \"add\" && this.repository.userSwitch < this.switcher.length) {\r\n            this.repository.userSwitch++\r\n        } else if (direction === \"add\" && this.repository.userSwitch === this.switcher.length) {\r\n            //this.repository.userSwitch = 1\r\n        }\r\n\r\n        if (direction === \"subtract\" && this.repository.userSwitch > 1) {\r\n            this.repository.userSwitch--\r\n        } else if (direction === \"subtract\" && this.repository.userSwitch === 1) {\r\n            //this.repository.userSwitch = switcher.length\r\n        }\r\n        if (this.repository.userSwitch != 1 && this.repository.userSwitch !== this.switcher.length) {\r\n            this.sendNotification(BgMediatorConst.SETGREYOUT, { state: 0 });\r\n        } else if (this.repository.userSwitch - 1 <= 1) {\r\n            this.sendNotification(BgMediatorConst.SETGREYOUT, { state: 1 });\r\n        } else {\r\n            this.sendNotification(BgMediatorConst.SETGREYOUT, { state: 2 });\r\n        }\r\n        if (direction === \"max\") {\r\n            this.repository.userSwitch = this.switcher.length\r\n        }\r\n        \r\n        if (this.repository.userSwitch < 6) {\r\n            let val = this.switcher[this.repository.userSwitch - 1].value\r\n            this.sendNotification(RollerMediatorConst.UPDATE_JACKPOT_TOTAL, { total: val * config.winning[3].maxRate })\r\n        }\r\n        return this.switcher[this.repository.userSwitch - 1]\r\n    }\r\n    public initUserSwitch(val) {\r\n        this.repository.userSwitch = val - 1 < 1 ? 1 : val\r\n        this.switcher = []\r\n        config.betSwitcher.map(item => {\r\n            if (this.repository.userServerData.lv >= item.level[0]) {\r\n                this.switcher.push(...item.amount)\r\n            }\r\n        })\r\n        if (this.repository.userSwitch <= 1) {\r\n            window.setTimeout(() => {\r\n                this.sendNotification(BgMediatorConst.SETGREYOUT, { state: 1 });\r\n            }, 200)\r\n        } else if(this.repository.userSwitch == this.switcher.length){\r\n            window.setTimeout(() => {\r\n                this.sendNotification(BgMediatorConst.SETGREYOUT, { state: 2 });\r\n            }, 200)\r\n        }\r\n        window.setTimeout(()=>{\r\n            let val = this.switcher[this.repository.userSwitch - 1].value\r\n            this.sendNotification(RollerMediatorConst.UPDATE_JACKPOT_TOTAL, { total: val * config.winning[3].maxRate })\r\n            // this.sendNotification(RollerMediatorConst.INIT_JACKPOT, notification.getBody());\r\n        },2000)\r\n    }\r\n    /**获取转义的游戏数据 */\r\n    public getTransferGameInfo() {\r\n        return {\r\n            // 获取停止的序号\r\n            stopIndexArr: () => {\r\n                // return this.repository.rollerLaunchResult.dl.si[0].rl.map(item => item[0])\r\n                return this.repository.rollerLaunchResult.dl.si[0].rollerId\r\n            },\r\n            /**获取需要闪动的图标列表，转成平铺数组，不闪动的加-1 */\r\n            targetList: () => {\r\n                let _linesDir = this.repository.rollerLaunchResult.dl.si[0].wp\r\n                const freegameDir = this.repository.rollerLaunchResult.dl.si[0].freegame || {}\r\n                const linesDir = {\r\n                    ..._linesDir,\r\n                    ...freegameDir\r\n                }\r\n                const lineList: Array<{ lineIndex: string, coord: Array<Array<any>> }> = []\r\n                for (let lineIndex in linesDir) {\r\n                    const lines: number[][] = linesDir[lineIndex]\r\n                    /**\r\n                     [[0,1],[0,2],[1,1],[2,2]]\r\n                     */\r\n                    const coord = [[0, []], [1, []], [2, []], [3, []], [4, []]]\r\n                    coord.forEach((item2, index2) => {\r\n                        const t = lines.filter((item3) => item3[0] === index2).map(i => i[1]);\r\n                        // const t = lines.find((item3) => item3[0] === index2)\r\n                        t.length && (item2[1] = t)\r\n                    })\r\n                    lineList.push({ lineIndex, coord })\r\n                }\r\n                return lineList\r\n            },\r\n            /**获取需要停靠的图标 */\r\n            getDockIcon: () => {\r\n                let lineList: { lineIndex: string, coord: Array<Array<any>> }\r\n                const lines: number[][] = this.repository.rollerLaunchResult.dl.si[0].fixedChessboardIcon || []\r\n                /**\r\n                 [[0,1],[0,2],[1,1],[2,2]]\r\n                 */\r\n                const coord = [[0, []], [1, []], [2, []], [3, []], [4, []]]\r\n                coord.forEach((item2, index2) => {\r\n                    const t = lines.filter((line) => line[0] === index2).map(i => [i[1], i[2]]);\r\n                    // const t = lines.find((item3) => item3[0] === index2)\r\n                    t.length && (item2[1] = t)\r\n                })\r\n                return coord\r\n            },\r\n            getDackiconLenth: () => {\r\n                const lines: number[][] = this.repository.rollerLaunchResult.dl.si[0].fixedChessboardIcon\r\n                return lines.length\r\n            },\r\n            /**获取gameType */\r\n            gameType: () => {\r\n                if (!this.repository.rollerLaunchResult) {\r\n                    return SubGameType.MAIN\r\n                }\r\n                return this.repository.rollerLaunchResult.dl.si[0].gameType as SubGameType\r\n            },\r\n            getChange: () => {\r\n                return this.repository.rollerLaunchResult.dl.si[0].change\r\n            },\r\n            getIconStay: () => {\r\n                return this.repository.rollerLaunchResult.dl.si[0].iconStay\r\n            },\r\n            setIconStay(key) {\r\n                this.repository.rollerLaunchResult.dl.si[0].iconStay = key\r\n            },\r\n            /**获取要执行的宝箱效果 */\r\n            getOpenBoxEffect: () => {\r\n                return this.repository.rollerLaunchResult.dl.si[0].lw\r\n            },\r\n            /**获取剩余抽奖次数 */\r\n            getRemainTimes: () => {\r\n                return this.repository.rollerLaunchResult.dl.si[0].freeCount\r\n            },\r\n            /**获取当前的总奖励 */\r\n            getCurrentScore: (order: 'curr' | 'total' | 'auto') => {\r\n                if (this.repository.rollerLaunchResult.dl.si[0].tbb != 0) {\r\n                    return this.repository.rollerLaunchResult.dl.si[0].tw\r\n                } else {\r\n                    if (order === 'curr') {\r\n                        return this.repository.rollerLaunchResult.dl.si[0].tw || this.repository.rollerLaunchResult.dl.si[0].freeGameAmount\r\n                    } else {\r\n                        return this.repository.rollerLaunchResult.dl.si[0].freeGameAmount\r\n                    }\r\n                }\r\n            },\r\n            /**获取奖励倍数 */\r\n            getMagnification: () => {\r\n                return this.repository.rollerLaunchResult.dl.si[0].magnification\r\n            },\r\n            /**获取用户级别 */\r\n            getUserLevel: () => {\r\n                return this.repository.userServerData.lv\r\n            },\r\n            /* 获取第几局*/\r\n            getNumberOfRounds: () => {\r\n                return this.repository.rollerLaunchResult.dl.si[0].freeCount\r\n            },\r\n            getUserGold: (state) => {\r\n                if (state === goldState.OLD_GOLD) {\r\n                    console.log(this.repository.rollerLaunchResult.dl.si[0].bl)\r\n                    return this.repository.rollerLaunchResult.dl.si[0].bl\r\n                } else if (state === goldState.PROCESS_GOLD) {\r\n                    return this.repository.rollerLaunchResult.dl.si[0].blab\r\n                } else if (state === goldState.topUpCoins) {\r\n                    return this.repository.rollerLaunchResult.dl.si[0].bl\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setGametType(gameType: number) {\r\n        this.repository.rollerLaunchResult.dl.si[0].gameType = gameType\r\n    }\r\n\r\n    public close() {\r\n        this.ws.close()\r\n    }\r\n\r\n    getLocalCacheDataProxy(): LocalCacheDataProxy {\r\n        return <LocalCacheDataProxy>this.facade.retrieveProxy(ProxyDefine.LOCAL_CACHE_DATA);\r\n    }\r\n\r\n    private connectCallback() {\r\n        sktMsgListener.add(SKT_MAG_TYPE.AUTH, 'proxy', (data) => {\r\n            this.repository.userServerData = Object.assign({}, data)\r\n            if (data.gameType === SubGameType.MAIN) {\r\n                //主游戏\r\n                this.sendNotification(CommandDefine.ROLLER, { gameType: 0 }, RollerMediatorConst.INIT_ROLLER_PANEL)\r\n            } else if (data.gameType === SubGameType.SUB_GAME1) {\r\n                // 次数游戏\r\n                this.sendNotification(CommandDefine.ROLLER, { gameType: 1 }, RollerMediatorConst.INIT_ROLLER_PANEL)\r\n            } else if (data.gameType === SubGameType.SUB_GAME2) {\r\n                //大滑槽\r\n                this.sendNotification(CommandDefine.ROLLER, { gameType: 2 }, RollerMediatorConst.INIT_ROLLER_PANEL)\r\n            }\r\n            this.initGameData(data)\r\n        })\r\n        sktMsgListener.add(SKT_MAG_TYPE.JACKPOT, 'proxy', (data) => {\r\n            this.setJackPot(data)\r\n        }, 1)\r\n        sktMsgListener.add(SKT_MAG_TYPE.JACKPOT_TOTAL, 'proxy', (data) => {\r\n            if (this.repository.userSwitch > 5) {\r\n                this.sendNotification(RollerMediatorConst.UPDATE_JACKPOT_TOTAL, { total: data })\r\n            }\r\n        }, 1)\r\n        sktMsgListener.add(SKT_MAG_TYPE.LAUNCH, 'proxy', (data) => {\r\n            this.repository.rollerLaunchResult = Object.assign({}, data)\r\n            this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD, { state: goldState.PROCESS_GOLD })\r\n            if (this.getTransferGameInfo().gameType() === 0) {\r\n                // 按钮状态\r\n                this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: false });\r\n                this.sendNotification(BgMediatorConst.INITSCORE)\r\n            }\r\n            this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL, { frequency: false })\r\n            this.setGameInfo()\r\n        }, 1)\r\n        // 后台刷新金币\r\n        sktMsgListener.add(SKT_MAG_TYPE.REFRESHCOINS, 'proxy', (data) => {\r\n            this.repository.rollerLaunchResult.dl.si[0].bl = data\r\n            this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD, { state: goldState.topUpCoins })\r\n        }, 1)\r\n        // 清退用户\r\n        sktMsgListener.add(SKT_MAG_TYPE.VACATETHEROOM, 'proxy', (data) => {\r\n            global.closeSubGame({ confirmContent: lang.write(k => k.UpdateModule.GameNotice, {}, { placeStr: \"对不起，系统维护中，请稍后再尝试登录\" }) })\r\n        }, 1)\r\n    }\r\n    public setGameInfo() {\r\n        const gameTypePre = this.getTransferGameInfo().gameType();\r\n        let obj = this.getTransferGameInfo().getChange()\r\n        if (obj && Object.keys(obj).length != 0) {\r\n            this.sendNotification(RollerMediatorConst.CHANGEPANELS, { iconStay: this.getTransferGameInfo().getChange() })\r\n        }\r\n        this.sendNotification(RollerMediatorConst.THERINGOFFIREROLLS)\r\n        const gameTypeNew = this.getTransferGameInfo().gameType();\r\n        getBgProxy().setIsChangeNextGameType(gameTypePre, gameTypeNew)\r\n        this.sendNotification(BgMediatorConst.UPDATE_GAME_STATUS)\r\n    }\r\n    public setJackPot(data) {\r\n        this.sendNotification(RollerMediatorConst.UPDATE_JACKPOT, { jackPotData: data })\r\n    }\r\n    public initGameData(data) {\r\n        Object.assign(this.repository.rollerLaunchResult.dl.si[0], data)\r\n        this.repository.rollerLaunchResult.dl.si[0].freeCount = data.freeGameCount\r\n        this.setGameInfo()\r\n        this.sendNotification(BgMediatorConst.UPDATE_USER_GOLD, { state: goldState.OLD_GOLD })\r\n        if (data.gameType === 0) {\r\n            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true, type: 0 });\r\n        } else if (data.gameType === 1) {\r\n            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true })\r\n            this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL, { frequency: this.getTransferGameInfo().getNumberOfRounds() })\r\n        }\r\n        else if (data.gameType === 2) {\r\n            this.sendNotification(BgMediatorConst.TOGGLETHESTARTBUTTON, { state: true })\r\n            this.sendNotification(RollerMediatorConst.INITDOCKIOCN, { dockIocn: this.getTransferGameInfo().getDockIcon() })\r\n            this.sendNotification(BgMediatorConst.UPDATE_BTN_LABEL, { frequency: this.getTransferGameInfo().getNumberOfRounds() })\r\n            this.sendNotification(RollerMediatorConst.REMOVE_THECHEST_LAYER, { iconStay: 1 })\r\n        }\r\n        this.sendNotification(RollerMediatorConst.UPDATETHEBACKGROUND);\r\n    }\r\n}\r\n"]}